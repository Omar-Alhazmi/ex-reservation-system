{"version":3,"sources":["components/Styles/MainHeaderStyle.js","components/ApiConfig/ApiConfig.js","components/helperMethods.js","components/ApiConfig/Api.js","components/Styles/styledTable.js","components/Instructors/Instructors.jsx","components/Instructors/InstructorNav.jsx","components/Styles/SidebarElements.js","components/Instructors/InstructorSidebar.jsx","components/Instructors/InstructorHome.jsx","components/Instructors/PrintStudentTable.jsx","components/Instructors/StudentBookedInfo.jsx","components/Moderator/UploadFileForm.jsx","components/Moderator/StudentManagement/SearchForStudent.jsx","components/Moderator/StudentManagement/index.jsx","components/Instructors/AddStudent.jsx","components/Instructors/BookingConformation.jsx","components/Styles/cards.js","components/Students/StudentExamBooking.jsx","components/Instructors/LabBooking.jsx","components/Instructors/SelectSubjectMod.jsx","components/Moderator/ModeratorNave.jsx","components/Moderator/ModeratorSidebar.jsx","components/Moderator/SummaryTable.jsx","components/Styles/StyledChart.js","components/Moderator/Home.jsx","components/Moderator/InstructorManagement/InstructorsTable.jsx","components/Moderator/InstructorManagement/InstructorsManagement.jsx","components/Moderator/LabsManagement/InformationTable.jsx","components/Moderator/LabsManagement/DisplayAllLabs.jsx","components/Moderator/LabsManagement/LabManagement.jsx","RouteManagement/PrivateRoutes.jsx","components/Login/Login.jsx","components/Students/StudentsNav.jsx","components/Students/StudentsSide.jsx","components/Students/FinishedExams.jsx","components/Students/StudentsHome.jsx","App.js","reportWebVitals.js","index.js","components/Images/logo.png"],"names":["Nav","styled","nav","_templateObject","Object","taggedTemplateLiteral","_ref","scrollNav","NavContainer","div","_templateObject2","NavLogo","NavLink","_templateObject3","Image","img","_templateObject4","_ref2","ResponsiveIcon","_templateObject5","NavMenu","ul","_templateObject6","NavItem","li","_templateObject7","NavLinks","_templateObject8","LogoutContainer","_templateObject9","Logout","button","_templateObject10","apiUrls","development","concat","production","apiURL","window","location","hostname","checkStorage","undefined","localStorage","getItem","getToken","getInfo","jwt_decode","getId","data","_id","getFullName","FullName","dateFormat","date","displayDate","Date","toString","split","DayIs","console","log","timeFormat","getHoursDiff","startDate","endDate","Math","round","abs","examDuration","from","to","hours","getHours","minutes","getMinutes","validFileType","file","includes","type","checkOverlappingDates","timeFrom","timeTo","checkTimeConflict","some","elem","moment","diff","From","To","setTimeout","clear","reload","config","headers","InstructorSingleRegistration","asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_context","prev","next","abrupt","axios","method","url","Email","password","InstructorId","Phone","InstructorReference","Subject","HasPermissionTo","stop","_x","apply","this","arguments","StudentSingleRegistration","_ref3","_callee3","_context3","StudentId","StudentReference","Instructor_id","_x3","LabRegistration","_ref4","_callee4","_context4","post","sent","_x4","NewLabBooking","_ref5","_callee5","id","_context5","_x5","_x6","StudentReserveNewTest","_ref6","_callee6","_context6","_x7","_x8","InstructorsLogin","_ref7","_callee7","_context7","_x9","StudentsLogin","_ref8","_callee8","_context8","_x10","UpdateLabById","_ref9","_callee9","_context9","_x11","_x12","UpdateInstructorById","_ref10","_callee10","_context10","_x13","_x14","UpdateStudentById","_ref11","_callee11","_context11","_x15","_x16","getInstructors","get","getAllLabs","RemoveAppointmentByLabId","_ref12","_callee12","_context12","_x17","_x18","RemoveExamBookedByStudentId","_ref13","_callee13","_context13","_x19","_x20","RemoveLabById","delete","RemoveInstructorById","RemoveStudentById","TableWrapper","styledTable_templateObject","TableTitle","h3","styledTable_templateObject2","TableWithTitleWrapper","styledTable_templateObject3","TableContainer","table","styledTable_templateObject4","TableHedContainer","thead","styledTable_templateObject5","TableBodyContainer","tbody","styledTable_templateObject6","TableTh","th","styledTable_templateObject7","TableTd","td","styledTable_templateObject8","TableTr","tr","styledTable_templateObject9","Tr","styledTable_templateObject10","Instructors","_templateObject11","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearchChange","e","index","filteredData","state","Students","filter","target","value","setState","searchIn","dataSet","students","map","currentStudent","stdIndex","react_default","a","createElement","key","_this2","then","response","catch","error","_this3","_this$state","allDivision","length","currentDiv","className","hide","onSubmit","preventDefault","for","onChange","pattern","required","class","DivisionId","Component","InstructorNav","toggle","_useState","useState","_useState2","slicedToArray","setScroll","_useState3","_useState4","setHidden","navOnChange","scrollY","useEffect","addEventListener","toggleHandler","Fragment","esm","Provider","color","onClick","duration","src","logo","alt","index_esm","offset","smooth","spy","exact","Instructors_Instructors","react_router_dist","SidebarContainer","aside","SidebarElements_templateObject","isOpen","CloseIcon","FaTimes","SidebarElements_templateObject2","SidebarMenu","SidebarElements_templateObject3","Icon","SidebarElements_templateObject4","SidebarWrapper","SidebarElements_templateObject5","SidebarLink","Link","SidebarElements_templateObject6","SideBtnWrap","SidebarElements_templateObject7","SidebarRoute","SidebarElements_templateObject8","logout","InstructorSidebar","allStudents","PrintStudentTable","student","currentStudentIndex","subject","StudentBookedInfo","saveFileHandler","Student","lib_default","trigger","fc_index_esm","content","componentRef","PrintStudentTable_PrintStudentTable","ref","el","For","InstructorHome","selectHandler","selectedRef","_this$state2","BookedLab","BookedLabIndex","LabReference","LabCapacity","StudentBookedInfo_StudentBookedInfo","UploadFileForm","InstructorRegistrationFromFile","Swal","fire","title","icon","showCancelButton","endPoint","formData","FormData","append","res","confirmButtonText","err","message","handelFileSubmit","handleFileChange","bind","assertThisInitialized","files","filePh","name","cg_index_esm","accept","SearchForStudent","handleStudentEdit","_this$props","onNameChange","handelEditToggle","Instructor","StudentFound","kye","element","refBrIndex","subBrIndex","htmlFor","StudentManagement","RegisterSingleStudent","errMessage","success","DeleteStudent","UpdateStudent","handelUpdate","updateStudent","handelSubmit","newStudent","trim","handleChange","event","defineProperty","show","editClicked","StudentDeleteHandler","text","showDenyButton","confirmButtonColor","denyButtonColor","denyButtonText","result","isConfirmed","InstructorIds","evt","toConsumableArray","selectedOptions","o","Form","ai_index_esm","placeholder","disabled","gi_index_esm","multiple","size","handleOptionChange","option","md_index_esm","SearchForStudent_SearchForStudent","UploadFileForm_UploadFileForm","AddStudent","StudentManagement_StudentManagement","history","createBrowserHistory","BookingConformation","NewBooking","currentUser","Role","BookingRefId","Lab","push","handleSubmit","_this$props$data","newBooking","Lab_id","labId","_this$props$data2","time","labDisplay","slice","CardsContainer","cards_templateObject","TeamContainer","cards_templateObject2","CardsWrapper","cards_templateObject3","SingleCard","cards_templateObject4","CardsH2","cards_templateObject5","h1","cards_templateObject6","h2","cards_templateObject7","CardsP","p","cards_templateObject8","StudentExamBooking","labHandler","labIndex","AvailableTest","lab_id","getAllTestAvailableForStudent","propsData","allLabs","available","BookingConformation_BookingConformation","LabBooking","filterHandler","LabFilter","filteredLab","AvailableIndex","Available","LabId","lab","isAvailable","SelectSubjectMod","subjectHandler","display","allSubject","LabBooking_LabBooking","StudentExamBooking_StudentExamBooking","ModeratorNave","scroll","scrollToTop","ModeratorSidebar","SummaryTable","allTimes","TeachStudents","BookingRef","LabelContainer","StyledChart_templateObject","DoughnutContainer","StyledChart_templateObject2","DoughnutContainerLear2","StyledChart_templateObject3","DoughnutTitle","label","StyledChart_templateObject4","LabelCard","StyledChart_templateObject5","greenLine","yellowLine","blueLine","orangeLine","white","green","gray","darkBlue","darkGreen","CardHeadLine","StyledChart_templateObject6","CardParagraph","StyledChart_templateObject7","LabelsContainer","StyledChart_templateObject8","StyledChart_templateObject9","ChartContainer","StyledChart_templateObject10","ChartJS","register","ArcElement","Tooltip","Legend","Home","AvailableLab","Labs","StudentCount","DivisionCount","getLabs","getAllInstructors","getDivisions","currentDivision","_this4","currentLab","genderData","labels","datasets","backgroundColor","borderColor","borderWidth","react_chartjs_2_dist","colorIs","SummaryTable_SummaryTable","InstructorsTable","handleInstructorEdit","inst","BrIndex","InstructorsManagement","RegisterSingleInstructor","UpdateInstructor","DeleteInstructor","newInstructor","updateInstructor","InstructorDeleteHandler","InstructorsTable_InstructorsTable","InformationTable","handleAppointmentDeletion","appointmentIndex","DeleteAppointments","updateIsActive","indexOf","splice","_this$props2","DisplayAllLabs","updateToggleHandler","CurrentLab","dataTimeIndex","getFullYear","getMonth","getDate","RemoveLab","status","DeleteHandel","colSpan","LabManagement","RegisterNewLab","header","LabUpdate","RemoveAppointment","deleteLastAvailableItem","newArr","pop","dateAndTimeHandler","yearAndMonth","day","ym","dayjs","$d","toJSON","d","$D","tf","tto","getTime","prevState","State","newLab","handelDeleteSubmit","_this$state3","DeleteAppointment","handelUpdateSubmit","_this$state4","UpdateLab","RemoveOnChange","handelBackClicked","_this$state5","toDay","nextYear","nextYearFormate","toDayFormate","selectedMonth","lastDayInMonth","daysInMonth","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","minDate","maxDate","newValue","renderInput","params","TextField","assign","helperText","DesktopTimePicker","InformationTable_InformationTable","DisplayAllLabs_DisplayAllLabs","token","PrivateRouteInstructor","PrivateRouteStudents","PrivateRouteModerator","Login","Id","InstructorLoginCredential","loginCredential","checkValidation","entries","forEach","setItem","jwt","showConfirmButton","timer","_unused","_unused2","io_index_esm","StudentsNav","StudentsSide","FinishedExams","finishedExam","allExam","StudentsHome","removeBookedAppointment","currentAppointment","removeAppointment","currentBooking","removeBookingLimit","App","setIsOpen","dist","path","Login_Login","PrivateRoutes_PrivateRouteStudents","StudentsNav_StudentsNav","SelectSubjectMod_SelectSubjectMod","StudentsHome_StudentsHome","PrivateRoutes_PrivateRouteInstructor","Instructors_InstructorNav","InstructorHome_InstructorHome","AddStudent_AddStudent","PrivateRoutes_PrivateRouteModerator","Moderator_ModeratorNave","Home_Home","LabManagement_LabManagement","InstructorsManagement_InstructorsManagement","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports"],"mappings":"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","file":"static/js/main.209929dd.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\n\n\nexport const Nav = styled.nav`\n\nbackground: ${({ scrollNav }) => (scrollNav ? '#c6e4d1' : 'transparent')};\nheight: 103px;\n/* margin-top: -80px; */\ndisplay: flex;\n-webkit-flex-direction: column; \n  flex-direction: column; \n  padding: 0;\n  margin: 0;\n  list-style: none;\n  -ms-box-orient: horizontal;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -moz-flex;\n  display: -webkit-flex;\n  display: flex;\njustify-content: right;\nalign-items: right;\nfont-size: 1rem;\nposition: sticky;\ntop: 0;\nz-index: 10;\n@media screen and (max-width:960px){\n     transition: 0.8s all ease;\n     display: grid;\n    justify-content: center;\n    margin: 17px 0;\n}`;\nexport const NavContainer = styled.div`\ndisplay: flex;\njustify-content: space-between;\nheight: 103px;\nz-index: 1;\nwidth: -webkit-fill-available;\npadding: 0 24px;\nmax-width: 1387px; `;\n\nexport const NavLogo = styled(NavLink)`\ncolor: #fff;\njustify-self: flex-end;\ncursor: pointer;\nfont-size:1.5rem;\ndisplay: flex;\nalign-items: center;\nmargin-right: 24px;\nfont-weight: bold;\ntext-decoration: none;\n\n`;\nexport const Image = styled.img`\n    width: ${({ scrollNav }) => (scrollNav ? `100px` : `227px`)};\n    margin: auto;\n    @media screen and (max-width:960px){\n        width: 130px;\n        display: grid;\n    justify-content: center;\n        }\n    `\n\nexport const ResponsiveIcon = styled.div`\ndisplay:none;\n@media screen and (max-width: 769px){\n    display: grid;\n    position: absolute;\n    color: #607d8b;\n    top: 0;\n    right: 0;\n    transform: translate(-100%,60%); \n    font-size: 1.8rem;\n    cursor: pointer;\n}`;\n\nexport const NavMenu = styled.ul`\ndisplay: flex;\nalign-items: center;\nlist-style: none;\ntext-align: center;\nmargin: revert;\nbackground-color: #efefef;\nborder-radius: 50px;\npadding: 0 10px;\ncolor: #607d8b;\n@media screen and (max-width:769px){\n    display:none;\n}`;\n\nexport const NavItem = styled.li`\n`;\n\nexport const NavLinks = styled(NavLink)`\ndisplay: flex;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\ncolor: #23bbc8;\n&:hover{\n  color: #636467;\n}\n&.active{\n    border-bottom: 2px solid #607d8b;\n}`;\n\n\nexport const LogoutContainer = styled.div`\n    display: flex;\n    height: fit-content;\n    justify-content: flex-end;\n    height: auto;\n@media screen and (max-width: 769px) {\n    display: none;\n}`\nexport const Logout = styled.button`\nheight: fit-content;\nalign-self: center;\nborder-radius: 50px;\nwhite-space: nowrap;\npadding: 10px 22px;\ntext-align:left;\nfont-size: 16px;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #3EC1B9;\n&:hover{\n  color: #B38533;\n}\n`","let apiURL ;\n\nconst expressPort = 5000;\nconst apiUrls = {\n    development:`http://localhost:${expressPort}/`,\n    production:``,\n} \n\nif( window.location.hostname === 'localhost' ){\n    apiURL = apiUrls.development;\n} else{\n    apiURL = apiUrls.production;\n}\n\nexport default apiURL; ","import jwt_decode from 'jwt-decode';\nimport moment from 'moment';\n\nexport const checkStorage = () => {\n  return (localStorage.getItem('currentUser') !== undefined && localStorage.getItem('currentUser') !== null) ? true : false;\n};\nexport const getToken = () => {\n  return (checkStorage()) ? localStorage.getItem('currentUser') : false\n};\nexport const getInfo = () => {\n  return (checkStorage()) ? jwt_decode(localStorage.getItem('currentUser')) : false\n};\nexport const getId = () => {\n  if (checkStorage()) {\n    return getInfo().data._id\n  }\n}\nexport const getFullName = () => {\n  if (checkStorage()) {\n    return getInfo().data.FullName\n  }\n}\nexport const dateFormat = (date) => {\n  let displayDate = new Date(date)\n  displayDate = displayDate.toString().split(' ')\n  return `${displayDate[2]} ${displayDate[1]} ${displayDate[3]}`\n}\nexport const DayIs = (date) => {\n  let displayDate = new Date(date)\n  console.log(displayDate,date);\n  displayDate = displayDate.toString().split(' ')\n  switch (displayDate[0]) {\n    case \"Sat\":\n      displayDate = \"السبت\";\n      break;\n    case \"Sun\":\n      displayDate = \"الأحد\";\n      break;\n    case \"Mon\":\n      displayDate = \"الاثنين\";\n      break;\n    case \"Tue\":\n      displayDate = \"الثلاثاء\";\n      break;\n    case \"Wed\":\n      displayDate = \"الأربعاء\";\n      break;\n    case \"Thu\":\n      displayDate = \"الخميس\";\n      break;\n    case \"Fri\":\n      displayDate = \"الجمعة\";\n      break;\n    default:displayDate = \tdisplayDate[0]\n  }\n  return `${displayDate}`\n}\nexport const timeFormat = (date) => {\n  let displayDate = new Date(date)\n  displayDate = displayDate.toString().split(' ')\n  displayDate = displayDate[4].split(':')\n  return displayDate[0] + ':' + displayDate[1]\n}\nexport const getHoursDiff = (startDate, endDate) => {\n  const msInHour = 1000 * 60 * 60;\n  return Math.round(Math.abs(endDate - startDate) / msInHour);\n}\nexport const examDuration = (from, to) => {\n  const hours = (new Date(to).getHours() - new Date(from).getHours());\n  const minutes = (new Date(to).getMinutes() - new Date(from).getMinutes());\n  return `${hours}:${minutes}`\n}\nexport const validFileType = (file) => {\n  const fileTypes = [\n    \"application/vnd.ms-excel\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n  ];\n  return fileTypes.includes(file.type);\n}\n\n\n\nexport const checkOverlappingDates = (timeFrom, timeTo, checkTimeConflict) => {\n  return checkTimeConflict.some((elem) => {\n    return (!((moment(timeTo).diff(moment(elem.From))) < 0 ||\n      (moment(timeFrom).diff(moment(elem.To))) > 0\n    ))\n  })\n}\nexport const validFileTypePDF = (file) => {\n  const fileTypes = [\n    \"application/pdf\",\n  ];\n  return fileTypes.includes(file.type);\n}\n// start the time out\nconst EXPIRE_TIME = 1000 * 60 * 60 * 5;\nsetTimeout(function () {\n  localStorage.clear();\n  window.location.reload(false);\n}, EXPIRE_TIME);","import apiURL from './ApiConfig';\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\n\nimport { checkStorage, getToken } from '../helperMethods';\n//================== Helper Method ============================||\nconst config = {\n    headers: {}\n}\nif (checkStorage()) {\n    config.headers['Authorization'] = `Bearer ${getToken()}`\n}\n\n//================== Helper Method ============================||\n//---------------All POST Request-------------------//\n\n//========================= Register Single Instructor =============================\\\\\nexport const InstructorSingleRegistration = async (req) => {\n    return axios({\n        method: 'POST',\n        url: apiURL + 'api/Instructor/register',\n        data: {\n            FullName: req.FullName,\n            Email: req.Email,\n            password: req.password,\n            InstructorId: req.InstructorId,\n            Phone: req.Phone,\n            InstructorReference: req.InstructorReference,\n            Subject: req.Subject,\n            HasPermissionTo: req.HasPermissionTo\n        }\n    },\n    config)\n}\n//========================= Add Instructors From File =============================\\\\\nexport const InstructorFileRegistration = async (File) => {\n    const formData = new FormData();\n    formData.append(\"file\", File);\n    return await axios.post(`${apiURL}api/upload/Instructor/register/fromFile`, formData, config)\n        .then(res => {\n            if (res === \"Error\") {\n                Swal.fire({\n                    title: ` ${res.data.message}`,\n                    icon: 'error',\n                    showCancelButton: false,\n                })\n            }\n            window.location.reload(false)\n        }\n        ).catch(err => console.log(err));\n};\n//========================= Register Single Student =============================\\\\\nexport const StudentSingleRegistration = async (req) => {\n    return axios({\n        method: 'POST',\n        url: apiURL + 'api/Student/register',\n        data: {\n            FullName: req.FullName,\n            Email: req.Email,\n            password: req.password,\n            StudentId: req.StudentId,\n            Phone: req.Phone,\n            StudentReference: req.StudentReference,\n            Subject: req.Subject,\n            Instructor_id: req.Instructor_id\n        },\n        config: config\n    })\n}\n//========================= Register Single Student =============================\\\\\nexport const LabRegistration = async (req) => {\n    return await axios.post(`${apiURL}api/add/new/lab`, req, config)\n}\nexport const NewLabBooking = async (req,id) => {\n    return await axios.post(`${apiURL}api/instructor/booking/new/lab/${id}`, req, config)\n}\nexport const StudentReserveNewTest = async (req,id) => {\n    return await axios.post(`${apiURL}api/student/book/new/test/${id}`, req,config)\n}\nexport const InstructorsLogin = async (req) => {\n    return await axios.post(`${apiURL}api/Instructor/login`, req)\n}\nexport const StudentsLogin = async (req) => {\n    return await axios.post(`${apiURL}api/Student/login`, req)\n}\nexport const getAllTestAvailableForStudent = (id,req) => {\n    return axios.post(`${apiURL}api/get/all/available/test/byStudent/${id}`,req, config);\n  }\n//---------------All Update-----------------------//\n\nexport const UpdateLabById = async (req,id) => {\n    return await axios.post(`${apiURL}api/update/lab/${id}`, req, config)\n}\nexport const UpdateInstructorById = async (req,id) => {\n  return await axios.post(`${apiURL}api/update/Instructor/by/${id}`, req, config)\n}\n\nexport const UpdateStudentById = async (req,id) => {\n  return await axios.post(`${apiURL}api/update/Student/by/${id}`, req, config)\n}\n//---------------All GET Request-------------------//\n  export const getInstructorById = (id) => {\n    return axios.get(`${apiURL}api/get/all/Instructor/${id}`);\n  }\n  export const getInstructors = () => {\n    return axios.get(`${apiURL}api/get/all/Instructor`);\n  }\n  export const getAllDivision = () => {\n    return axios.get(`${apiURL}api/Find/All/Divisions`);\n  }\n  \n  export const getAllAvailableLabs = () => {\n    return axios.get(`${apiURL}api/get/all/available/lab`,config);\n  }\n  export const getAllBookedLabByInstructorId = (id) => {\n    return axios.get(`${apiURL}api/Find/all/booked/Lab/${id}`,config);\n  }\n  export const getAllBookedLabByStudentId = (id) => {\n    return axios.get(`${apiURL}api/Find/all/booked/test/${id}`,config);\n  }\n  export const getAllLabs = () => {\n    return axios.get(`${apiURL}api/get/all/lab`);\n  }\n  export const getStudentsByInstructorId = (id) => {\n    return axios.get(`${apiURL}api/Find/All/Division/by/instructorId/${id}`);\n  }\n  export const getAllInstructorId = () => {\n    return axios.get(`${apiURL}api/get/all/InstructorId`,config);\n  }\n  export const getAllStudents = () => {\n    return axios.get(`${apiURL}api/get/all/Student`,config);\n  }\n  //---------------All remove Request-------------------//\nexport const RemoveAppointmentByLabId = async (req,id) => {\n    return await axios.post(`${apiURL}api/remove/appointment/by/Lab/${id}`, req, config)\n}\nexport const RemoveExamBookedByStudentId = async (id,req) => {\n  return await axios.post(`${apiURL}api/student/delete/booked/test/${id}`, req, config)\n}\n  export const RemoveLabById = (id) => {\n    return axios.delete(`${apiURL}api/delete/lab/by/${id}`);\n}\nexport const RemoveInstructorById = (id) => {\n  return axios.delete(`${apiURL}api/remove/instructor/by/${id}`,config);\n}\nexport const RemoveStudentById = (id) => {\n  return axios.delete(`${apiURL}api/remove/student/by/${id}`,config);\n}\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//\nexport const RemoveCollections= () => {\n  return axios.delete(`${apiURL}api/remove/collections`,config);\n}\n","import styled from 'styled-components'\nexport const TableWrapper = styled.div`\n    // margin: 10px 70px 70px;\n    box-shadow: 0px 0px 26px rgba( 0, 0, 0, 0.2 );\n    @media (max-width: 767px) {\n        margin: auto;\n        &:before{\n        display: block;\n        text-align: right;\n        font-size: 11px;\n        color: white;\n        padding: 0 0 10px;\n    }\n}\n`\nexport const TableTitle = styled.h3`\n    text-align: center;\n    margin-bottom: 1rem;\n`\nexport const TableWithTitleWrapper = styled.div`\n    display: flow-root;\n    width: 100%;\n    padding: 2%;\n    margin-top: 2%;\n`\nexport const TableContainer = styled.table`\n    border-radius: 5px;\n    font-size: 12px;\n    font-weight: normal;\n    border: none;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    background-color: white;\n    // box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n    // margin-top: 12%;\n    @media (max-width: 767px) {\n    display: block;\n        width: 100%;\n }\n`\n\nexport const TableHedContainer = styled.thead`\n    -webkit-box-shadow:-3px 6px 2px 0 rgb(0 0 0 / 14%), 0 3px 1px -2px rgb(0 0 0 / 12%), 0 1px 0px 0 rgb(0 0 0 / 0%);\n    @media (max-width: 767px) {\n        display: block;\n        float: right;\n    }\n`\nexport const TableBodyContainer = styled.tbody`\n@media (max-width: 767px) {\n    display: block;\n    width: auto;\n    position: relative;\n    overflow-x: auto;\n}\n`\nexport const TableTh = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    font-size: 1.2rem;\n    background: #4FC3A1;\n    &:nth-child(odd) {\n    color: #ffffff;\n    background: #324960;\n}\n@media (max-width: 767px) {\n    display: block;\n    &:last-child{\n        border-bottom: none;\n    }\n    padding: 20px .625em .625em .625em;\n        height: 60px;\n        vertical-align: middle;\n        box-sizing: border-box;\n        overflow-x: hidden;\n        overflow-y: auto;\n        width: 120px;\n        font-size: 1rem;\n        text-overflow: ellipsis;\n        text-align: center;\n        border-bottom: 1px solid #f7f7f9;\n        border-bottom: 1px solid #f7f7f9;\n}\n`\nexport const TableTd = styled.td`\n    text-align: center;\n    padding: 8px;\n    border-left: 1px solid #f8f8f8;\n    font-size: 0.90rem;\n    @media (max-width: 767px) {\n        padding: 20px .625em .625em .625em;\n        height: 60px;\n        vertical-align: middle;\n        box-sizing: border-box;\n        overflow-x: hidden;\n        overflow-y: auto;\n        width: 120px;\n        font-size: 13px;\n        text-overflow: ellipsis;\n        &:nth-child(odd) {\n        background: #F8F8F8;\n        border-left: 1px solid #E6E4E4;\n    }\n    &:nth-child(even) {\n        border-left: 1px solid #E6E4E4;\n    }\n        display: block;\n    }\n`\nexport const TableTr = styled.tr`\n\n&:nth-child(even) {\n    background: #F8F8F8;\n}\n@media (max-width: 767px) {\n    display: table-cell;\n&:nth-child(even) {\n        background: transparent;\n    }\n    }\n`\nexport const Tr = styled.tr`\n@media (max-width: 767px) {\ndisplay: table-cell;\n}\n`\n\nexport const AcReButton = styled.button`\n-webkit-appearance: none;\n    padding: 6%;\n    background: -webkit-gradient(to right, #a2ccb6 0%, #fceeb5 50%, #ee786e 100%);\n    background: linear-gradient(to right, #4e4376, #2b5876);\n    border-radius: 5rem;\n    border:none;\n    box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 15%);\n    color: #fff;\n    cursor: pointer;\n    color: #fff;\n    cursor: pointer;\n    font: 1.5em Raleway, sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    height: 3rem;\n    letter-spacing: 0.05em;\n    outline: none;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    width: fit-content;\n    justify-self: center;\n    margin-top: 10%;\n    align-items: center;\n    justify-content: center;\n    align-self: center;\n    justify-self: center;\n    margin: 5%;\n    &:hover {\n  animation-name: gradient;\n  -webkit-animation-name: gradient;\n  animation-duration: 2s;\n  -webkit-animation-duration: s;\n  animation-iteration-count: 1;\n  -webkit-animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  -webkit-animation-fill-mode: forwards;\n  background: #c6e4d1;\n  }\n`","import React, { Component } from 'react'\nimport { getStudentsByInstructorId } from '../ApiConfig/Api';\nimport * as TableElement from '../Styles/styledTable';\nimport { getFullName, getId } from '../helperMethods'\nimport '../../App.css'\nimport '../Styles/searchBar.css';\nexport default class Instructors extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      filteredData: [],\n      searchIn: null\n    }\n  }\n  componentDidMount() {\n    getStudentsByInstructorId(getId())\n      .then(response => {\n        console.log(response);\n        this.setState({ data: response.data })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  handleSearchChange = (e, index) => {\n    const { data } = this.state;\n    const filteredData = data[index].Students.filter(Students => Students.FullName.includes(e.target.value) || Students.StudentId.includes(e.target.value))\n    this.setState({ filteredData, searchIn: index })\n  }\n  dataSet = (students) => {\n    return (\n      students.map((currentStudent, stdIndex) => {\n        return <TableElement.TableTr key={stdIndex}>\n          <TableElement.TableTd>{currentStudent.StudentId}</TableElement.TableTd>\n          <TableElement.TableTd>{currentStudent.FullName}</TableElement.TableTd>\n          <TableElement.TableTd>{currentStudent.Phone}</TableElement.TableTd>\n        </TableElement.TableTr>\n      }))\n  }\n  render() {\n    const { data, filteredData,searchIn } = this.state;\n    let allDivision = \"...\"\n    if (data.length > 0) {\n      allDivision = data.map((currentDiv, index) => {\n        return( \n        <TableElement.TableWithTitleWrapper className={this.props.hide ? 'hide' : 'display'} key={index} > \n          <TableElement.TableWrapper>\n          <TableElement.TableContainer>\n            <TableElement.TableHedContainer>\n              <TableElement.TableTr>\n                <TableElement.TableTh>رقم الشعبة</TableElement.TableTh>\n                <TableElement.TableTh>المادة</TableElement.TableTh>\n                <TableElement.TableTh className='search--body'><form\n                  onSubmit={(e) => e.preventDefault()}\n                  className='search--form'>\n                  <label className='search--label' for=\"search\">Search</label>\n                  <input className='search--input' onChange={(e) => this.handleSearchChange(e, index)} id=\"search\" type=\"search\" pattern=\".*\\S.*\" required />\n                  <span class=\"caret\"></span>\n                </form>\n                </TableElement.TableTh>\n              </TableElement.TableTr>\n            </TableElement.TableHedContainer>\n            <TableElement.TableBodyContainer>\n              <TableElement.TableTr>\n                <TableElement.TableTd>{currentDiv.DivisionId}</TableElement.TableTd>\n                <TableElement.TableTd >{currentDiv.Subject}</TableElement.TableTd>\n                <TableElement.TableTd >{`\\t\\t\\t\\t\\t\\t`}</TableElement.TableTd>\n              </TableElement.TableTr>\n            </TableElement.TableBodyContainer>\n            <TableElement.TableHedContainer>\n              <TableElement.TableTr>\n                <TableElement.TableTh> الرقم الاكاديمي</TableElement.TableTh>\n                <TableElement.TableTh>اسم المتدرب</TableElement.TableTh>\n                <TableElement.TableTh>الجوال</TableElement.TableTh>\n              </TableElement.TableTr>\n            </TableElement.TableHedContainer>\n            <TableElement.TableBodyContainer>\n              {(filteredData.length > 0 && searchIn === index) ? this.dataSet(filteredData) : this.dataSet(currentDiv.Students)}\n            </TableElement.TableBodyContainer>\n          </TableElement.TableContainer>\n        </TableElement.TableWrapper>\n        </TableElement.TableWithTitleWrapper>\n        )\n      })\n    }\n    return (\n      <div>\n        <div>\n          <h3 className='display--name'>\n            {getFullName()}\n          </h3>\n        </div>\n        {allDivision}\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nimport Instructors from './Instructors';\nimport '../../App.css'\nconst InstructorNav = ({ toggle }) => {\n    const [scrollNav, setScroll] = useState(false);\n    const [hide, setHidden] = useState(true);\n\n    const navOnChange = () => {\n        if (window.scrollY >= 30) {\n            setScroll(true);\n        } else {\n            setScroll(false);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('scroll', navOnChange);\n    }, []);\n    const toggleHandler = () => {\n        setHidden(true)\n    };\n    const displayDivision = ()=>{\n        setHidden(false)\n    };\n    const logout = (e) => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#607d8b' }}>\n                <MainHeader.Nav scrollNav={scrollNav}>\n                    <MainHeader.NavContainer >\n                        <MainHeader.NavLogo to='/Instructor/' onClick={displayDivision}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                        <MainHeader.ResponsiveIcon onClick={toggle}>\n                            <FaBars className=\"FaBarsIcon\" />\n                        </MainHeader.ResponsiveIcon>\n                        <MainHeader.NavMenu>\n                        <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/Home'}\n                                    duration={500}\n                                   offset={-80}\n                                   onClick={toggleHandler}\n                                >استعراض الحجوزات</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/AddStudent'}\n                                    duration={500}\n                                   offset={-80}\n                                   onClick={toggleHandler}\n                                >اضافة متدرب</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/LabBooking'}\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                    onClick={toggleHandler}\n                                   offset={-80}\n                                > حجز القاعات</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                        </MainHeader.NavMenu>\n                        <MainHeader.LogoutContainer>\n                            <MainHeader.Logout\n                                duration={500}\n                                spy={true.toString()}\n                                exact={true.toString()}\n                                onClick={e => logout(e)}>\n                                تسجيل الخروج\n                            </MainHeader.Logout>\n                        </MainHeader.LogoutContainer>\n                    </MainHeader.NavContainer>\n                </MainHeader.Nav>\n            </IconContext.Provider>\n            <Instructors hide={hide}/>\n            <Outlet />\n        </>\n    )\n}\nexport default InstructorNav","import styled from 'styled-components';\nimport { Link} from 'react-router-dom';\nimport {FaTimes} from 'react-icons/fa';\n\nexport const SidebarContainer = styled.aside`\nposition: fixed;\nz-index: 999;\nwidth: 100%;\nheight: 100%;\nbackground: #0d0d0d;\ndisplay: grid;\nalign-items: center;\ntop: 0;\nleft: 0;\ntransition: 0.3s ease-in-out;\nopacity: ${({ isOpen }) => (isOpen ? '100%' : '0')};\ntop:${({ isOpen }) => (isOpen ? '0' : '-100%')};`;\n\nexport const CloseIcon = styled(FaTimes)`\ncolor: #607d8b;`;\n\nexport const SidebarMenu = styled.ul`\ndisplay: grid;\ngrid-template-columns: 1fr;\ngrid-template-rows: repeat(6, 80px);\ntext-align: center;\n@media screen and (max-width: 480px){\n    grid-template-rows:repeat(6,60px);\n}`;\n\nexport const Icon = styled.div`\nposition: absolute;\ntop: 1.2rem;\nright: 1.5rem;\nbackground: transparent;\nfont-size: 2rem;\ncursor: pointer;\noutline: none;`\n\nexport const SidebarWrapper = styled.div`\ncolor: #fff;\n`\nexport const SidebarLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\njustify-content : center;\nfont-size: 1.5rem;\ntext-decoration: none;\nlist-style: none;\ntransition: 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #3EC1B9;\ncursor: pointer;\n&:hover {\n    color: #01bf71;\n    transition: 0.2s ease-in-out;\n}\n`\nexport const SideBtnWrap = styled.div`\ndisplay: flex;\njustify-content: center;\n`\nexport const SidebarRoute = styled(Link)`\nborder-radius: 50px;\nbackground: #01bf71;\nwhite-space: nowrap;\npadding: 16px 64px;\ncolor: #010606;\nfont-size: 16px;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n&:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color:#010606;\n}`","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\nexport default function InstructorSidebar({isOpen,toggle}) {\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Instructor/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Instructor/AddStudent\" onClick={toggle} > اضافة متدرب </SidebarLink>\n        <SidebarLink to=\"/Instructor/LabBooking\" onClick={toggle}>حجز القاعات</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React, { Component } from 'react'\nimport { getAllBookedLabByInstructorId } from '../ApiConfig/Api';\nimport { getId,dateFormat,timeFormat } from '../helperMethods';\nimport * as StyledTable from '../Styles/styledTable'\nimport StudentBookedInfo from './StudentBookedInfo';\nimport '../Styles/spinner.css'\nlet allStudents\nexport default class InstructorHome extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      response: [],\n      selectedRef:false,\n      students:[]\n    }\n  }\n\n  componentDidMount() {\n    // Mack API call \n    getAllBookedLabByInstructorId(getId())\n      .then((response) => {\n        console.log(response);\n        this.setState({ response: response.data })\n      })\n      // console.log(response);\n      // this.setState({ response: response.data});\n      // })\n      .catch((error) => {\n      })\n  }\n  selectHandler = (index) =>{\n    const {selectedRef,response} = this.state\n    this.setState({selectedRef: !selectedRef,students: response[index]})\n  }\n  render() {\n    const {response, selectedRef,students} = this.state\n    if (response) {\n      allStudents = (\n        <StyledTable.TableContainer>\n          <StyledTable.TableBodyContainer>\n            <StyledTable.TableTr>\n              <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            </StyledTable.TableTr>\n          </StyledTable.TableBodyContainer>\n        </StyledTable.TableContainer>\n      )\n    }\n    if (response) {\n      if (response.length > 0) {\n        allStudents = response.map((BookedLab, BookedLabIndex) => {\n                return (\n                  <StyledTable.TableTr className='single--icon' key={BookedLabIndex} onClick={()=>this.selectHandler(BookedLabIndex)}>\n                    <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n                    <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabCapacity}</StyledTable.TableTd>\n                    <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n                    <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n                  </StyledTable.TableTr>\n                )\n              })\n            }\n      }\n    return (\n      <div>\n      {(!selectedRef)?<StyledTable.TableWithTitleWrapper><StyledTable.TableWrapper>\n        <StyledTable.TableContainer>\n          <StyledTable.TableHedContainer>\n          </StyledTable.TableHedContainer>\n          <StyledTable.TableHedContainer>\n            <StyledTable.Tr>\n              <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n              <StyledTable.TableTh className=\"tableHeader\"> الطاقة الاستيعابية</StyledTable.TableTh>\n              <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n              <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n            </StyledTable.Tr>\n          </StyledTable.TableHedContainer>\n          <StyledTable.TableBodyContainer>\n            {allStudents}\n          </StyledTable.TableBodyContainer>\n        </StyledTable.TableContainer>\n      </StyledTable.TableWrapper >\n      </StyledTable.TableWithTitleWrapper>\n     :<StudentBookedInfo data={students} toggle={this.selectHandler}/>}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport logo from '../Images/logo.png'\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport '../Styles/printStyle.css'\n\nexport default class PrintStudentTable extends Component {\n    render() {\n        let allStudents = \"...\"\n        if (this.props.student.length > 0) {\n            allStudents = this.props.student.map((currentStudent, currentStudentIndex) => {\n                return (\n                    <tr className='cell--border print--break' key={currentStudentIndex}>\n                        <td className=\"table--cell\">{currentStudentIndex + 1}</td>\n                        <td className=\"table--cell\">{currentStudent.StudentId}</td>\n                        <td className=\"table--cell\">{currentStudent.FullName}</td>\n                        <td className=\"table--cell\">{\"  \\t\\t\\t \\t \"}</td>\n                    </tr>\n                )\n            })\n        }\n        return (\n            <>\n                <table className='print--container table--direction hide' >\n                    <thead><tr><td>\n                        <div class=\"header-space\">  <div class=\"header\"><MainHeader.Image src={logo} alt=\"\" /> </div>\n                            <h3 className='print--heder--subject'>{`اختبار مادة:\\t  ${this.props.subject}`}</h3>\n                            <h4 className='print--heder--duration'>{`مدة الاختبار : ${this.props.duration} س`}</h4>\n                        </div>\n                    </td></tr></thead>\n                    <tbody><tr><td className='content--container'>\n                        <table className='print--mode table--cell table--direction' id='studentTable'>\n                            <thead>\n                                <tr className='print--break'>\n                                    <th className=\"table--cell\">{\" \"}</th>\n                                    <th className=\"table--cell\">  الرقم الاكاديمي</th>\n                                    <th className=\"table--cell\"> اسم المتدرب</th>\n                                    <th className=\"table--cell\">{\"\\t التوقيع\"}</th>\n                                </tr>\n                            </thead>\n                            <tbody className='tbody-container'>\n                                {allStudents}\n                            </tbody>\n                        </table>\n                    </td></tr></tbody>\n                    <tfoot><tr ><td>\n                        <div class=\"footer-space\"><div class=\"footer\"></div></div>\n                    </td></tr></tfoot>\n                </table>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../Styles/styledTable'\nimport PrintStudentTable from './PrintStudentTable'\nimport { examDuration } from '../helperMethods';\nimport ReactToPrint from \"react-to-print\";\nimport '../Styles/printStyle.css'\nimport { FcPrint } from 'react-icons/fc';\nexport default class StudentBookedInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            toggle: false\n        }\n    }\n    saveFileHandler = () => {\n        this.setState({ toggle: !this.state.toggle })\n    }\n\n    render() {\n        let allStudents = (\n            <StyledTable.TableContainer>\n                <StyledTable.TableBodyContainer>\n                    <StyledTable.TableTr>\n                        <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n        )\n        if (this.props.data.Student.length > 0) {\n            allStudents = this.props.data.Student.map((currentStudent, currentStudentIndex) => {\n                return (\n                    <StyledTable.TableTr key={currentStudentIndex}>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudentIndex + 1}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudent.StudentId}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudent.FullName}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n\n        return (\n            <>\n                <div className='print--icon--container'>\n                    <ReactToPrint\n                        trigger={() => <FcPrint className='print--icon' />}\n                        content={() => this.componentRef}\n                    />\n                    <PrintStudentTable ref={el => (this.componentRef = el)} student={this.props.data.Student} subject={this.props.data.For} duration={examDuration(this.props.data.From, this.props.data.To)} />\n                </div>\n                <StyledTable.TableWithTitleWrapper>\n                <StyledTable.TableWrapper>\n                    <StyledTable.TableContainer id='studentTable'>\n                        <StyledTable.TableHedContainer>\n                            <StyledTable.Tr>\n                                <StyledTable.TableTh className=\"tableHeader\">{\" \"}</StyledTable.TableTh>\n                                <StyledTable.TableTh className=\"tableHeader\">  الرقم الاكاديمي</StyledTable.TableTh>\n                                <StyledTable.TableTh className=\"tableHeader\"> اسم المتدرب</StyledTable.TableTh>\n                            </StyledTable.Tr>\n                        </StyledTable.TableHedContainer>\n                        <StyledTable.TableBodyContainer>\n                            {allStudents}\n                        </StyledTable.TableBodyContainer>\n                    </StyledTable.TableContainer>\n                </StyledTable.TableWrapper >\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}","import React, { Component } from 'react'\nimport '../Styles/popupModal.css'\nimport Swal from \"sweetalert2\";\nimport { CgSoftwareUpload } from 'react-icons/cg';\nimport { checkStorage, getToken, validFileType } from '../helperMethods';\nimport apiURL from '../ApiConfig/ApiConfig';\nimport axios from 'axios';\nexport default class UploadFileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: \"\"\n        }\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handelFileSubmit = this.handelFileSubmit.bind(this);\n    }\n    InstructorRegistrationFromFile = (file) => {\n        const config = {\n            headers: {}\n        }\n        if (checkStorage()) {\n            config.headers['Authorization'] = `Bearer ${getToken()}`\n        }\n        if (file === \"\" || file === null || file === undefined) {\n            throw Swal.fire({\n                title: ` الرجاء ارفاق الملف`,\n                icon: 'error',\n                showCancelButton: false,\n            })\n        } else {\n            if (!validFileType(file)) {\n                throw Swal.fire({\n                    title: ` الرجاء التأكد من امتداد  الملف  ان يكون تابع لملفات {xls,xlsx} `,\n                    icon: 'error',\n                    showCancelButton: false,\n                })\n            }\n        }\n        let endPoint = this.props.from;\n        (endPoint === \"instructor\") ? endPoint = 'api/upload/Instructor/register/fromFile' : endPoint = 'api/upload/Student/register/fromFile';\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        axios.post(`${apiURL}${endPoint}`, formData, config)\n            .then(res => {\n                Swal.fire({\n                    title: ` تم التسجيل  بنجاح`,\n                    icon: 'success',\n                    confirmButtonText: 'موافق',\n                    showCancelButton: false,\n                })\n                this.props.toggleHandler()\n            }\n            ).catch(err => {\n                console.log(err.response);\n                if(err.response.data){\n                Swal.fire({\n                    title: ` ${err.response.data.message}`,\n                    icon: 'warning',\n                    showCancelButton: false,\n                })\n            }else{\n                Swal.fire({\n                    title: ` حدث خطاء`,\n                    icon: 'warning',\n                    showCancelButton: false,\n                })   \n            }\n            });\n    }\n    handleFileChange(e) {\n        const file = e.target.files[0];\n        this.setState({ file: file })\n    }\n    handelFileSubmit = e => {\n        e.preventDefault();\n        const { file } = this.state\n        this.InstructorRegistrationFromFile(file);\n    };\n    render() {\n        const { file } = this.state\n        console.log(file);\n        let filePh = \"\"\n        if (file !== \"\") filePh = file.name\n        else filePh = \"الرجاء ارفاق الملف\";\n        return (\n            <div className='modalContainer'>\n                <div className=\"modal-container\" id=\"modal-opened\">\n                    <div className=\"modal\">\n                        <form onSubmit={e => this.handelFileSubmit(e)}>\n                            <div className=\"modal__details\">\n                                <div className=\"flex-row-file modal__btn\">\n                                    <label className=\"lf-label-file\" for=\"file\">\n                                        <CgSoftwareUpload />\n                                    </label>\n                                    <input type=\"file\"\n                                        id=\"file\"\n                                        required\n                                        className='lf--input uploadFile'\n                                        name=\"file\"\n                                        accept={validFileType(file)}\n                                        onChange={e => this.handleFileChange(e)}\n                                    />\n                                    <label className=\"fileLabel\" for=\"file\">{filePh}</label>\n                                </div>\n                            </div>\n                            <p className=\"modal__text\"></p>\n                            <button className=\"modal__btn\" onClick={e => this.handelFileSubmit(e)} >حفض وإرسال &rarr;</button>\n                            <button className=\"link-2\" onClick={this.props.toggleHandler}></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport {getAllStudents} from '../../ApiConfig/Api';\nexport default class SearchForStudent extends Component {\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         students:[],\n         filteredData:[]\n      }\n    }\n    componentDidMount(){\n        getAllStudents()\n        .then(response =>{\n            this.setState({students: response.data})\n        })\n    }\n    handleSearchChange = (e) => {\n        const { students } = this.state;\n        console.log(e.target.value);\n        const filteredData = students.filter(Students => Students.FullName.includes(e.target.value) || Students.StudentId.includes(e.target.value))\n        this.setState({filteredData})\n        if(e.target.value === \"\")this.setState({filteredData:[]})\n      }\n      handleStudentEdit = (index)=>{\n        const {filteredData} =this.state\n        const {onNameChange,handelEditToggle} = this.props\n        const student = filteredData[index]\n        console.log(student.StudentId);\n        onNameChange(student.FullName,student.Email,student.StudentId,student.Phone,student.StudentReference,student.Subject,student._id,student.Instructor)\n        handelEditToggle()\n    }\n    render() {\n        const {filteredData} = this.state\n        let StudentFound = <StyledTable.TableTr>\n        <StyledTable.TableTd className=\"tableBody\">لايجوجد بيانات تطابق البحث</StyledTable.TableTd>\n    </StyledTable.TableTr>\n    if(filteredData.length !== 0)\n    {\n        StudentFound =  filteredData.map((student,index)=>{\n            return( \n            <StyledTable.TableTr className='single--icon' kye={index} onClick={() => this.handleStudentEdit(index)}>\n                <StyledTable.TableTd className=\"tableBody\">{student.FullName}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.StudentId}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.Phone}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.StudentReference.map((element,refBrIndex) => {return <div key={refBrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.Subject.map((element,subBrIndex) => {return <div key={subBrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n            </StyledTable.TableTr>\n            )\n        })\n    }\n        return (\n            <div>\n                  <StyledTable.TableWithTitleWrapper>\n                  <form\n                  onSubmit={(e) => e.preventDefault()}\n                  className='search--form'>\n                  <label className='search--label' htmlFor=\"search\">Search</label>\n                  <input className='search--input' onChange={(e) => this.handleSearchChange(e)} id=\"search\" type=\"search\" pattern=\".*\\S.*\" required />\n                  <span className=\"caret\"></span>\n                </form>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">اسم المتدرب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">الرقم الاكاديمي</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> رقم الجوال</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> الشعب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> المواد</StyledTable.TableTh>\n                                </tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {StudentFound}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { StudentSingleRegistration, getAllInstructorId,UpdateStudentById,RemoveStudentById } from '../../ApiConfig/Api';\n\nimport Swal from \"sweetalert2\";\nimport { AiOutlineMail, AiFillIdcard, AiOutlineMobile } from 'react-icons/ai';\nimport { CgLastpass, CgRename } from 'react-icons/cg';\nimport { MdOutlineIntegrationInstructions } from 'react-icons/md';\nimport { GiClassicalKnowledge } from 'react-icons/gi';\n\nimport UploadFileForm from '../UploadFileForm';\nimport SearchForStudent from './SearchForStudent'\nexport default class StudentManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      FullName: \"\",\n      Email: \"\",\n      password: \"\",\n      StudentId: \"\",\n      Phone: \"\",\n      StudentReference: [],\n      Subject: \"\",\n      Instructor_id: [],\n      InstructorIds: [],\n      _id:\"\",\n      editClicked:false\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.toggleHandler = this.toggleHandler.bind(this);\n  }\n  RegisterSingleStudent = (data) => {\n    StudentSingleRegistration(data)\n      .then(response => {\n        console.log(response);\n        let errMessage = response.data.message\n        console.log(errMessage);\n        if (response.data.success === false && errMessage === \"Email\") {\n          Swal.fire({ icon: 'error', title: \"البريد الالكتروني مسجل من قبل \" });\n        }\n        else if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: \"تم تسجيل المتدرب بنجاح \" });\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  componentDidMount() {\n    getAllInstructorId()\n      .then(response => {\n        this.setState({ InstructorIds: response.data })\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  DeleteStudent = (id) => {\n    RemoveStudentById(id)\n      .then(response => {\n        if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n        }\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  UpdateStudent = (req) => {\n    UpdateStudentById(req, req._id)\n      .then(res => {\n        if (res.data.success === true) Swal.fire({ icon: 'success', title: res.data.message });\n      })\n      .catch(error => {\n        console.log(error);\n        Swal.fire({ icon: 'error', title: error})})\n  }\n  handelUpdate = e => {\n    const updateStudent = this.state;\n    updateStudent.StudentReference.toString().split(',')\n    updateStudent.Subject.toString().split(',')\n    e.preventDefault();\n    this.UpdateStudent(updateStudent);\n  };\n  handelSubmit = e => {\n    if (this.props.id) this.setState({ Instructor_id: this.props.id })\n    const newStudent = this.state;\n    e.preventDefault();\n    const { FullName, Instructor_id, Subject, StudentId, StudentReference, Phone } = this.state;\n    if (\n      (typeof FullName === \"string\" && FullName.trim().length !== 0) &&\n      (typeof Instructor_id === \"string\" && Instructor_id.trim().length !== 0) &&\n      (typeof Subject === \"string\" && Subject.trim().length !== 0) &&\n      (typeof StudentId === \"string\" && StudentId.trim().length !== 0) &&\n      (typeof StudentReference === \"string\" && StudentReference.trim().length !== 0) &&\n      (typeof Phone === \"string\" && Phone.trim().length !== 0)) {\n      this.RegisterSingleStudent(newStudent);\n    } else {\n      console.log(FullName, Instructor_id, Subject, StudentId, StudentReference, Phone);\n      Swal.fire({\n        icon: 'error',\n        title: `الرجاء التأكد من ملء الحقول\n   اسم المتدرب\n   رقم المتدرب\n    رقم الشعبة\n    رقم المدرب \n    رقم الجوال\n    مادة واحدة على الاقل\n\n`})\n    }\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  toggleHandler = (e) => {\n    this.setState({ show: !this.state.show })\n  }\n  onChange = (FullName, Email, StudentId, Phone, StudentReference, Subject, _id,Instructor_id) => {\n    this.setState({ FullName, Email, StudentId, Phone, StudentReference, Subject, _id,Instructor_id })\n  }\n  handelEditToggle = () => {\n    const { editClicked } = this.state\n    if (editClicked) this.setState({ FullName: \"\", StudentId: \"\", Email: \"\", Phone: \"\", password: \"\",Instructor_id:[],_id:\"\", StudentReference: [], Subject: [] })\n    this.setState({ editClicked: !editClicked });\n  }\n  handleOptionChange(evt) {\n    this.setState({Instructor_id: [...evt.target.selectedOptions].map(o => o.value)}); \n  }\n  StudentDeleteHandler = () => {\n    Swal.fire({\n      title: 'تأكيد الحذف',\n      text: `سيتم حذف ${this.state.FullName} نهائيا من النظام`,\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تاكيد الحذف',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.DeleteStudent(this.state._id);\n      }\n    })\n  };\n  render() {\n    const { FullName, StudentId, Email, Phone, password, show, StudentReference, Subject, Instructor_id, InstructorIds, editClicked } = this.state;\n    const Form =  <div className=\"LoginContainer avoid--element-conflict\">\n    <form className='login-form' >\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Email\"> */}\n          <AiOutlineMail />\n        </label>\n        <input id=\"Email\"\n          required\n          className='lf--input'\n          placeholder='البريد الالكتروني'\n          name=\"Email\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={Email} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"password\"> */}\n          <CgLastpass />\n        </label>\n        <input\n          required\n          id=\"password\"\n          className='lf--input'\n          placeholder='كلمة المرور'\n          name=\"password\"\n          type='password'\n          onChange={e => this.handleChange(e)}\n          value={password} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"FullName\"> */}\n          <CgRename />\n        </label>\n        <input\n          required\n          id=\"FullName\"\n          className='lf--input'\n          disabled={(editClicked) ? \"disabled\" : \"\"}\n          placeholder='* اسم المتدرب'\n          name=\"FullName\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={FullName} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"StudentId\"> */}\n          <AiFillIdcard />\n        </label>\n        <input\n          required\n          id=\"StudentId\"\n          className='lf--input'\n          disabled={(editClicked) ? \"disabled\" : \"\"}\n          placeholder='* رقم المتدرب'\n          name=\"StudentId\"\n          type=\"number\"\n          onChange={e => this.handleChange(e)}\n          value={StudentId} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"StudentReference\"> */}\n          <GiClassicalKnowledge />\n        </label>\n        <input\n          required\n          id=\"StudentReference\"\n          className='lf--input'\n          placeholder='* رقم الشعبة'\n          name=\"StudentReference\"\n          type=\"string\"\n          onChange={e => this.handleChange(e)}\n          value={StudentReference} />\n      </div>\n      {(this.props.id) ? \"\" :\n        <div className=\"flex-row\">\n          <label className=\"lf--label\" >\n            {/* htmlFor=\"Instructor\"> */}\n            <CgRename />\n          </label>\n          <select \n          multiple={(editClicked) ? true : false}\n          className='lf--input'\n          size={InstructorIds.length} \n          name=\"Instructor_id\"\n          value={Instructor_id} onChange={(editClicked) ?e =>this.handleOptionChange(e): e => this.handleChange(e)}>\n            {InstructorIds.map((option,index) => (\n              <option key={index} value={option.Instructor_id}>{option.InstructorId}</option>\n            ))}\n          </select>\n        </div>}\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Subject\"> */}\n          <MdOutlineIntegrationInstructions />\n        </label>\n        <input\n          required\n          id=\"Subject\"\n          className='lf--input'\n          placeholder='* اسم المادة'\n          name=\"Subject\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={Subject} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Phone\"> */}\n          <AiOutlineMobile />\n        </label>\n        <input\n          required\n          id=\"Phone\"\n          className='lf--input'\n          placeholder='* رقم الجوال '\n          name=\"Phone\"\n          type=\"number\"\n          onChange={e => this.handleChange(e)}\n          value={Phone} />\n      </div>\n      <input className='lf--submit' type='submit'  onClick={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)} value={(editClicked)  ? 'حفض وارسال' : 'تسجيل المتدرب'}  />\n      {(this.props.id ) ? \"\" : <input className='lf--submit' onClick={(editClicked) ? () => this.handelEditToggle() : e => this.toggleHandler(e)}  value={(editClicked) ? 'رجوع' : 'رفع الملف وتسجيل المتدربين'} />}\n      {(editClicked) ? <input className='lf--submit red'  onClick={() => this.StudentDeleteHandler()} value='حذف المتدرب' /> : \"\"}\n    </form>\n  </div>\n    return (\n      <>\n        {\n          (!editClicked) ?\n            <>\n              {Form}\n              <SearchForStudent  handelEditToggle={this.handelEditToggle} onNameChange={this.onChange}/>\n            </>\n            :<>{Form} </>\n        }\n        {(!show) ? \"\" : <UploadFileForm toggleHandler={this.toggleHandler} from={\"students\"} />}\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport StudentManagement from '../Moderator/StudentManagement';\nimport { getInfo } from '../helperMethods';\n\nexport default class AddStudent extends Component {\n  render() {\n    return (\n      <>\n      <StudentManagement  id={getInfo().data.InstructorId} />\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { NewLabBooking,StudentReserveNewTest } from '../ApiConfig/Api'\nimport Swal from \"sweetalert2\";\nimport { getId, dateFormat, timeFormat, getInfo } from '../helperMethods';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default class BookingConformation extends Component {\n\n    NewBooking = (data) => {\n        let currentUser\n        if(getInfo().data.Role === \"Instructor\") currentUser= NewLabBooking  \n        else{\n             currentUser = StudentReserveNewTest\n             data = {BookingRefId:this.props.data.Lab}\n        }\n        currentUser(data, getId())\n            .then(response => {\n                Swal.fire({ icon: 'success', title: \"تم حجز القاعة بنجاح \" });\n                if(getInfo().data.Role === \"Instructor\"){\n                history.push('#/Instructor/Home');\n                window.location.reload(false);\n                }else{\n                    history.push('#/Students/Home');\n                    window.location.reload(false);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                if(error.response.data)Swal.fire({ icon: 'warning', title: error.response.data.message });\n                else Swal.fire({ icon: 'error', title: error });\n            });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        const { From, To, Lab, labId, LabCapacity, For } = this.props.data;\n        const newBooking = { From: From, To: To, Lab_id: Lab, LabReference: labId, LabCapacity: LabCapacity, For: For }\n        this.NewBooking(newBooking);\n    }\n    render() {\n        const { From, To, labId } = this.props.data\n        const date = dateFormat(From);\n        const time = `${timeFormat(From)} - ${timeFormat(To)}`;\n        let labDisplay = \"\"\n        if (labId.length === 10) labDisplay = ` المبنى: ${labId[4]} - الدور: ${labId[5]}  - القاعة: ${labId.slice(7, 10)} `\n        return (\n            <div className='modalContainer'>\n                <div className=\"modal-container\" id=\"modal-opened\">\n                    <div className=\"modal\">\n                        <form className='form__container'>\n                            <div className=\"modal__details\">\n                                <h1 className=\"modal__title\">بيانات الحجز</h1>\n                                <p className=\"modal__text\">{` المعمل: ${labId}`}</p>\n                                {(labDisplay !== \"\") ? <p className=\"modal__text\">{labDisplay}</p> : \"\"}\n                                <p className=\"modal__text\"> التاريخ: {date} </p>\n                                <p className=\"modal__text\"> الوقت: {time} </p>\n                            </div>\n                            <p className=\"modal__text\"></p>\n                            <button className=\"modal__btn\" onClick={e => this.handleSubmit(e)}>تأكيد الحجز  &rarr;</button>\n                            <button className=\"link-2\" onClick={this.props.toggle}></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import styled from 'styled-components'\n\nexport const CardsContainer = styled.div`\n\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n// background: #8391a4;\n`;\nexport const TeamContainer = styled.div`\n  height:  fit-content;\n  margin-top: 10px;\n  padding: 10px;\n  display:grid;\n//   background: #8391a4;\n`\nexport const CardsWrapper = styled.div `\nmax-width: 1000px;\nmargin: 0 auto;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\nalign-items: center;\ngrid-gap: 16px;\n/* padding:0 50px; */\n\n@media screen and (max-width: 1000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n}\n\n@media screen and (max-width: 760px) {\n    grid-template-columns: 1fr 1fr;\n    /* padding: 0 20px; */\n}\n`;\nexport const SingleCard = styled.div`\nbackground-color:'#8bc34a';\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\nalign-items: center;\nborder-radius: 10px;\nmax-height: 340px;\npadding: 30px;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.2);\ntransition: all 0.2s ease-in-out;\n\n&:hover{\n    transform: scale(1.02);\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n}\n`;\nexport const CardsIcon = styled.img`\nheight: 160px;\nwidth: 160px;\nmargin-bottom: 10px;\n`;\nexport const CardsH1 = styled.h1`\nfont-size: 2.5rem;\ncolor: #fff;\nmargin-bottom: 64px;\n\n@media screen and (max-width: 480px) {\n    font-size: 2rem;\n}\n`;\n\nexport const CardsH2 = styled.h2`\n    font-size: 0.78rem;\nmargin-bottom: 10px;\n`;\nexport const CardsP = styled.p`\nfont-size: 0.9rem;\ntext-align: center;\noverflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 190px;\n`;","import React, { Component } from 'react'\nimport {getAllTestAvailableForStudent} from '../ApiConfig/Api';\nimport BookingConformation from '../Instructors/BookingConformation'\nimport * as Cards from '../Styles/cards'\n\nimport {getInfo,dateFormat,timeFormat} from '../helperMethods';\nexport default class StudentExamBooking extends Component {\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         AvailableTest:[],\n         labId: \"\",\n         toggle: false,\n         from: \"\",\n         to: \"\",\n         LabCapacity: \"\",\n         lab_id: \"\",\n      }\n    }\n\n    componentDidMount(){ \n        const req = {For: this.props.For}\n        console.log(getInfo().data._id, req);\n        getAllTestAvailableForStudent(getInfo().data._id,req)   \n        .then(response =>{\n            console.log(response);\n            this.setState({AvailableTest: response.data})\n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n    toggleHandler = e => {\n        e.preventDefault();\n        this.setState({ toggle: !this.state.toggle })\n      }\n    labHandler = (labIndex) => {\n        const { AvailableTest } = this.state\n        this.setState({\n          lab_id: AvailableTest[labIndex]._id,\n          labId: AvailableTest[labIndex].LabReference,\n          LabCapacity: AvailableTest[labIndex].LabCapacity,\n          from: AvailableTest[labIndex].From,\n          to: AvailableTest[labIndex].To,\n          toggle: !this.state.toggle\n        })\n      }\n      render() {\n        const { AvailableTest, toggle, labId, from, to, lab_id, LabCapacity } = this.state\n        const propsData = { From: from, To: to, Lab: lab_id, labId: labId, LabCapacity: LabCapacity,For: this.props.For }\n        let allLabs = <div class=\"spinner\">Loading...</div>\n        if (AvailableTest.length > 0) {\n          allLabs = AvailableTest.map((available, labIndex) => {\n              return (\n                <Cards.SingleCard key={labIndex} className={(available.LabCapacity > 0) ? \"available\" : 'isBooked'} onClick={(available.LabCapacity > 0) ? () => this.labHandler(labIndex) : null}>\n                  <Cards.CardsH2>{available.LabReference}</Cards.CardsH2>\n                  <Cards.CardsP>{available.LabCapacity}</Cards.CardsP>\n                  <Cards.CardsP>{`${dateFormat(available.From)} `}</Cards.CardsP>\n                  <Cards.CardsP>{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</Cards.CardsP>\n                </Cards.SingleCard>\n              )\n            })\n        }\n        return (\n          <div>\n               <Cards.TeamContainer>\n              <Cards.CardsContainer id=\"Teams\" >\n                <Cards.CardsWrapper>\n                  {allLabs}\n                </Cards.CardsWrapper>\n              </Cards.CardsContainer>\n            </Cards.TeamContainer>\n            {(!toggle) ? \"\" : <BookingConformation toggle={this.toggleHandler} data={propsData} LabCapacity={LabCapacity} />}\n          </div >\n        )\n      }\n    }\n    \n","import React, { Component } from 'react'\nimport * as Cards from '../Styles/cards'\nimport { getAllLabs,getAllAvailableLabs } from '../ApiConfig/Api';\nimport BookingConformation from './BookingConformation'\n\nimport {dateFormat,timeFormat} from '../helperMethods';\nexport default class LabBooking extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      allLabs:[],\n      filteredLab:[],\n      labId: \"\",\n      toggle: false,\n      from: \"\",\n      to: \"\",\n      LabCapacity: \"\",\n      lab_id: \"\",\n      LabFilter: false\n    }\n  }\n  componentDidMount() {\n    getAllLabs()\n      .then((response) => {\n        this.setState({ allLabs: response.data, data: response.data})\n      })\n      .catch((error) => {\n      })\n      getAllAvailableLabs()\n      .then((res) => {\n        this.setState({ filteredLab: res.data })\n      })\n      .catch((error) => {\n      })\n  }\n  toggleHandler = e => {\n    e.preventDefault();\n    this.setState({ toggle: !this.state.toggle })\n  }\n  filterHandler = e => {\n    e.preventDefault();\n    const {LabFilter,allLabs,filteredLab}=this.state\n    this.setState({ LabFilter: !LabFilter })\n    if(!LabFilter)this.setState({ data: filteredLab }) \n    else this.setState({ data: allLabs })\n  }\n\n  labHandler = (labIndex, AvailableIndex) => {\n    const { data } = this.state\n    const time = data[labIndex].Available[AvailableIndex]\n    this.setState({\n      lab_id: data[labIndex]._id,\n      labId: data[labIndex].LabId,\n      LabCapacity: data[labIndex].LabCapacity,\n      from: time.From,\n      to: time.To,\n      toggle: !this.state.toggle\n    })\n  }\n  render() {\n    const { data, toggle, labId, from, to, lab_id, LabCapacity,LabFilter } = this.state\n    const propsData = { From: from, To: to, Lab: lab_id, labId: labId, LabCapacity: LabCapacity,For: this.props.For }\n    let allLabs = <div class=\"spinner\">Loading...</div>\n    if (data.length > 0) {\n      allLabs = data.map((lab, labIndex) => {\n        return lab.Available.map((available, AvailableIndex) => {\n          return (\n            <Cards.SingleCard key={AvailableIndex} className={(available.isAvailable) ? \"available\" : 'isBooked'} onClick={(available.isAvailable) ? () => this.labHandler(labIndex, AvailableIndex) : null}>\n              <Cards.CardsH2>{lab.LabId}</Cards.CardsH2>\n              <Cards.CardsP>{lab.LabCapacity}</Cards.CardsP>\n              <Cards.CardsP>{`${dateFormat(available.From)} `}</Cards.CardsP>\n              <Cards.CardsP>{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</Cards.CardsP>\n            </Cards.SingleCard>\n          )\n        })\n      })\n    }\n    return (\n      <div>\n        <button className=\"modal__btn secondary--nav\" onClick={e =>this.filterHandler(e)} > {(!LabFilter)?'اظهار القاعات المتاحة فقط' : 'اظهار جميع القاعات'}</button>      \n           <Cards.TeamContainer>\n          <Cards.CardsContainer id=\"Teams\" >\n            <Cards.CardsWrapper>\n              {allLabs}\n            </Cards.CardsWrapper>\n          </Cards.CardsContainer>\n        </Cards.TeamContainer>\n        {(!toggle) ? \"\" : <BookingConformation toggle={this.toggleHandler} data={propsData} LabCapacity={LabCapacity} />}\n      </div >\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { getInfo } from '../helperMethods';\nimport StudentExamBooking from '../Students/StudentExamBooking';\nimport LabBooking from './LabBooking'\nexport default class SelectSubjectMod extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            display: false,\n            subject: getInfo().data.Subject[0],\n        }\n    }\n    subjectHandler = (index) => {\n        this.setState({ subject: getInfo().data.Subject[index], display: true })\n    }\n    render() {\n        const subject = getInfo().data.Subject;\n        let allSubject = <div class=\"spinner\">Loading...</div>\n        if (subject.length > 1) {\n            allSubject = subject.map((subject, index) => {\n                return (\n                    <div key={index} onClick={() => this.subjectHandler(index)}>\n                        <button className=\"modal__btn\">{subject}</button>\n                    </div>\n                )\n            })\n        }\n        return (\n            <div>\n                {(getInfo().data.Role === \"Student\" && (this.state.display || subject.length === 1))? <StudentExamBooking For={this.state.subject}/> : (getInfo().data.Role === \"Instructor\" &&(this.state.display || subject.length === 1)) ? <LabBooking For={this.state.subject} /> :\n                    <div className='modalContainer'>\n                        <div className=\"modal-container\" id=\"modal-opened\">\n                            <div className=\"modal\">\n                                <p className=\"modal__text\"></p>\n                                {allSubject}\n                            </div>\n                        </div>\n                    </div>}\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport { animateScroll as scroll } from 'react-scroll';\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nimport {getFullName} from '../helperMethods';\nimport '../../App.css'\nconst ModeratorNave = ({ toggle }) => {\n    const [scrollNav, setScroll] = useState(false);\n    const navOnChange = () => {\n        if (window.scrollY >= 30) {\n            setScroll(true);\n        } else {\n            setScroll(false);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('scroll', navOnChange);\n    }, []);\n    const toggleHandler = () => {\n        scroll.scrollToTop();\n    };\n    const logout = (e) => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#607d8b' }}>\n                <MainHeader.Nav scrollNav={scrollNav}>\n                    <MainHeader.NavContainer >\n                        <MainHeader.NavLogo to='/Moderator/Home' onClick={toggleHandler}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                        <MainHeader.ResponsiveIcon onClick={toggle}>\n                            <FaBars className=\"FaBarsIcon\" />\n                        </MainHeader.ResponsiveIcon>\n                        <MainHeader.NavMenu>\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Moderator/LabsManagement'}\n                                    duration={500}\n                                   offset={-80}\n                                >ادارة المعامل</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Moderator/InstructorsManagement'}\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                   offset={-80}\n                                >ادارة المدربين</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to=\"/Moderator/StudentManagement\"\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                   offset={-80}\n                                >ادارة المتدربين</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                        </MainHeader.NavMenu>\n                        <MainHeader.LogoutContainer>\n                            <MainHeader.Logout\n                                duration={500}\n                                spy={true.toString()}\n                                exact={true.toString()}\n                                onClick={e => logout(e)}>\n                                تسجيل الخروج\n                            </MainHeader.Logout>\n                        </MainHeader.LogoutContainer>\n                    </MainHeader.NavContainer>\n                </MainHeader.Nav>\n            </IconContext.Provider>\n            <div>\n          <h3 className='display--name'>\n            {getFullName()}\n          </h3>\n        </div>\n            <Outlet />\n        </>\n    )\n}\nexport default ModeratorNave","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\nexport default function ModeratorSidebar({isOpen,toggle}) {\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Moderator/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Moderator/LabsManagement\" onClick={toggle} >ادارة المعامل </SidebarLink>\n        <SidebarLink to=\"/Moderator/InstructorsManagement\" onClick={toggle}>ادارة المدربين</SidebarLink>\n        <SidebarLink to=\"/Moderator/StudentManagement\" onClick={toggle}>ادارة المتدربين</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../Styles/styledTable'\n\nexport default class SummaryTable extends Component {\n  render() {\n    const {data } = this.props\n    let allTimes = (\n        <StyledTable.TableTr>\n            <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n        </StyledTable.TableTr>)\n    if (data) {\n        if (data.length > 0) {\n            allTimes = data.map((data, index) => {\n                return (\n                    <StyledTable.TableTr key={index}>\n                        <StyledTable.TableTd className=\"tableBody\">{data.FullName}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.InstructorReference.length}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.TeachStudents.length}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.BookingRef.length}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n    }\n    return (\n        <>\n        <StyledTable.TableWithTitleWrapper>\n            <StyledTable.TableWrapper>\n                <StyledTable.TableContainer>\n                    <StyledTable.TableHedContainer>\n                        <tr>\n                            <StyledTable.TableTh className=\"tableHeader\">اسم المدرب</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد الشعب</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد المتدربين</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد المواعيد المحجوزة</StyledTable.TableTh>\n                        </tr>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableBodyContainer>\n                        {allTimes}\n                    </StyledTable.TableBodyContainer>\n                </StyledTable.TableContainer>\n            </StyledTable.TableWrapper>\n            </StyledTable.TableWithTitleWrapper>\n        </>\n    )\n}\n}\n","import styled from 'styled-components'\n\nexport const LabelContainer = styled.div`\n@media (min-width: 950px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n`\nexport const DoughnutContainer = styled.div`\ndisplay: grid;\nheight: 375px; \n width: 375px;\n @media screen and (max-width: 600px) {\n      display: grid;\n      margin:auto;\n      width: 75vw;\n      height: fit-content;\n    }\n`\nexport const DoughnutContainerLear2 = styled.div`\ndisplay: grid;\nmargin:auto;\n@media screen and (max-width: 600px) {\n    width: 75vw;\n}\n`\nexport const DoughnutTitle = styled.label`\ntext-align: center;\nborder-bottom: 1px solid gray;\ncolor: darkslategray;\n`\nexport const LabelCard = styled.div`\n  border-top: 3px solid ${({greenLine,yellowLine,blueLine,orangeLine}) => (greenLine ? '#45d3d3' : \n                                                    yellowLine ? '#fcaf4a' : blueLine ? \"#35c0ff\"\n                                                    :orangeLine?'#ff5722':'#000')};\n    border-radius: 5px;\n    box-shadow: 0px 30px 40px -20px hsl(229, 6%, 66%);\n    padding: 30px;\n    margin: 20px; \n    text-align: center;\n        height: 133px;\n        width: 254px;\n    color:${({white}) => (white ? '#ffff' : '#0000')};\n    background-color:${({green,gray,darkBlue,darkGreen}) => (green ? '#00968857' : gray ? '#636467 ': darkBlue ? '#528fa7' :darkGreen? '#157c79':'#000')};\n    &:hover{\n    transform: scale(1.02);\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n}\n@media (max-width: 450px) {\n        height: 200px;\n        margin: 10vw 0px;\n}\n@media (max-width: 300px){\n    width: none;\n}\n`\nexport const CardHeadLine = styled.h2`\n    color:${({white}) => (white ? '#ffff' : '#0000')};\n        font-weight: 600;\n        font-size: 1.5rem;\n        line-height: none!important;\n            margin: auto;\n@media (max-width:1024px) {\n        line-height: none;\n            margin: auto;}\n`\nexport const CardParagraph = styled.p`\n        font-weight: 600;\n        font-size: 1.5rem;\n        line-height: none!important;\n            margin: auto;\n@media (max-width:1024px) {\n        line-height: none;\n            margin: auto;}\n`\nexport const TableContainer = styled.div`\n   justify-content:center;\n   align-items:center;\n    width: 69%;\n    margin: auto;\n    margin-top: 59px;\n    margin-bottom: 58px;\n    position: relative;\n  max-height:  300px;\n  overflow: scroll;\n  box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n@media (max-width: 702px){\n    width: 100%; \n}\n`\nexport const LabelsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    @media screen and (max-width: 600px) {\n        grid-template-columns: repeat(1, 1fr);\n        justify-content: space-between;\n        justify-items: center;\n\n`\nexport const ChartContainer = styled.div`\n    display: flex;\n      align-items: center;\n      justify-content: center;\n      align-content: space-around;\n      flex-wrap: wrap;\n      box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n      @media screen and (max-width: 600px) {\n      display: grid;\n      border:none;\n      }\n`","import React, { Component } from 'react'\nimport '../Styles/chart.css'\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { getAllLabs, getInstructors, getAllDivision,RemoveCollections } from '../ApiConfig/Api'\nimport SummaryTable from './SummaryTable';\nimport { LabelContainer, LabelCard, CardHeadLine, ChartContainer, LabelsContainer, DoughnutContainer, CardParagraph ,DoughnutContainerLear2,DoughnutTitle} from '../Styles/StyledChart'\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AvailableLab: 0,\n      BookedLab: 0,\n      Labs: [],\n      Instructors: [],\n      StudentCount: 0,\n      DivisionCount: [],\n    }\n  }\n  componentDidMount() {\n    this.getLabs();\n    this.getAllInstructors();\n    this.getDivisions();\n  }\n\n  getDivisions() {\n    getAllDivision()\n      .then((response) => {\n        let StudentCount = 0;\n        for (let currentDivision = 0; currentDivision < response.data.length; currentDivision++) {\n          StudentCount += response.data[currentDivision].StudentCount;\n        }\n        this.setState({ DivisionCount: response.data, StudentCount: StudentCount, div:response.data });\n      })\n      .catch((error) => {\n      })\n  }\n  getAllInstructors() {\n    getInstructors()\n      .then((response) => {\n        this.setState({ Instructors: response.data });\n      })\n      .catch((error) => {\n      })\n  }\n  getLabs() {\n    getAllLabs()\n      .then((response) => {\n        let AvailableLab = 0, BookedLab = 0\n        for (let labIndex = 0; labIndex < response.data.length; labIndex++) {\n          for (let currentLab = 0; currentLab < response.data[labIndex].Available.length; currentLab++) {\n            (response.data[labIndex].Available[currentLab].isAvailable) ? AvailableLab++ : BookedLab++\n          }\n        }\n        this.setState({ AvailableLab, BookedLab, Labs: response.data });\n      })\n      .catch((error) => {\n      })\n  }\n\n  render() {\n    const { AvailableLab, BookedLab, Instructors, StudentCount, DivisionCount, Labs } = this.state\n\n    const genderData = {\n      labels: [`متاح ${AvailableLab}`\n        , `محجوز ${BookedLab}`],\n      datasets: [\n        {\n          data: [AvailableLab, BookedLab],\n          backgroundColor: [\n            '#528fa7',\n            '#ff5722',\n\n          ],\n          borderColor: [\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 99, 132, 1)',\n          ],\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <div className=\"chartBar\">\n          <div className=\"chartDiscretion\">\n            احصائيات\n          </div>\n          <ChartContainer>\n            <DoughnutContainer>\n              {AvailableLab === 0 && BookedLab === 0 ? <div className=\"spinner\">Loading...</div> :\n                <DoughnutContainerLear2>\n                <DoughnutTitle>نسبة حجز القاعات</DoughnutTitle>\n                  <Doughnut data={genderData} />\n                </DoughnutContainerLear2>\n              }\n            </DoughnutContainer>\n            <LabelsContainer>\n              <LabelContainer>\n                <LabelCard white colorIs green={true} yellowLine={true}>\n                  <CardHeadLine white>\n                    مجموع المدربين\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {Instructors.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      Instructors.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs gray={true} blueLine={true}>\n                  <CardHeadLine white>\n                    مجموع المتدربين\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {StudentCount === 0 ? <div className=\"spinner\">Loading...</div> :\n                      StudentCount}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs darkBlue={true} greenLine={true}>\n                  <CardHeadLine white>\n                    مجموع القاعات المسجلة\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {Labs.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      Labs.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs darkGreen={true} orangeLine={true}>\n                  <CardHeadLine white>\n                    مجموع الشعب\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {DivisionCount.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      DivisionCount.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n            </LabelsContainer>\n          </ChartContainer>\n        </div>\n        <SummaryTable data={Instructors} />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport { getInstructors} from '../../ApiConfig/Api'\nexport default class InstructorsTable extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        Instructors:[],\n      }\n    }\n    componentDidMount(){\n        this.getAllInstructors()\n    }\n    getAllInstructors() {\n        getInstructors()\n            .then((response) => {\n                this.setState({ Instructors: response.data });\n            })\n            .catch((error) => {\n            })\n    }\n\n    handleInstructorEdit = (index)=>{\n        const {Instructors} =this.state\n        const {onNameChange,handelEditToggle} = this.props\n        const inst = Instructors[index]\n        console.log(inst.InstructorId);\n        onNameChange(inst.FullName,inst.Email,inst.InstructorId,inst.Phone,inst.InstructorReference,inst.Subject,inst._id)\n        handelEditToggle()\n    }\n    render() {\n        const { Instructors } = this.state\n        let allTimes = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            </StyledTable.TableTr>)\n        if (Instructors) {\n            if (Instructors.length > 0) {\n                allTimes = Instructors.map((Instructors, index) => {\n                    return (\n                        <StyledTable.TableTr key={index} onClick={()=>this.handleInstructorEdit(index)}>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.FullName}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.InstructorReference.map((element,BrIndex) => {return <div key={BrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.Subject.map((element,BrIndex) => {return <div key={BrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.TeachStudents.length}</StyledTable.TableTd>\n                        </StyledTable.TableTr>\n                    )\n                })\n            }\n        }\n        return (\n            <>\n\n                <StyledTable.TableWithTitleWrapper>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">اسم المدرب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> الشعب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">  المواد</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> عدد المتدربين</StyledTable.TableTh>\n                                </tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {allTimes}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { InstructorSingleRegistration, UpdateInstructorById, RemoveInstructorById } from '../../ApiConfig/Api';\n\nimport Swal from \"sweetalert2\";\nimport { AiOutlineMail, AiFillIdcard, AiOutlineMobile } from 'react-icons/ai';\nimport { CgLastpass, CgRename } from 'react-icons/cg';\nimport { GiClassicalKnowledge } from 'react-icons/gi';\nimport { MdOutlineIntegrationInstructions } from 'react-icons/md';\n\nimport InstructorsTable from './InstructorsTable'\nimport UploadFileForm from '../UploadFileForm';\nexport default class InstructorsManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      FullName: \"\",\n      Email: \"\",\n      password: \"\",\n      InstructorId: \"\",\n      Phone: \"\",\n      InstructorReference: [],\n      Subject: [],\n      HasPermissionTo: \"\",\n      editClicked: false,\n      _id: \"\"\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.toggleHandler = this.toggleHandler.bind(this);\n  }\n  RegisterSingleInstructor = (data) => {\n    InstructorSingleRegistration(data)\n      .then(response => {\n        console.log(response);\n        let errMessage = response.data.message\n        console.log(errMessage);\n        if (response.data.success === false && errMessage === \"Email\") {\n          Swal.fire({ icon: 'error', title: \"البريد الالكتروني مسجل من قبل \" });\n        }\n        else if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: \"تم تسجيل المتدرب بنجاح  \" });\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  UpdateInstructor = (req) => {\n    console.log(req);\n    UpdateInstructorById(req, req._id)\n      .then(res => {\n        if (res.data.success === true) Swal.fire({ icon: 'success', title: res.data.message });\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  DeleteInstructor = (id) => {\n    RemoveInstructorById(id)\n      .then(response => {\n        if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n        }\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  handelSubmit = e => {\n    const newInstructor = this.state;\n    const { FullName, InstructorReference, Subject, InstructorId } = this.state;\n\n    e.preventDefault();\n    if ((typeof FullName === \"string\" && FullName.trim().length !== 0) \n    && (typeof InstructorReference === \"string\" && InstructorReference.trim().length !== 0) \n    && (typeof Subject === \"string\" && Subject.trim().length !== 0)\n    && (typeof InstructorId === \"string\" && InstructorId.trim().length !== 0)){\n      this.RegisterSingleInstructor(newInstructor);\n    }else{\n      Swal.fire({ icon: 'error', \n      title: `الرجاء التأكد من ملء الحقول\n    اسم المدرب\n    رقم الشعبة\n    مادة واحدة على الاقل\n    رقم المدرب التعريفي\n`})\n    }\n  };\n  onChange = (FullName, Email, InstructorId, Phone, InstructorReference, Subject, _id) => {\n    this.setState({ FullName, Email, InstructorId, Phone, InstructorReference, Subject, _id })\n  }\n  handelUpdate = e => {\n    const updateInstructor = this.state;\n    updateInstructor.InstructorReference.toString().split(',')\n    updateInstructor.Subject.toString().split(',')\n    e.preventDefault();\n    this.UpdateInstructor(updateInstructor);\n  };\n  toggleHandler = (e) => {\n    this.setState({ show: !this.state.show })\n  }\n  handelEditToggle = () => {\n    const { editClicked } = this.state\n    if (editClicked) this.setState({ FullName: \"\", InstructorId: \"\", Email: \"\", Phone: \"\", password: \"\", InstructorReference: [], Subject: [] })\n    this.setState({ editClicked: !editClicked });\n  }\n  InstructorDeleteHandler = () => {\n    Swal.fire({\n      title: 'تأكيد الحذف',\n      text: `سيتم حذف ${this.state.FullName} نهائيا من النظام`,\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تاكيد الحذف',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.DeleteInstructor(this.state._id);\n      }\n    })\n  };\n  render() {\n    const { FullName, InstructorId, Email, Phone, password, show, InstructorReference, Subject, editClicked } = this.state;\n    const Form = <div className=\"LoginContainer avoid--element-conflict\">\n      <form className='login-form' onSubmit={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)}>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"Email\"> */}\n            <AiOutlineMail />\n          </label>\n          <input id=\"Email\"\n            required\n            className='lf--input'\n            placeholder='البريد الالكتروني'\n            name=\"Email\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={Email} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"password\"> */}\n            <CgLastpass />\n          </label>\n          <input\n            required\n            id=\"password\"\n            className='lf--input'\n            placeholder='كلمة المرور'\n            name=\"password\"\n            type='password'\n            onChange={e => this.handleChange(e)}\n            value={password} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"NationalId\"> */}\n            <CgRename />\n          </label>\n          <input\n            required\n            id=\"FullName\"\n            className={\"lf--input\"}\n            disabled={(editClicked) ? \"disabled\" : \"\"}\n            placeholder='* اسم المدرب'\n            name=\"FullName\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={FullName} />\n        </div>\n        {(!editClicked) ? <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"InstructorId\"> */}\n            <AiFillIdcard />\n          </label>\n          <input\n            required\n            id=\"InstructorId\"\n            className='lf--input'\n            placeholder='* رقم المدرب'\n            name=\"InstructorId\"\n            type=\"number\"\n            onChange={e => this.handleChange(e)}\n            value={InstructorId} />\n        </div> : \"\"}\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"InstructorId\"> */}\n            <GiClassicalKnowledge />\n          </label>\n          <input\n            required\n            id=\"InstructorReference\"\n            className='lf--input'\n            placeholder='* رقم الشعبة'\n            name=\"InstructorReference\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={InstructorReference} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"NationalId\"> */}\n            <MdOutlineIntegrationInstructions />\n          </label>\n          <input\n            required\n            id=\"Subject\"\n            className='lf--input'\n            placeholder='* اسم المادة'\n            name=\"Subject\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={Subject} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"Phone\"> */}\n            <AiOutlineMobile />\n          </label>\n          <input\n            required\n            id=\"Phone\"\n            className='lf--input'\n            placeholder='رقم الجوال '\n            name=\"Phone\"\n            type=\"number\"\n            onChange={e => this.handleChange(e)}\n            value={Phone} />\n        </div>\n        <input className='lf--submit' type='submit' onClick={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)} value={(editClicked) ? 'حفض وارسال' : 'تسجيل المدرب'} />\n        <input className='lf--submit' onClick={(editClicked) ? () => this.handelEditToggle() : e => this.toggleHandler(e)} value={(editClicked) ? 'رجوع' : 'رفع الملف وتسجيل المدربين'} />\n        {(editClicked) ? <input className='lf--submit red' onClick={e => this.InstructorDeleteHandler(e)} value='حذف المدرب' /> : \"\"}\n      </form>\n    </div>\n    return (\n      <>\n        {\n          (!editClicked) ?\n            <>\n              {Form}\n              <InstructorsTable handelEditToggle={this.handelEditToggle} onNameChange={this.onChange} />\n            </>\n            : <>{Form}</>}\n        {(!show) ? \"\" : <UploadFileForm toggleHandler={this.toggleHandler} from={\"instructor\"} />}\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport '../../Styles/spinner.css'\nimport '../../Styles/chart.css'\n\nexport default class InformationTable extends Component {\n\n    handleAppointmentDeletion = (appointmentIndex) => {\n        const { data, DeleteAppointments, updateIsActive } = this.props\n        if (updateIsActive) {\n            const index = DeleteAppointments.indexOf(data[appointmentIndex])\n            DeleteAppointments.includes(data[appointmentIndex]) ? DeleteAppointments.splice(index, 1) : DeleteAppointments.push(data[appointmentIndex])\n            this.props.onNameChange(DeleteAppointments)\n        }\n    }\n    render() {\n        const { LabCapacity, LabId, data } = this.props\n        let allTimes = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            </StyledTable.TableTr>)\n        if (data) {\n            if (data.length > 0) {\n                allTimes = data.map((data, index) => {\n                    return (\n                        <StyledTable.TableTr key={index} className={(this.props.DeleteAppointments.includes(this.props.data[index])) ? \"delete-appointment-clicked\" : \"delete-appointment\"} onClick={(this.props.updateIsActive) ? () => this.handleAppointmentDeletion(index) : \"\"}>\n                            <StyledTable.TableTd className=\"tableBody\">{data.From}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody\">{data.To}</StyledTable.TableTd>\n                        </StyledTable.TableTr>\n                    )\n                })\n            }\n        }\n        return (\n            <>\n                <StyledTable.TableWithTitleWrapper>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <StyledTable.Tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">رقم القاعة</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">الطاقة الاستيعابية</StyledTable.TableTh>\n                                </StyledTable.Tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                <StyledTable.TableTd className=\"tableBody\">{(LabId !== \"\") ? LabId : <div class=\"spinner tableSp\">Loading...</div>}</StyledTable.TableTd>\n                                <StyledTable.TableTd className=\"tableBody\">{(LabCapacity !== 0) ? LabCapacity : <div class=\"spinner tableSp\">Loading...</div>}</StyledTable.TableTd>\n                            </StyledTable.TableBodyContainer>\n                            <StyledTable.TableHedContainer>\n                                <StyledTable.Tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">بداية الفترة</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">نهاية الفترة</StyledTable.TableTh>\n                                </StyledTable.Tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {allTimes}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { getAllLabs, RemoveLabById } from '../../ApiConfig/Api';\nimport * as StyledTable from '../../Styles/styledTable'\nimport { dateFormat, timeFormat, DayIs } from '../../helperMethods';\nimport { MdOutlineEditCalendar, MdDeleteSweep } from 'react-icons/md';\nimport Swal from \"sweetalert2\";\n\nexport default class DisplayAllLabs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n        }\n    }\n    componentDidMount() {\n        getAllLabs()\n            .then((response) => {\n                this.setState({ data: response.data })\n            })\n            .catch(error => {\n                console.log(error);\n                Swal.fire({ icon: 'error', title: 'حدث خطا' });\n            });\n    };\n    updateToggleHandler = (labIndex) => {\n        const { data } = this.state\n        const CurrentLab = data[labIndex]\n\n        for (let dataTimeIndex = 0; dataTimeIndex < CurrentLab.Available.length; dataTimeIndex++) {\n            let from = new Date(CurrentLab.Available[dataTimeIndex].From)\n            let to = new Date(CurrentLab.Available[dataTimeIndex].To)\n            from = (from.getFullYear()) + '-' + (from.getMonth() + 1) + '-' + from.getDate() + \" : \" + from.toString().split(\" \")[4]\n            to = (to.getFullYear()) + '-' + (to.getMonth() + 1) + '-' + to.getDate() + \" : \" + to.toString().split(\" \")[4]\n            CurrentLab.Available[dataTimeIndex].From = from\n            CurrentLab.Available[dataTimeIndex].To = to\n        }\n        this.props.onNameChange(CurrentLab.LabCapacity, CurrentLab.LabId, CurrentLab.Available, CurrentLab._id)\n        this.props.handelUpdate()\n    }\n    RemoveLab = (lab_id) => {\n        RemoveLabById(lab_id)\n            .then(response => {\n                if (response.status === 200) {\n                    Swal.fire({ icon: 'success', title: response.data.message });\n                    window.location.reload(false);\n                }\n                else Swal.fire({ icon: 'error', title: `حدث خطا` });\n            });\n    };\n    DeleteHandel = (labIndex) => {\n        const { data } = this.state\n        Swal.fire({\n            title: 'تأكيد الحذف',\n            text: \"سيتم حذف القاعة  وجميع المواعيد المتعلقة بها نهائيا\",\n            icon: 'warning',\n            showDenyButton: true,\n            confirmButtonColor: '#d33',\n            denyButtonColor: '#3085d6',\n            confirmButtonText: 'نعم, تأكيد الحذف  ',\n            denyButtonText: `رجوع`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                this.RemoveLab(data[labIndex]._id);\n            }\n        })\n    }\n    render() {\n        const { data } = this.state\n        let allLabs = (\n            <StyledTable.TableContainer>\n                <StyledTable.TableBodyContainer>\n                    <StyledTable.TableTr>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n        )\n        if (this.state.data.length > 0) {\n            allLabs = data.map((lab, labIndex) => {\n                return (\n                    <StyledTable.TableWithTitleWrapper key={labIndex}>\n                        <StyledTable.TableWrapper>\n                            <StyledTable.TableContainer>\n                                <StyledTable.TableHedContainer>\n                                    <StyledTable.Tr>\n                                        <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الطاقة الاستيعابية</StyledTable.TableTh>\n                                        <StyledTable.TableTh colSpan={2} className=\"tableHeader\"> ادارة القاعة</StyledTable.TableTh>\n                                    </StyledTable.Tr>\n                                </StyledTable.TableHedContainer>\n                                <StyledTable.TableBodyContainer>\n                                    <StyledTable.TableTd className=\"tableBody\">{lab.LabId}</StyledTable.TableTd>\n                                    <StyledTable.TableTd className=\"tableBody\">{lab.LabCapacity}</StyledTable.TableTd>\n                                    <StyledTable.TableTd className=\"tableBody table--operation--container\"><div onClick={() => this.updateToggleHandler(labIndex)} className='single--icon' ><MdOutlineEditCalendar className='setting--icons' color='#00bcd4' /></div>  </StyledTable.TableTd>\n                                    <StyledTable.TableTd> <div onClick={() => this.DeleteHandel(labIndex)} className='single--icon'> <MdDeleteSweep className='setting--icons' color='#ff5722' /> </div></StyledTable.TableTd>\n                                </StyledTable.TableBodyContainer>\n                                <StyledTable.TableHedContainer>\n                                    <StyledTable.Tr>\n                                        <StyledTable.TableTh className=\"tableHeader\"> اليوم</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الحالة</StyledTable.TableTh>\n                                    </StyledTable.Tr>\n                                </StyledTable.TableHedContainer>\n                                <StyledTable.TableBodyContainer>\n                                    {lab.Available.map((available, AvailableIndex) => {\n                                        return (\n                                            <StyledTable.TableTr key={AvailableIndex}>\n                                                <StyledTable.TableTd className=\"tableBody\">{DayIs(available.From)}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(available.From)}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody\">{(available.isAvailable) ? \"متاح\" : \"محجوزة\"}</StyledTable.TableTd>\n                                            </StyledTable.TableTr>\n                                        )\n                                    }\n                                    )}\n                                </StyledTable.TableBodyContainer>\n                            </StyledTable.TableContainer>\n                        </StyledTable.TableWrapper>\n                    </StyledTable.TableWithTitleWrapper>\n                )\n            }\n            )\n        }\n        return (\n            <div>\n                {allLabs}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { LabRegistration, UpdateLabById, RemoveAppointmentByLabId } from '../../ApiConfig/Api';\nimport Swal from \"sweetalert2\";\nimport { MdReduceCapacity, MdNewLabel } from 'react-icons/md';\nimport dayjs from 'dayjs';\nimport TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopTimePicker } from '@mui/x-date-pickers/DesktopTimePicker';\nimport InformationTable from './InformationTable';\nimport DisplayAllLabs from './DisplayAllLabs';\nimport { checkOverlappingDates } from '../../helperMethods';\n\nexport default class LabManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LabId: \"\",\n      LabCapacity: 0,\n      Available: [],\n      yearAndMonth: \"\",\n      day: \"\",\n      timeFrom: \"\",\n      timeTo: \"\",\n      DeleteAppointments: [],\n      updateIsActive: false,\n      _id: \"\"\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n  }\n  RegisterNewLab = (data) => {\n    LabRegistration(data)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  LabUpdate = (data) => {\n    UpdateLabById(data, data._id)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  RemoveAppointment = (data) => {\n    RemoveAppointmentByLabId(data, data._id)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n\n  deleteLastAvailableItem = e => {\n    e.preventDefault();\n    const newArr = this.state.Available\n    newArr.pop()\n    this.setState({ Available: newArr })\n  }\n  dateAndTimeHandler = e => {\n    e.preventDefault();\n    const { yearAndMonth, day, timeFrom, timeTo, Available } = this.state\n    if (yearAndMonth.toString().length > 0 && day.toString().length > 0 && timeFrom.toString().length > 0 && timeTo.toString().length > 0) {\n      let ym = (dayjs(yearAndMonth.$d).toJSON()).slice(0, 8);\n      let d = day.$D;\n      let tf = timeFrom.$d.toString().split(\" \");\n      let tto = timeTo.$d.toString().split(\" \");\n      tf = tf[4]\n      tto = tto[4]\n      const From = `${ym}${d} ${tf}`\n      const To = `${ym}${d} ${tto}`\n      if (new Date(From).getTime() > new Date(To).getTime()) {\n        Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال الوقت بشكل صحيح\" });\n        this.setState({ timeFrom: \"\", timeTo: \"\" })\n        return;\n      } else {\n        if (checkOverlappingDates(From, To, Available)) {\n          Swal.fire({ icon: 'error', title: \"يوجد تعارض في الوقت المدخل مع وقت سابق\" });\n        }else{       \n             this.setState(prevState => ({\n          Available: [...prevState.Available, { From, To, isAvailable: true, State: true }]\n        }))}\n      }\n    }\n    else Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" })\n  }\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handelSubmit = e => {\n    const { LabId, LabCapacity, Available } = this.state, newLab = { LabId, LabCapacity, Available };\n    e.preventDefault();\n    (newLab.Available.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اضافة موعد واحد على الاقل\" }) :\n      (LabId.length > 0 && LabCapacity.length > 0) ? this.RegisterNewLab(newLab) : Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n  };\n  handelDeleteSubmit = e => {\n    const { _id, DeleteAppointments } = this.state, DeleteAppointment = { _id, DeleteAppointments };\n    e.preventDefault();\n    (DeleteAppointment.DeleteAppointments.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اختيار موعد واحد على الاقل\" }) :\n      Swal.fire({\n        title: 'تأكيد الحذف',\n        text: \"سيتم حف جميع المواعيد المحددة نهائيا\",\n        icon: 'warning',\n        showDenyButton: true,\n        confirmButtonColor: '#d33',\n        denyButtonColor: '#3085d6',\n        confirmButtonText: 'نعم, حذف الاوقات المحددة',\n        denyButtonText: `رجوع`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.RemoveAppointment(DeleteAppointment);\n        }\n      })\n  };\n  handelUpdateSubmit = e => {\n    const { _id, LabCapacity, Available } = this.state, UpdateLab = { _id, LabCapacity, Available };\n    e.preventDefault();\n    (UpdateLab.Available.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اضافة موعد واحد على الاقل\" }) :\n      (_id.length > 0 && LabCapacity > 0) ? this.LabUpdate(UpdateLab) : Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n  };\n  onChange = (LabCapacity, LabId, Available, _id) => {\n    this.setState({ LabCapacity: LabCapacity, LabId: LabId, Available: Available, _id: _id });\n  }\n  RemoveOnChange = (DeleteAppointments) => {\n    this.setState({ DeleteAppointments: DeleteAppointments });\n  }\n  handelUpdate = () => {\n    this.setState({ updateIsActive: !this.state.updateIsActive })\n  }\n  handelBackClicked = () => {\n    this.setState({ updateIsActive: !this.state.updateIsActive, Available: [], LabId: \"\", LabCapacity: 0 })\n  }\n  render() {\n    const { LabId, LabCapacity, yearAndMonth, day, timeFrom, timeTo, Available, updateIsActive, DeleteAppointments } = this.state;\n    let toDay = new Date();\n    let nextYear = new Date();\n    let nextYearFormate = (nextYear.getFullYear() + 1) + '-' + (nextYear.getMonth() + 1) + '-' + nextYear.getDate();\n    let toDayFormate = (toDay.getFullYear()) + '-' + (toDay.getMonth() + 1) + '-' + toDay.getDate();\n    let selectedMonth = ` ${(dayjs(yearAndMonth.$d).toJSON()).slice(0, 8)}01`\n    let lastDayInMonth = dayjs(selectedMonth).daysInMonth();\n    return (\n      <>\n        <div className=\"LoginContainer lab-in\">\n          <form className='login-form' >\n            {(updateIsActive) ? <input className='lf--submit' onClick={e => this.handelBackClicked(e)} value={'العودة الى ادارة المواعيد -->'} /> : <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"LabId\">\n                <MdNewLabel />\n              </label>\n              <input id=\"LabId\"\n                required\n                className='lf--input'\n                placeholder='رقم القاعة'\n                name=\"LabId\"\n                type=\"text\"\n                onChange={e => this.handleChange(e)}\n                value={LabId} />\n            </div>}\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"LabCapacity\">\n                < MdReduceCapacity />\n              </label>\n              <input\n                required\n                id=\"LabCapacity\"\n                className='lf--input'\n                placeholder='الطاقة الاستيعابية'\n                name=\"LabCapacity\"\n                type='number'\n                onChange={e => this.handleChange(e)}\n                value={LabCapacity} />\n            </div>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <div className=\"flex-row\">\n                <DatePicker\n                  views={['year', 'month']}\n                  label=\"السنة والشهر\"\n                  minDate={dayjs(toDayFormate)}\n                  maxDate={dayjs(nextYearFormate)}\n                  value={yearAndMonth}\n                  onChange={(newValue) => { this.setState({ yearAndMonth: newValue, day: selectedMonth }) }}\n                  // onChange={e => this.handleChange(e)}\n                  renderInput={(params) => <TextField {...params} helperText={null} />}\n                />\n                {(yearAndMonth !== \"\") ? <DatePicker\n                  views={['day']}\n                  label=\"اليوم\"\n                  minDate={selectedMonth}\n                  maxDate={selectedMonth + lastDayInMonth}\n                  value={day}\n                  onChange={(newValue) => { this.setState({ day: newValue }) }}\n                  renderInput={(params) => <TextField {...params} helperText={null} />}\n                /> : \"\"}\n              </div>\n              <div className=\"flex-row\">\n                {(day !== \"\") ? <DesktopTimePicker\n                  label=\"بداية الفترة\"\n                  value={timeFrom}\n                  onChange={(newValue) => { this.setState({ timeFrom: newValue }) }}\n                  renderInput={(params) => <TextField {...params} />}\n                /> : \"\"}\n                {(timeFrom !== \"\") ? <DesktopTimePicker\n                  label=\"نهاية الفترة\"\n                  value={timeTo}\n                  onChange={(newValue) => { this.setState({ timeTo: newValue }) }}\n                  renderInput={(params) => <TextField {...params} />}\n                /> : \"\"}\n              </div>\n            </LocalizationProvider>\n            <input className='lf--submit' type='submit' onClick={e => this.dateAndTimeHandler(e)} value='اضافة الموعد' />\n            <input className='lf--submit' type='submit' onClick={e => this.deleteLastAvailableItem(e)} value='حذف اخر موعد ' />\n            {(updateIsActive) ? <input className='lf--submit' type='submit' onClick={e => this.handelDeleteSubmit(e)} value=' حذف المواعيد المحددة' /> : \"\"}\n            <input className='lf--submit' onClick={(updateIsActive) ? e => this.handelUpdateSubmit(e) : e => this.handelSubmit(e)} value={(updateIsActive) ? \"تحديث بيانات القاعة\" : 'اضافة القاعة وتسجيل المواعيد'} />\n          </form>\n          <InformationTable data={Available} LabId={LabId} LabCapacity={LabCapacity} DeleteAppointments={DeleteAppointments} onNameChange={this.RemoveOnChange} updateIsActive={updateIsActive} />\n        </div>\n        {(!updateIsActive) ? <DisplayAllLabs onNameChange={this.onChange} handelUpdate={this.handelUpdate} /> : \"\"}\n      </>\n    )\n  }\n}","import { Navigate, Outlet } from 'react-router-dom'\nimport { getInfo, checkStorage } from '../components/helperMethods';\nimport React from 'react'\nlet token = null;\nif (checkStorage()) token = getInfo().data.Role\nconst PrivateRouteInstructor = () => {\n  return (\n    token === \"Instructor\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nconst PrivateRouteStudents = () => {\n  return (\n    token === \"Student\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nconst PrivateRouteModerator = () => {\n  return (\n    token === \"SysAdmin\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nexport { PrivateRouteInstructor, PrivateRouteStudents, PrivateRouteModerator };","import React, { Component } from 'react'\nimport '../Styles/login.css';\nimport Swal from \"sweetalert2\";\nimport { getInfo } from \"../helperMethods\";\nimport { createBrowserHistory } from 'history';\nimport { IoMdFingerPrint } from 'react-icons/io';\nimport { CgLastpass } from 'react-icons/cg';\nimport logo from \"../Images/logo.png\";\nimport { InstructorsLogin, StudentsLogin } from \"../ApiConfig/Api\"\nconst history = createBrowserHistory();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Id: \"\",\n      password: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handelSubmit(e) {\n    e.preventDefault();\n    const { Id, password } = this.state\n    const InstructorLoginCredential = { InstructorId: Id, password: password }\n    const loginCredential = { StudentId: Id, password: password }\n\n    let checkValidation = true\n    Object.entries(this.state).forEach(([key, value]) => {\n      if (value === \"\") {\n        return checkValidation = false;\n      }\n    })\n    if (checkValidation === false) {\n      Swal.fire({ icon: 'error', title: \"تأكد من ادخال البيانات بشكل صحيح\" });\n    } else {\n      StudentsLogin(loginCredential)\n        .then(response => {\n          try {\n            console.log(response.data.success);\n            if (response.data.success === false) {\n              InstructorsLogin(InstructorLoginCredential)\n                .then(res => {\n                  try {\n                    if (res.data.success !== false) {\n                      localStorage.setItem(\"currentUser\", res.data.token);\n                      localStorage.setItem('CountTime', new Date());\n                      let jwt = getInfo().data.Role;\n                      if (jwt === undefined) {\n                        history.push(\"/\");\n                        Swal.fire(` ${jwt}`, \"\", 'error');\n                      }\n                      else if (jwt === \"Instructor\") {\n                        Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                        history.push('#/Instructor')\n                      } else if (jwt === \"SysAdmin\") {\n                        history.push(\"#/Moderator/Home\");\n                        Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                      }\n                      window.location.reload(false);\n                      return res;\n                    } else {\n                      Swal.fire(` اسم المستخدم او الرقم السري غير صحيح`, \"\", 'error');\n                    }\n                  } catch {\n                    console.log(res);\n                    Swal.fire({ icon: 'error', title: res.data });\n\n                  }\n                })\n            } else {\n              localStorage.setItem(\"currentUser\", response.data.token);\n              localStorage.setItem('CountTime', new Date());\n              let jwt = getInfo().data;\n              if (jwt === undefined) {\n                history.push(\"/\");\n                Swal.fire(` ${jwt}`, \"حدث خطأ\", 'error');\n              } else {\n                Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                history.push('#/Students/Home')\n                window.location.reload(false);\n              }\n            }\n          } catch {\n            console.log(response);\n          }\n        })\n    }\n  }\n  render() {\n    return (\n      <>\n        <div className=\"LoginContainer\">\n          <form className='login-form' onSubmit={e => this.handelSubmit(e)}>\n            <div className=\"login-logo-container\">\n              <img className='logo' src={logo} alt=\"logo\" />\n            </div>\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"Id\">\n                <IoMdFingerPrint />\n              </label>\n              <input id=\"username\"\n                required\n                className='lf--input'\n                placeholder='اسم المستخدم'\n                name=\"Id\"\n                type=\"text\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.Id} />\n            </div>\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"password\">\n                <CgLastpass />\n              </label>\n              <input id=\"password\"\n                className='lf--input'\n                placeholder='كلمة المرور'\n                name=\"password\"\n                type='password'\n                onChange={e => this.handleChange(e)}\n                value={this.state.password} />\n            </div>\n            <input className='lf--submit' type='submit' value='تسجيل الدخول' onClick={e => this.handelSubmit(e)} />\n          </form>\n        </div>\n      </>\n    )\n  }\n}\nexport { Login };","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport { animateScroll as scroll } from 'react-scroll';\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nexport  const  StudentsNav = ({ toggle }) => {\n  const [scrollNav, setScroll] = useState(false);\n  const navOnChange = () => {\n      if (window.scrollY >= 30) {\n          setScroll(true);\n      } else {\n          setScroll(false);\n      }\n  };\n  useEffect(() => {\n      window.addEventListener('scroll', navOnChange);\n  }, []);\n  const toggleHandler = () => {\n      scroll.scrollToTop();\n  };\n  const logout = (e) => {\n      localStorage.clear();\n      window.location.reload(false);\n  }\n  return (\n      <>\n          <IconContext.Provider value={{ color: '#607d8b' }}>\n              <MainHeader.Nav scrollNav={scrollNav}>\n                  <MainHeader.NavContainer >\n                      <MainHeader.NavLogo to='/Students/Home' onClick={toggleHandler}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                      <MainHeader.ResponsiveIcon onClick={toggle}>\n                          <FaBars className=\"FaBarsIcon\" />\n                      </MainHeader.ResponsiveIcon>\n                      <MainHeader.NavMenu>\n                          <MainHeader.NavItem>\n                              <MainHeader.NavLinks\n                                  to={'/Students/ExamReservation'}\n                                  smooth={true.toString()}\n                                  duration={500}\n                                  spy={true.toString()}\n                                  exact={true.toString()}\n                                 offset={-80}\n                              > حجز اختبار</MainHeader.NavLinks>\n                          </MainHeader.NavItem>\n                          {/* | */}\n                      </MainHeader.NavMenu>\n                      <MainHeader.LogoutContainer>\n                          <MainHeader.Logout\n                              duration={500}\n                              spy={true.toString()}\n                              exact={true.toString()}\n                              onClick={e => logout(e)}>\n                              تسجيل الخروج\n                          </MainHeader.Logout>\n                      </MainHeader.LogoutContainer>\n                  </MainHeader.NavContainer>\n              </MainHeader.Nav>\n          </IconContext.Provider>\n          <Outlet />\n      </>\n  )\n}\n","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\nexport default function StudentsSide({isOpen,toggle}){\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Students/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Students/ExamReservation\" onClick={toggle}>حجز اختبار</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React from 'react'\nimport * as StyledTable from '../Styles/styledTable'\nimport { dateFormat, timeFormat, DayIs } from '../helperMethods';\n\nexport default function FinishedExams({finishedExam}) {\n    let allExam = \"\"\n    if (finishedExam) {\n        allExam = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد اختبارات محجوزة</StyledTable.TableTd>\n            </StyledTable.TableTr>\n        )\n    }\n    if (finishedExam) {\n        if (finishedExam.length !== 0) {\n            allExam = finishedExam.map((BookedLab, BookedLabIndex) => {\n                return (\n                    <StyledTable.TableTr className='finished--exam' key={BookedLabIndex}>\n                        <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{BookedLab.For}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{DayIs(BookedLab.From)}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n    }\n    return (\n        <>\n            <StyledTable.TableWrapper>\n                <StyledTable.TableContainer>\n                    <StyledTable.TableHedContainer>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableHedContainer>\n                        <tr>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> المادة </StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> اليوم</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> التاريخ</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> الوقت</StyledTable.TableTh>\n                        </tr>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableBodyContainer>\n                        {allExam}\n                    </StyledTable.TableBodyContainer>\n                </StyledTable.TableContainer>\n            </StyledTable.TableWrapper>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { getAllBookedLabByStudentId, RemoveExamBookedByStudentId } from '../ApiConfig/Api';\nimport { getId, dateFormat, timeFormat, getHoursDiff, DayIs } from '../helperMethods';\nimport * as StyledTable from '../Styles/styledTable'\nimport { MdDeleteSweep } from 'react-icons/md';\nimport FinishedExams from './FinishedExams'\nimport Swal from \"sweetalert2\";\n\nimport '../Styles/spinner.css'\nexport default class StudentsHome extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentBooking: [],\n      removeBookingLimit: 24,\n      finishedExam: [],\n    }\n  }\n\n  componentDidMount() {\n    // Mack API call \n    getAllBookedLabByStudentId(getId())\n      .then((response) => {\n        console.log(response);\n        this.setState({ currentBooking: response.data.currentBooking, finishedExam: response.data.finishedExam })\n      })\n\n      .catch((error) => {\n      })\n  }\n  removeBookedAppointment = (id, currentAppointment) => {\n    RemoveExamBookedByStudentId(id, currentAppointment)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n      }).catch(error => {\n        if (error.response.status === 405) Swal.fire({ icon: 'warning', title: error.response.data.message });\n        else { Swal.fire({ icon: 'error', title: `حدث خطا` }) }\n      })\n  }\n  removeAppointment = (index) => {\n    const { currentBooking, removeBookingLimit } = this.state\n    if (getHoursDiff(new Date(currentBooking[index].From), new Date()) <= removeBookingLimit) Swal.fire({ icon: 'warning', title: \"لايمكن حذف او تعديل الاختبار قبل 24 ساعة من موعده\", confirmButtonText: 'موافق ', })\n    else {\n      Swal.fire({\n        title: 'تأكيد الحذف',\n        text: \"سيتم حذف الموعد نهائيا\",\n        icon: 'warning',\n        showDenyButton: true,\n        confirmButtonColor: '#d33',\n        denyButtonColor: '#3085d6',\n        confirmButtonText: 'نعم, تأكيد الحذف  ',\n        denyButtonText: `رجوع`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.removeBookedAppointment(getId(), { BookingRefId: currentBooking[index]._id })\n        }\n      })\n    }\n  }\n  render() {\n    const { currentBooking, finishedExam } = this.state\n    let allExam = (\n      <StyledTable.TableTr>\n        <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد اختبارات محجوزة</StyledTable.TableTd>\n      </StyledTable.TableTr>\n    )\n    if (currentBooking) {\n      if (currentBooking.length !== 0) {\n        allExam = currentBooking.map((BookedLab, BookedLabIndex) => {\n          return (\n            <StyledTable.TableTr key={BookedLabIndex}>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.For}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{DayIs(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody table--operation--container\"><div onClick={() => this.removeAppointment(BookedLabIndex)} className='single--icon' > <MdDeleteSweep className='setting--icons' color='#ff5722' /></div>  </StyledTable.TableTd>\n            </StyledTable.TableTr>\n          )\n        })\n      }\n    }\n    return (\n      <>\n        <StyledTable.TableWithTitleWrapper>\n          <StyledTable.TableTitle>اختبارات قادمة</StyledTable.TableTitle>\n          <StyledTable.TableWrapper>\n            <StyledTable.TableContainer>\n              <StyledTable.TableHedContainer>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableHedContainer>\n                <StyledTable.TableTr>\n                  <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> المادة </StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> اليوم</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> ادارة الحجز</StyledTable.TableTh>\n                </StyledTable.TableTr>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableBodyContainer>\n                {allExam}\n              </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n          </StyledTable.TableWrapper>\n        </StyledTable.TableWithTitleWrapper>\n        {(finishedExam.length > 0)?\n        <StyledTable.TableWithTitleWrapper>\n          <StyledTable.TableTitle>اختبارات تم الانتهاء منها</StyledTable.TableTitle>\n          <FinishedExams finishedExam={finishedExam} />\n        </StyledTable.TableWithTitleWrapper>\n        :\"\"}\n      </>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport InstructorNav from './components/Instructors/InstructorNav';\nimport InstructorSidebar from './components/Instructors/InstructorSidebar';\nimport InstructorHome from './components/Instructors/InstructorHome';\nimport AddStudent from './components/Instructors/AddStudent';\nimport SelectSubjectMod from './components/Instructors/SelectSubjectMod';\n\nimport ModeratorNave from './components/Moderator/ModeratorNave';\nimport Sidebar from './components/Moderator/ModeratorSidebar';\nimport Home from './components/Moderator/Home'\nimport InstructorsManagement from './components/Moderator/InstructorManagement/InstructorsManagement';\nimport LabsManagement from './components/Moderator/LabsManagement/LabManagement';\nimport StudentManagement from './components/Moderator/StudentManagement'\nimport { PrivateRouteInstructor, PrivateRouteModerator,PrivateRouteStudents } from './RouteManagement/PrivateRoutes';\nimport { Login } from './components/Login/Login';\n\nimport {StudentsNav} from './components/Students/StudentsNav'\nimport StudentsSide from './components/Students/StudentsSide'\nimport StudentsHome from './components/Students/StudentsHome'\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route element={<PrivateRouteStudents />}>\n        <Route element={<StudentsNav toggle={toggle} />} path=\"/Students\">\n          <Route element={<StudentsSide toggle={toggle} isOpen={isOpen} />} path=\"/Students\">\n            <Route element={<SelectSubjectMod />} path=\"ExamReservation\" />\n             <Route element={<StudentsHome />} path=\"Home\" />\n            {/* <Route element={<SelectSubjectMod />} path='SelectSubjectMod' /> */} \n          </Route>\n          </Route>\n        </Route>\n        <Route element={<PrivateRouteInstructor />}>\n        <Route element={<InstructorNav toggle={toggle} />} path=\"/Instructor\">\n          <Route element={<InstructorSidebar toggle={toggle} isOpen={isOpen} />} path=\"/Instructor\">\n            <Route element={<InstructorHome />} path=\"Home\" />\n            <Route element={<AddStudent />} path='AddStudent' />\n            <Route element={<SelectSubjectMod />} path='LabBooking' />\n          </Route>\n          </Route>\n        </Route>\n        <Route element={<PrivateRouteModerator />}>\n          <Route element={<ModeratorNave toggle={toggle} />} path=\"/Moderator\">\n          <Route element={<Sidebar toggle={toggle} isOpen={isOpen} />} path=\"/Moderator\">\n            <Route element={<Home />} path=\"Home\" />\n            <Route element={<LabsManagement />} path='LabsManagement' />\n            <Route element={<InstructorsManagement />} path='InstructorsManagement' />\n            <Route element={<StudentManagement />} path='StudentManagement' />\n          </Route>\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f9be1ee0.png\";"],"sourceRoot":""}