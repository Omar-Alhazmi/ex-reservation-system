{"version":3,"sources":["components/Styles/MainHeaderStyle.js","components/ApiConfig/ApiConfig.js","components/helperMethods.js","components/ApiConfig/Api.js","components/Styles/styledTable.js","components/Instructors/IncreaseStudentAttempt.jsx","components/Instructors/Instructors.jsx","components/Instructors/InstructorNav.jsx","components/Styles/SidebarElements.js","components/Instructors/InstructorSidebar.jsx","components/Instructors/PrintStudentTable.jsx","components/Instructors/StudentBookedInfo.jsx","components/Students/FinishedExams.jsx","components/Instructors/InstructorHome.jsx","components/Moderator/UploadFileForm.jsx","components/Moderator/StudentManagement/SearchForStudent.jsx","components/Moderator/StudentManagement/index.jsx","components/Instructors/AddStudent.jsx","components/Instructors/BookingConformation.jsx","components/Styles/cards.js","components/Students/StudentExamBooking.jsx","components/Instructors/LabBooking.jsx","components/Instructors/SelectSubjectMod.jsx","components/Moderator/ModeratorNave.jsx","components/Moderator/ModeratorSidebar.jsx","components/Moderator/SummaryTable.jsx","components/Styles/StyledChart.js","components/Moderator/Home.jsx","components/Moderator/InstructorManagement/InstructorsTable.jsx","components/Moderator/InstructorManagement/InstructorsManagement.jsx","components/Moderator/LabsManagement/InformationTable.jsx","components/Moderator/LabsManagement/DisplayAllLabs.jsx","components/Moderator/LabsManagement/LabManagement.jsx","RouteManagement/PrivateRoutes.jsx","components/Login/Login.jsx","components/Students/StudentsNav.jsx","components/Students/StudentsSide.jsx","components/Students/StudentsHome.jsx","App.js","reportWebVitals.js","index.js","components/Images/logo.png"],"names":["Nav","styled","nav","_templateObject","Object","taggedTemplateLiteral","_ref","scrollNav","NavContainer","div","_templateObject2","NavLogo","NavLink","_templateObject3","Image","img","_templateObject4","_ref2","ResponsiveIcon","_templateObject5","NavMenu","ul","_templateObject6","NavItem","li","_templateObject7","NavLinks","_templateObject8","LogoutContainer","_templateObject9","Logout","button","_templateObject10","apiUrls","development","concat","production","apiURL","window","location","hostname","checkStorage","undefined","localStorage","getItem","getToken","getInfo","jwt_decode","getId","data","_id","getFullName","FullName","dateFormat","date","displayDate","Date","toString","split","DayIs","console","log","timeFormat","getHoursDiff","startDate","endDate","Math","round","abs","examDuration","from","to","hours","getHours","minutes","getMinutes","validFileType","file","includes","type","checkOverlappingDates","timeFrom","timeTo","checkTimeConflict","some","elem","moment","diff","From","To","setTimeout","clear","reload","config","headers","InstructorSingleRegistration","asyncToGenerator","_regeneratorRuntime","mark","_callee","req","wrap","_context","prev","next","abrupt","axios","method","url","Email","password","InstructorId","Phone","InstructorReference","Subject","HasPermissionTo","stop","_x","apply","this","arguments","StudentSingleRegistration","_ref3","_callee3","_context3","StudentId","StudentReference","Instructor_id","_x3","LabRegistration","_ref4","_callee4","_context4","post","sent","_x4","NewLabBooking","_ref5","_callee5","id","_context5","_x5","_x6","StudentReserveNewTest","_ref6","_callee6","_context6","_x7","_x8","InstructorsLogin","_ref7","_callee7","_context7","_x9","StudentsLogin","_ref8","_callee8","_context8","_x10","UpdateLabById","_ref9","_callee9","_context9","_x11","_x12","UpdateInstructorById","_ref10","_callee10","_context10","_x13","_x14","UpdateStudentById","_ref11","_callee11","_context11","_x15","_x16","UpdateStudentAttemptsById","_ref12","_callee12","_context12","_x17","_x18","getInstructors","get","getAllLabs","DownloadExcel","responseType","Authorization","expiredAppointment","RemoveAppointmentByLabId","_ref13","_callee13","_context13","_x19","_x20","RemoveExamBookedByStudentId","_ref14","_callee14","_context14","_x21","_x22","RemoveLabById","delete","RemoveInstructorById","RemoveStudentById","RemoveAppointmentByInstructorById","RemoveCollections","TableWrapper","styledTable_templateObject","TableTitle","h3","styledTable_templateObject2","TableWithTitleWrapper","styledTable_templateObject3","TableContainer","table","styledTable_templateObject4","TableHedContainer","thead","styledTable_templateObject5","TableBodyContainer","tbody","styledTable_templateObject6","TableTh","th","styledTable_templateObject7","TableTd","td","styledTable_templateObject8","TableTr","tr","styledTable_templateObject9","Tr","styledTable_templateObject10","AcReButton","_templateObject11","Blue","halfBlue","ButtonContainer","_templateObject12","IncreaseStudentAttempt","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateAttempt","For","then","response","status","Swal","fire","icon","title","message","catch","error","handleSubmit","_this$props$data","increaseAttempts","state","text","showDenyButton","confirmButtonColor","denyButtonColor","confirmButtonText","denyButtonText","result","isConfirmed","_this2","react_default","a","createElement","className","onClick","e","setState","toggle","Component","Instructors","handleSearchChange","index","filteredData","Students","filter","target","value","searchIn","handleStudentAttempt","updateStudent","toggleHandler","dataSet","students","currentDiv","map","currentStudent","stdIndex","key","DoneTestOn","length","currentSubject","subject","AttemptsCount","_this3","_this$state","allDivision","hide","colSpan","onSubmit","preventDefault","for","onChange","pattern","required","class","DivisionId","IncreaseStudentAttempt_IncreaseStudentAttempt","InstructorNav","_useState","useState","_useState2","slicedToArray","setScroll","_useState3","_useState4","setHidden","navOnChange","scrollY","useEffect","addEventListener","Fragment","esm","Provider","color","duration","src","logo","alt","index_esm","offset","smooth","spy","exact","Instructors_Instructors","react_router_dist","SidebarContainer","aside","SidebarElements_templateObject","isOpen","CloseIcon","FaTimes","SidebarElements_templateObject2","SidebarMenu","SidebarElements_templateObject3","Icon","SidebarElements_templateObject4","SidebarWrapper","SidebarElements_templateObject5","SidebarLink","Link","SidebarElements_templateObject6","SideBtnWrap","SidebarElements_templateObject7","SidebarRoute","SidebarElements_templateObject8","logout","InstructorSidebar","PrintStudentTable","allStudents","student","currentStudentIndex","StudentBookedInfo","saveFileHandler","Student","lib_default","trigger","fc_index_esm","content","componentRef","PrintStudentTable_PrintStudentTable","ref","el","FinishedExams","finishedExam","allExam","BookedLab","BookedLabIndex","LabReference","InstructorHome","removeBookedAppointment","currentAppointment","removeAppointment","currentBooking","BookingRefId","Lab_id","selectHandler","selectedRef","_this$state2","LabCapacity","md_index_esm","StudentBookedInfo_StudentBookedInfo","UploadFileForm","InstructorRegistrationFromFile","showCancelButton","endPoint","formData","FormData","append","res","err","handelFileSubmit","handleFileChange","bind","assertThisInitialized","files","filePh","name","cg_index_esm","accept","SearchForStudent","handleStudentEdit","_this$props","onNameChange","handelEditToggle","Instructor","StudentFound","kye","element","refBrIndex","subBrIndex","htmlFor","StudentManagement","RegisterSingleStudent","errMessage","success","DeleteStudent","UpdateStudent","handelUpdate","handelSubmit","newStudent","trim","handleChange","event","defineProperty","show","editClicked","StudentDeleteHandler","InstructorIds","evt","toConsumableArray","selectedOptions","o","Form","ai_index_esm","placeholder","disabled","gi_index_esm","multiple","size","handleOptionChange","option","SearchForStudent_SearchForStudent","UploadFileForm_UploadFileForm","AddStudent","StudentManagement_StudentManagement","history","createBrowserHistory","BookingConformation","NewBooking","currentUser","Role","Lab","push","newBooking","labId","_this$props$data2","time","labDisplay","slice","CardsContainer","cards_templateObject","TeamContainer","cards_templateObject2","CardsWrapper","cards_templateObject3","SingleCard","cards_templateObject4","CardsH2","cards_templateObject5","h1","cards_templateObject6","h2","cards_templateObject7","CardsP","p","cards_templateObject8","StudentExamBooking","labHandler","labIndex","AvailableTest","lab_id","getAllTestAvailableForStudent","propsData","allLabs","available","BookingConformation_BookingConformation","LabBooking","filterHandler","LabFilter","filteredLab","AvailableIndex","Available","LabId","lab","isAvailable","SelectSubjectMod","subjectHandler","display","allSubject","LabBooking_LabBooking","StudentExamBooking_StudentExamBooking","ModeratorNave","scroll","scrollToTop","ModeratorSidebar","SummaryTable","allTimes","TeachStudents","BookingRef","LabelContainer","StyledChart_templateObject","DoughnutContainer","StyledChart_templateObject2","DoughnutContainerLear2","StyledChart_templateObject3","DoughnutTitle","label","StyledChart_templateObject4","LabelCard","StyledChart_templateObject5","greenLine","yellowLine","blueLine","orangeLine","white","green","gray","darkBlue","darkGreen","CardHeadLine","StyledChart_templateObject6","CardParagraph","StyledChart_templateObject7","LabelsContainer","StyledChart_templateObject8","StyledChart_templateObject9","ChartContainer","StyledChart_templateObject10","ChartJS","register","ArcElement","Tooltip","Legend","Home","newSemester","DownloadData","Home_regeneratorRuntime","Labs","DivisionCount","fileName","blob","Blob","saveAs","semesterWorkHandle","DownloadDataAndDelete","_this$state3","_callee2","_context2","AvailableLab","StudentCount","getLabs","getAllInstructors","getDivisions","currentDivision","_this4","currentLab","_this5","_this$state4","genderData","labels","datasets","backgroundColor","borderColor","borderWidth","react_chartjs_2_dist","colorIs","SummaryTable_SummaryTable","InstructorsTable","handleInstructorEdit","inst","BrIndex","InstructorsManagement","RegisterSingleInstructor","UpdateInstructor","DeleteInstructor","newInstructor","updateInstructor","InstructorDeleteHandler","InstructorsTable_InstructorsTable","InformationTable","handleAppointmentDeletion","appointmentIndex","DeleteAppointments","updateIsActive","indexOf","splice","_this$props2","DisplayAllLabs","updateToggleHandler","CurrentLab","dataTimeIndex","getFullYear","getMonth","getDate","RemoveLab","DeleteHandel","LabManagement","RegisterNewLab","header","LabUpdate","RemoveAppointment","deleteLastAvailableItem","newArr","pop","dateAndTimeHandler","yearAndMonth","day","ym","dayjs","$d","toJSON","d","$D","tf","tto","getTime","prevState","State","newLab","handelDeleteSubmit","DeleteAppointment","handelUpdateSubmit","UpdateLab","RemoveOnChange","handelBackClicked","_this$state5","toDay","nextYear","nextYearFormate","toDayFormate","selectedMonth","lastDayInMonth","daysInMonth","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","minDate","maxDate","newValue","renderInput","params","TextField","assign","helperText","DesktopTimePicker","InformationTable_InformationTable","DisplayAllLabs_DisplayAllLabs","token","PrivateRouteInstructor","PrivateRouteStudents","PrivateRouteModerator","Login","Id","InstructorLoginCredential","loginCredential","checkValidation","entries","forEach","setItem","jwt","showConfirmButton","timer","_unused","_unused2","io_index_esm","StudentsNav","StudentsSide","StudentsHome","removeBookingLimit","App","setIsOpen","dist","path","Login_Login","PrivateRoutes_PrivateRouteStudents","StudentsNav_StudentsNav","SelectSubjectMod_SelectSubjectMod","StudentsHome_StudentsHome","PrivateRoutes_PrivateRouteInstructor","Instructors_InstructorNav","InstructorHome_InstructorHome","AddStudent_AddStudent","PrivateRoutes_PrivateRouteModerator","Moderator_ModeratorNave","Home_Home","LabManagement_LabManagement","InstructorsManagement_InstructorsManagement","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","module","exports"],"mappings":"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","file":"static/js/main.6d4a3a6e.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\n\n\nexport const Nav = styled.nav`\n\nbackground: ${({ scrollNav }) => (scrollNav ? '#c6e4d1' : 'transparent')};\nheight: 103px;\n/* margin-top: -80px; */\ndisplay: flex;\n-webkit-flex-direction: column; \n  flex-direction: column; \n  padding: 0;\n  margin: 0;\n  list-style: none;\n  -ms-box-orient: horizontal;\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -moz-flex;\n  display: -webkit-flex;\n  display: flex;\njustify-content: right;\nalign-items: right;\nfont-size: 1rem;\nposition: sticky;\ntop: 0;\nz-index: 10;\n@media screen and (max-width:960px){\n     transition: 0.8s all ease;\n     display: grid;\n    justify-content: center;\n    margin: 17px 0;\n}`;\nexport const NavContainer = styled.div`\ndisplay: flex;\njustify-content: space-between;\nheight: 103px;\nz-index: 1;\nwidth: -webkit-fill-available;\npadding: 0 24px;\nmax-width: 1387px; `;\n\nexport const NavLogo = styled(NavLink)`\ncolor: #fff;\njustify-self: flex-end;\ncursor: pointer;\nfont-size:1.5rem;\ndisplay: flex;\nalign-items: center;\nmargin-right: 24px;\nfont-weight: bold;\ntext-decoration: none;\n\n`;\nexport const Image = styled.img`\n    width: ${({ scrollNav }) => (scrollNav ? `100px` : `227px`)};\n    margin: auto;\n    @media screen and (max-width:960px){\n        width: 130px;\n        display: grid;\n    justify-content: center;\n        }\n    `\n\nexport const ResponsiveIcon = styled.div`\ndisplay:none;\n@media screen and (max-width: 769px){\n    display: grid;\n    position: absolute;\n    color: #607d8b;\n    top: 0;\n    right: 0;\n    transform: translate(-100%,60%); \n    font-size: 1.8rem;\n    cursor: pointer;\n}`;\n\nexport const NavMenu = styled.ul`\ndisplay: flex;\nalign-items: center;\nlist-style: none;\ntext-align: center;\nmargin: revert;\nbackground-color: #efefef;\nborder-radius: 50px;\npadding: 0 10px;\ncolor: #607d8b;\n@media screen and (max-width:769px){\n    display:none;\n}`;\n\nexport const NavItem = styled.li`\n`;\n\nexport const NavLinks = styled(NavLink)`\ndisplay: flex;\nalign-items: center;\ntext-decoration: none;\npadding: 0 1rem;\nheight: 100%;\ncursor: pointer;\ncolor: #23bbc8;\n&:hover{\n  color: #636467;\n}\n&.active{\n    border-bottom: 2px solid #607d8b;\n}`;\n\n\nexport const LogoutContainer = styled.div`\n    display: flex;\n    height: fit-content;\n    justify-content: flex-end;\n    height: auto;\n@media screen and (max-width: 769px) {\n    display: none;\n}`\nexport const Logout = styled.button`\nheight: fit-content;\nalign-self: center;\nborder-radius: 50px;\nwhite-space: nowrap;\npadding: 10px 22px;\ntext-align:left;\nfont-size: 16px;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #3EC1B9;\n&:hover{\n  color: #B38533;\n}\n`","let apiURL ;\n\nconst expressPort = 5000;\nconst apiUrls = {\n    development:`http://localhost:${expressPort}/`,\n    production:`https://tvtc-b.herokuapp.com/`,\n} \n\nif( window.location.hostname === 'localhost' ){\n    apiURL = apiUrls.development;\n} else{\n    apiURL = apiUrls.production;\n}\n\nexport default apiURL; ","import jwt_decode from 'jwt-decode';\nimport moment from 'moment';\n\nexport const checkStorage = () => {\n  return (localStorage.getItem('currentUser') !== undefined && localStorage.getItem('currentUser') !== null) ? true : false;\n};\nexport const getToken = () => {\n  return (checkStorage()) ? localStorage.getItem('currentUser') : false\n};\nexport const getInfo = () => {\n  return (checkStorage()) ? jwt_decode(localStorage.getItem('currentUser')) : false\n};\nexport const getId = () => {\n  if (checkStorage()) {\n    return getInfo().data._id\n  }\n}\nexport const getFullName = () => {\n  if (checkStorage()) {\n    return getInfo().data.FullName\n  }\n}\nexport const dateFormat = (date) => {\n  let displayDate = new Date(date)\n  displayDate = displayDate.toString().split(' ')\n  return `${displayDate[2]} ${displayDate[1]} ${displayDate[3]}`\n}\nexport const DayIs = (date) => {\n  let displayDate = new Date(date)\n  console.log(displayDate,date);\n  displayDate = displayDate.toString().split(' ')\n  switch (displayDate[0]) {\n    case \"Sat\":\n      displayDate = \"السبت\";\n      break;\n    case \"Sun\":\n      displayDate = \"الأحد\";\n      break;\n    case \"Mon\":\n      displayDate = \"الاثنين\";\n      break;\n    case \"Tue\":\n      displayDate = \"الثلاثاء\";\n      break;\n    case \"Wed\":\n      displayDate = \"الأربعاء\";\n      break;\n    case \"Thu\":\n      displayDate = \"الخميس\";\n      break;\n    case \"Fri\":\n      displayDate = \"الجمعة\";\n      break;\n    default:displayDate = \tdisplayDate[0]\n  }\n  return `${displayDate}`\n}\nexport const timeFormat = (date) => {\n  let displayDate = new Date(date)\n  displayDate = displayDate.toString().split(' ')\n  displayDate = displayDate[4].split(':')\n  return displayDate[0] + ':' + displayDate[1]\n}\nexport const getHoursDiff = (startDate, endDate) => {\n  const msInHour = 1000 * 60 * 60;\n  return Math.round(Math.abs(endDate - startDate) / msInHour);\n}\nexport const examDuration = (from, to) => {\n  const hours = (new Date(to).getHours() - new Date(from).getHours());\n  const minutes = (new Date(to).getMinutes() - new Date(from).getMinutes());\n  return `${hours}:${minutes}`\n}\nexport const validFileType = (file) => {\n  const fileTypes = [\n    \"application/vnd.ms-excel\",\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n  ];\n  return fileTypes.includes(file.type);\n}\n\n\n\nexport const checkOverlappingDates = (timeFrom, timeTo, checkTimeConflict) => {\n  return checkTimeConflict.some((elem) => {\n    return (!((moment(timeTo).diff(moment(elem.From))) < 0 ||\n      (moment(timeFrom).diff(moment(elem.To))) > 0\n    ))\n  })\n}\nexport const validFileTypePDF = (file) => {\n  const fileTypes = [\n    \"application/pdf\",\n  ];\n  return fileTypes.includes(file.type);\n}\n// start the time out\nconst EXPIRE_TIME = 1000 * 60 * 60 * 5;\nsetTimeout(function () {\n  localStorage.clear();\n  window.location.reload(false);\n}, EXPIRE_TIME);","import apiURL from './ApiConfig';\nimport axios from 'axios';\nimport Swal from \"sweetalert2\";\n\nimport { checkStorage, getToken } from '../helperMethods';\n//================== Helper Method ============================||\nconst config = {\n  headers: {}\n}\nif (checkStorage()) {\n  config.headers['Authorization'] = `Bearer ${getToken()}`\n}\n\n//================== Helper Method ============================||\n//---------------All POST Request-------------------//\n\n//========================= Register Single Instructor =============================\\\\\nexport const InstructorSingleRegistration = async (req) => {\n  return axios({\n    method: 'POST',\n    url: apiURL + 'api/Instructor/register',\n    data: {\n      FullName: req.FullName,\n      Email: req.Email,\n      password: req.password,\n      InstructorId: req.InstructorId,\n      Phone: req.Phone,\n      InstructorReference: req.InstructorReference,\n      Subject: req.Subject,\n      HasPermissionTo: req.HasPermissionTo\n    }\n  },\n    config)\n}\n//========================= Add Instructors From File =============================\\\\\nexport const InstructorFileRegistration = async (File) => {\n  const formData = new FormData();\n  formData.append(\"file\", File);\n  return await axios.post(`${apiURL}api/upload/Instructor/register/fromFile`, formData, config)\n    .then(res => {\n      if (res === \"Error\") {\n        Swal.fire({\n          title: ` ${res.data.message}`,\n          icon: 'error',\n          showCancelButton: false,\n        })\n      }\n      window.location.reload(false)\n    }\n    ).catch(err => console.log(err));\n};\n//========================= Register Single Student =============================\\\\\nexport const StudentSingleRegistration = async (req) => {\n  return axios({\n    method: 'POST',\n    url: apiURL + 'api/Student/register',\n    data: {\n      FullName: req.FullName,\n      Email: req.Email,\n      password: req.password,\n      StudentId: req.StudentId,\n      Phone: req.Phone,\n      StudentReference: req.StudentReference,\n      Subject: req.Subject,\n      Instructor_id: req.Instructor_id\n    },\n    config: config\n  })\n}\n//========================= Register Single Student =============================\\\\\nexport const LabRegistration = async (req) => {\n  return await axios.post(`${apiURL}api/add/new/lab`, req, config)\n}\nexport const NewLabBooking = async (req, id) => {\n  return await axios.post(`${apiURL}api/instructor/booking/new/lab/${id}`, req, config)\n}\nexport const StudentReserveNewTest = async (req, id) => {\n  return await axios.post(`${apiURL}api/student/book/new/test/${id}`, req, config)\n}\nexport const InstructorsLogin = async (req) => {\n  return await axios.post(`${apiURL}api/Instructor/login`, req)\n}\nexport const StudentsLogin = async (req) => {\n  return await axios.post(`${apiURL}api/Student/login`, req)\n}\nexport const getAllTestAvailableForStudent = (id, req) => {\n  return axios.post(`${apiURL}api/get/all/available/test/byStudent/${id}`, req, config);\n}\n//---------------All Update-----------------------//\n\nexport const UpdateLabById = async (req, id) => {\n  return await axios.post(`${apiURL}api/update/lab/${id}`, req, config)\n}\nexport const UpdateInstructorById = async (req, id) => {\n  return await axios.post(`${apiURL}api/update/Instructor/by/${id}`, req, config)\n}\n\nexport const UpdateStudentById = async (req, id) => {\n  return await axios.post(`${apiURL}api/update/Student/by/${id}`, req, config)\n}\nexport const UpdateStudentAttemptsById = async (req, id) => {\n  return await axios.post(`${apiURL}api/instructor/update/Student/Attempts/${id}`, req, config)\n}\n\n//---------------All GET Request-------------------//\nexport const getInstructorById = (id) => {\n  return axios.get(`${apiURL}api/get/all/Instructor/${id}`);\n}\nexport const getInstructors = () => {\n  return axios.get(`${apiURL}api/get/all/Instructor`);\n}\nexport const getAllDivision = () => {\n  return axios.get(`${apiURL}api/Find/All/Divisions`);\n}\nexport const getAllAvailableLabs = () => {\n  return axios.get(`${apiURL}api/get/all/available/lab`, config);\n}\nexport const getAllBookedLabByInstructorId = (id) => {\n  return axios.get(`${apiURL}api/Find/all/booked/Lab/${id}`, config);\n}\nexport const getAllBookedLabByStudentId = (id) => {\n  return axios.get(`${apiURL}api/Find/all/booked/test/${id}`, config);\n}\nexport const getAllLabs = () => {\n  return axios.get(`${apiURL}api/get/all/lab`);\n}\nexport const getStudentsByInstructorId = (id) => {\n  return axios.get(`${apiURL}api/Find/All/Division/by/instructorId/${id}`);\n}\nexport const getAllInstructorId = () => {\n  return axios.get(`${apiURL}api/get/all/InstructorId`, config);\n}\nexport const getAllStudents = () => {\n  return axios.get(`${apiURL}api/get/all/Student`, config);\n}\nexport const DownloadExcel = () => {\n  return axios.get(`${apiURL}api/export/data`, {responseType: 'arraybuffer', headers: { 'Authorization': `Bearer ${getToken()}`} })\n};\nexport const expiredAppointment = () => {\n  return axios.get(`${apiURL}api/Check/out/date`, config);\n}\n\n//---------------All remove Request-------------------//\nexport const RemoveAppointmentByLabId = async (req, id) => {\n  return await axios.post(`${apiURL}api/remove/appointment/by/Lab/${id}`, req, config)\n}\nexport const RemoveExamBookedByStudentId = async (id, req) => {\n  return await axios.post(`${apiURL}api/student/delete/booked/test/${id}`, req, config)\n}\nexport const RemoveLabById = (id) => {\n  return axios.delete(`${apiURL}api/delete/lab/by/${id}`);\n}\nexport const RemoveInstructorById = (id) => {\n  return axios.delete(`${apiURL}api/remove/instructor/by/${id}`, config);\n}\nexport const RemoveStudentById = (id) => {\n  return axios.delete(`${apiURL}api/remove/student/by/${id}`, config);\n}\nexport const RemoveAppointmentByInstructorById = (id, data) => {\n  return axios.post(`${apiURL}api/Instructor/delete/booked/lab/by/${id}`, data, config);\n}\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!//\nexport const RemoveCollections = () => {\n  return axios.delete(`${apiURL}api/remove/collections`, config);\n}\n","import styled from 'styled-components'\nexport const TableWrapper = styled.div`\n    // margin: 10px 70px 70px;\n    box-shadow: 0px 0px 26px rgba( 0, 0, 0, 0.2 );\n    @media (max-width: 767px) {\n        margin: auto;\n        &:before{\n        display: block;\n        text-align: right;\n        font-size: 11px;\n        color: white;\n        padding: 0 0 10px;\n    }\n}\n`\nexport const TableTitle = styled.h3`\n    text-align: center;\n    margin-bottom: 1rem;\n`\nexport const TableWithTitleWrapper = styled.div`\n    display: flow-root;\n    width: 100%;\n    padding: 2%;\n    margin-top: 2%;\n`\nexport const TableContainer = styled.table`\n    border-radius: 5px;\n    font-size: 12px;\n    font-weight: normal;\n    border: none;\n    border-collapse: collapse;\n    width: 100%;\n    max-width: 100%;\n    white-space: nowrap;\n    background-color: white;\n    // box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n    // margin-top: 12%;\n    @media (max-width: 767px) {\n    display: block;\n        width: 100%;\n }\n`\n\nexport const TableHedContainer = styled.thead`\n    -webkit-box-shadow:-3px 6px 2px 0 rgb(0 0 0 / 14%), 0 3px 1px -2px rgb(0 0 0 / 12%), 0 1px 0px 0 rgb(0 0 0 / 0%);\n    @media (max-width: 767px) {\n        display: block;\n        float: right;\n    }\n`\nexport const TableBodyContainer = styled.tbody`\n@media (max-width: 767px) {\n    display: block;\n    width: auto;\n    position: relative;\n    overflow-x: auto;\n}\n`\nexport const TableTh = styled.th`\n    text-align: center;\n    padding: 8px;\n    color: #ffffff;\n    font-size: 1.2rem;\n    background: #4FC3A1;\n    &:nth-child(odd) {\n    color: #ffffff;\n    background: #324960;\n}\n@media (max-width: 767px) {\n    display: block;\n    &:last-child{\n        border-bottom: none;\n    }\n    padding: 20px .625em .625em .625em;\n        height: 60px;\n        vertical-align: middle;\n        box-sizing: border-box;\n        overflow-x: hidden;\n        overflow-y: auto;\n        width: 120px;\n        font-size: 1rem;\n        text-overflow: ellipsis;\n        text-align: center;\n        border-bottom: 1px solid #f7f7f9;\n        border-bottom: 1px solid #f7f7f9;\n}\n`\nexport const TableTd = styled.td`\n    text-align: center;\n    padding: 8px;\n    border-left: 1px solid #f8f8f8;\n    font-size: 0.90rem;\n    @media (max-width: 767px) {\n        padding: 20px .625em .625em .625em;\n        height: 60px;\n        vertical-align: middle;\n        box-sizing: border-box;\n        overflow-x: hidden;\n        overflow-y: auto;\n        width: 120px;\n        font-size: 13px;\n        text-overflow: ellipsis;\n        &:nth-child(odd) {\n        background: #F8F8F8;\n        border-left: 1px solid #E6E4E4;\n    }\n    &:nth-child(even) {\n        border-left: 1px solid #E6E4E4;\n    }\n        display: block;\n    }\n`\nexport const TableTr = styled.tr`\n\n&:nth-child(even) {\n    background: #F8F8F8;\n}\n@media (max-width: 767px) {\n    display: table-cell;\n&:nth-child(even) {\n        background: transparent;\n    }\n    }\n`\nexport const Tr = styled.tr`\n@media (max-width: 767px) {\ndisplay: table-cell;\n}\n`\n\nexport const AcReButton = styled.button`\n-webkit-appearance: none;\n    background: -webkit-gradient(to right, #a2ccb6 0%, #fceeb5 50%, #ee786e 100%);\n    background: ${({Blue,halfBlue}) => (halfBlue ? 'linear-gradient(to right,#ff5722 0%,#2b5876 50%,#2b5876 100%)' : Blue ?  'linear-gradient(to right,#2778c4 0%,#2b5876 50%,#2b5876 100%)' : 'linear-gradient(to right,#f27474 0%,#ff5722 50%,#ff5722 100%)')};\n    border-radius: 5rem;\n    border:none;\n    box-shadow: 0 0.5rem 1rem rgb(0 0 0 / 15%);\n    color: #fff;\n    cursor: pointer;\n    color: #fff;\n    cursor: pointer;\n    font-size: 1rem;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    letter-spacing: 0.05em;\n    outline: none;\n    min-width: 228px;\n    -webkit-tap-highlight-color: transparent;\n    &:hover {\n  animation-name: gradient;\n  -webkit-animation-name: gradient;\n  animation-duration: 2s;\n  -webkit-animation-duration: s;\n  animation-iteration-count: 1;\n  -webkit-animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  -webkit-animation-fill-mode: forwards;\n  background: ${({Blue}) => (Blue ?'#2778c4' : '#f27474')};\n  }\n  @media (max-width: 767px) {\n    margin: 1rem 0;\n    padding: 1rem;\n  }\n`\nexport const ButtonContainer = styled.div`   \ndisplay: flex;\njustify-content: space-around;\nheight: 4rem;\nmargin: 2rem;\n@media (max-width: 767px) {\n    display: grid; \n}\n`","import React, { Component } from 'react'\nimport { UpdateStudentAttemptsById } from '../ApiConfig/Api';\nimport Swal from \"sweetalert2\";\n\nexport default class IncreaseStudentAttempt extends Component {\nconstructor(props) {\n  super(props)\n\n  this.state = {\n    increaseAttempts:0\n  }\n}\n    updateAttempt = ( id, For ) => {\n        UpdateStudentAttemptsById(For, id)\n            .then(response => {\n                if (response.status === 200) Swal.fire({ icon: 'success', title: response.data.message });\n                else Swal.fire({ icon: 'success', title: response.data.message });\n            })\n            .catch(error => Swal.fire({ icon: 'error', title: \"حدث خطا\" }))\n    }\n    handleSubmit =()=>{\n        const { id, For } = this.props.data\n        const {increaseAttempts} = this.state\n        const data ={For , increaseAttempts}\n        Swal.fire({\n            title: 'اضافة محاولات',\n            text: `سيتم زيادة عدد المحاولات بمقدار : ${increaseAttempts}`,\n            icon: 'info',\n            showDenyButton: true,\n            confirmButtonColor: '#d33',\n            denyButtonColor: '#3085d6',\n            confirmButtonText: 'نعم, تأكيد الاضافة  ',\n            denyButtonText: `رجوع`,\n          }).then((result) => {\n            if (result.isConfirmed) {\n                this.updateAttempt(id, data )\n            }\n          })\n    }\n    render() {\n        return (\n            <div className='modalContainer'>\n                <div className=\"modal-container\" id=\"modal-opened\">\n                    <div className=\"modal\">\n                        <form className='form__container'>\n                            <div className=\"modal__details\">\n                                <p className=\"modal__text\">الرجاء اختيار عدد المحاولات المراد اضافتها</p>\n                                <div className='flex--space--around'>\n                                <p className=\"modal__text\"> <button className=\"modal__btn\" onClick={e => this.setState({increaseAttempts: 1})}>1</button></p>\n                                <p className=\"modal__text\"> <button className=\"modal__btn\" onClick={e => this.setState({increaseAttempts:2})}>2</button></p>\n                                <p className=\"modal__text\"> <button className=\"modal__btn\" onClick={e => this.setState({increaseAttempts:3})}>3</button></p>\n                                </div>\n                            </div>\n                            <p className=\"modal__text\"></p>\n                            <button className=\"modal__btn\" onClick={e => this.handleSubmit(e)}>تأكيد &rarr;</button>\n                            <button className=\"link-2\" onClick={this.props.toggle}></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { getStudentsByInstructorId } from '../ApiConfig/Api';\nimport * as TableElement from '../Styles/styledTable';\nimport { getFullName, getId } from '../helperMethods'\nimport IncreaseStudentAttempt from './IncreaseStudentAttempt'\nimport '../../App.css'\nimport '../Styles/searchBar.css';\nexport default class Instructors extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      filteredData: [],\n      searchIn: null,\n      toggle: false,\n      updateStudent: {\n        For: \"\",\n        id: \"\",\n      }\n    }\n  }\n  componentDidMount() {\n    getStudentsByInstructorId(getId())\n      .then(response => {\n        this.setState({ data: response.data })\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n  handleSearchChange = (e, index) => {\n    const { data } = this.state;\n    const filteredData = data[index].Students.filter(Students => Students.FullName.includes(e.target.value) || Students.StudentId.includes(e.target.value))\n    this.setState({ filteredData, searchIn: index })\n  }\n  handleStudentAttempt = (id, For) => {\n    this.setState({ updateStudent: { id, For } })\n    this.toggleHandler()\n  }\n  toggleHandler = () => {\n    const { toggle } = this.state;\n    this.setState({ toggle: !toggle })\n  }\n  dataSet = (students, currentDiv) => {\n    return (\n      students.map((currentStudent, stdIndex) => {\n        return <TableElement.TableTr className='single--icon' key={stdIndex} onClick={() => this.handleStudentAttempt(currentStudent._id, currentDiv.Subject)}>\n          <TableElement.TableTd>{currentStudent.StudentId}</TableElement.TableTd>\n          <TableElement.TableTd>{currentStudent.FullName}</TableElement.TableTd>\n          <TableElement.TableTd>{currentStudent.Phone}</TableElement.TableTd>\n          {(currentStudent.DoneTestOn.length !== 0) ? currentStudent.DoneTestOn.map((currentSubject ,index)=> { return <TableElement.TableTd key={index}>{(currentSubject.subject === currentDiv.Subject) ? currentSubject.AttemptsCount : 0}</TableElement.TableTd> }) : <TableElement.TableTd>{0}</TableElement.TableTd>}\n        </TableElement.TableTr>\n      }))\n  }\n  render() {\n    const { data, filteredData, searchIn, toggle, updateStudent } = this.state;\n    let allDivision = \"...\"\n    if (data.length > 0) {\n      allDivision = data.map((currentDiv, index) => {\n        return (\n          <TableElement.TableWithTitleWrapper className={this.props.hide ? 'hide' : 'display'} key={index} >\n            <TableElement.TableWrapper>\n              <TableElement.TableContainer>\n                <TableElement.TableHedContainer>\n                  <TableElement.TableTr>\n                    <TableElement.TableTh>رقم الشعبة</TableElement.TableTh>\n                    <TableElement.TableTh>المادة</TableElement.TableTh>\n                    <TableElement.TableTh colSpan={2} className='search--body'>\n                      <form\n                        onSubmit={(e) => e.preventDefault()}\n                        className='search--form'>\n                        <label className='search--label' for=\"search\">Search</label>\n                        <input className='search--input' onChange={(e) => this.handleSearchChange(e, index)} id=\"search\" type=\"search\" pattern=\".*\\S.*\" required />\n                        <span class=\"caret\"></span>\n                      </form>\n                    </TableElement.TableTh>\n                  </TableElement.TableTr>\n                </TableElement.TableHedContainer>\n                <TableElement.TableBodyContainer>\n                  <TableElement.TableTr>\n                    <TableElement.TableTd>{currentDiv.DivisionId}</TableElement.TableTd>\n                    <TableElement.TableTd >{currentDiv.Subject}</TableElement.TableTd>\n                    <TableElement.TableTd >{`\\t\\t\\t\\t\\t\\t`}</TableElement.TableTd>\n                    <TableElement.TableTd >{`\\t\\t\\t\\t\\t\\t`}</TableElement.TableTd>\n                  </TableElement.TableTr>\n                </TableElement.TableBodyContainer>\n                <TableElement.TableHedContainer>\n                  <TableElement.TableTr>\n                    <TableElement.TableTh> الرقم الاكاديمي</TableElement.TableTh>\n                    <TableElement.TableTh>اسم المتدرب</TableElement.TableTh>\n                    <TableElement.TableTh>الجوال</TableElement.TableTh>\n                    <TableElement.TableTh>عدد المحاولات</TableElement.TableTh>\n                  </TableElement.TableTr >\n                </TableElement.TableHedContainer>\n                <TableElement.TableBodyContainer>\n                  {(filteredData.length > 0 && searchIn === index) ? this.dataSet(filteredData, currentDiv) : this.dataSet(currentDiv.Students, currentDiv)}\n                </TableElement.TableBodyContainer>\n              </TableElement.TableContainer>\n            </TableElement.TableWrapper>\n          </TableElement.TableWithTitleWrapper>\n        )\n      })\n    }\n    return (\n      <div>\n        <div>\n          <h3 className='display--name'>\n            {getFullName()}\n          </h3>\n        </div>\n        {(toggle) ? <IncreaseStudentAttempt data={updateStudent} toggle={()=>this.toggleHandler()}/> : \"\"}\n        {allDivision}\n      </div>\n    )\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nimport Instructors from './Instructors';\nimport '../../App.css'\nconst InstructorNav = ({ toggle }) => {\n    const [scrollNav, setScroll] = useState(false);\n    const [hide, setHidden] = useState(true);\n\n    const navOnChange = () => {\n        if (window.scrollY >= 30) {\n            setScroll(true);\n        } else {\n            setScroll(false);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('scroll', navOnChange);\n    }, []);\n    const toggleHandler = () => {\n        setHidden(true)\n    };\n    const displayDivision = ()=>{\n        setHidden(false)\n    };\n    const logout = (e) => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#607d8b' }}>\n                <MainHeader.Nav scrollNav={scrollNav}>\n                    <MainHeader.NavContainer >\n                        <MainHeader.NavLogo to='/Instructor/' onClick={displayDivision}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                        <MainHeader.ResponsiveIcon onClick={toggle}>\n                            <FaBars className=\"FaBarsIcon\" />\n                        </MainHeader.ResponsiveIcon>\n                        <MainHeader.NavMenu>\n                        <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/Home'}\n                                    duration={500}\n                                   offset={-80}\n                                   onClick={toggleHandler}\n                                >استعراض الحجوزات</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/AddStudent'}\n                                    duration={500}\n                                   offset={-80}\n                                   onClick={toggleHandler}\n                                >اضافة متدرب</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Instructor/LabBooking'}\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                    onClick={toggleHandler}\n                                   offset={-80}\n                                > حجز القاعات</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                        </MainHeader.NavMenu>\n                        <MainHeader.LogoutContainer>\n                            <MainHeader.Logout\n                                duration={500}\n                                spy={true.toString()}\n                                exact={true.toString()}\n                                onClick={e => logout(e)}>\n                                تسجيل الخروج\n                            </MainHeader.Logout>\n                        </MainHeader.LogoutContainer>\n                    </MainHeader.NavContainer>\n                </MainHeader.Nav>\n            </IconContext.Provider>\n            <Instructors hide={hide}/>\n            <Outlet />\n        </>\n    )\n}\nexport default InstructorNav","import styled from 'styled-components';\nimport { Link} from 'react-router-dom';\nimport {FaTimes} from 'react-icons/fa';\n\nexport const SidebarContainer = styled.aside`\nposition: fixed;\nz-index: 999;\nwidth: 100%;\nheight: 100%;\nbackground: #0d0d0d;\ndisplay: grid;\nalign-items: center;\ntop: 0;\nleft: 0;\ntransition: 0.3s ease-in-out;\nopacity: ${({ isOpen }) => (isOpen ? '100%' : '0')};\ntop:${({ isOpen }) => (isOpen ? '0' : '-100%')};`;\n\nexport const CloseIcon = styled(FaTimes)`\ncolor: #607d8b;`;\n\nexport const SidebarMenu = styled.ul`\ndisplay: grid;\ngrid-template-columns: 1fr;\ngrid-template-rows: repeat(6, 80px);\ntext-align: center;\n@media screen and (max-width: 480px){\n    grid-template-rows:repeat(6,60px);\n}`;\n\nexport const Icon = styled.div`\nposition: absolute;\ntop: 1.2rem;\nright: 1.5rem;\nbackground: transparent;\nfont-size: 2rem;\ncursor: pointer;\noutline: none;`\n\nexport const SidebarWrapper = styled.div`\ncolor: #fff;\n`\nexport const SidebarLink = styled(Link)`\ndisplay: flex;\nalign-items: center;\njustify-content : center;\nfont-size: 1.5rem;\ntext-decoration: none;\nlist-style: none;\ntransition: 0.2s ease-in-out;\ntext-decoration: none;\ncolor: #3EC1B9;\ncursor: pointer;\n&:hover {\n    color: #01bf71;\n    transition: 0.2s ease-in-out;\n}\n`\nexport const SideBtnWrap = styled.div`\ndisplay: flex;\njustify-content: center;\n`\nexport const SidebarRoute = styled(Link)`\nborder-radius: 50px;\nbackground: #01bf71;\nwhite-space: nowrap;\npadding: 16px 64px;\ncolor: #010606;\nfont-size: 16px;\noutline: none;\nborder: none;\ncursor: pointer;\ntransition: all 0.2s ease-in-out;\ntext-decoration: none;\n&:hover {\n    transition: all 0.2s ease-in-out;\n    background: #fff;\n    color:#010606;\n}`","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\nexport default function InstructorSidebar({isOpen,toggle}) {\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Instructor/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Instructor/AddStudent\" onClick={toggle} > اضافة متدرب </SidebarLink>\n        <SidebarLink to=\"/Instructor/LabBooking\" onClick={toggle}>حجز القاعات</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React, { Component } from 'react'\nimport logo from '../Images/logo.png'\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport '../Styles/printStyle.css'\n\nexport default class PrintStudentTable extends Component {\n    render() {\n        let allStudents = \"...\"\n        if (this.props.student.length > 0) {\n            allStudents = this.props.student.map((currentStudent, currentStudentIndex) => {\n                return (\n                    <tr className='cell--border print--break' key={currentStudentIndex}>\n                        <td className=\"table--cell\">{currentStudentIndex + 1}</td>\n                        <td className=\"table--cell\">{currentStudent.StudentId}</td>\n                        <td className=\"table--cell\">{currentStudent.FullName}</td>\n                        <td className=\"table--cell\">{\"  \\t\\t\\t \\t \"}</td>\n                    </tr>\n                )\n            })\n        }\n        return (\n            <>\n                <table className='print--container table--direction hide' >\n                    <thead><tr><td>\n                        <div class=\"header-space\">  <div class=\"header\"><MainHeader.Image src={logo} alt=\"\" /> </div>\n                            <h3 className='print--heder--subject'>{`اختبار مادة:\\t  ${this.props.subject}`}</h3>\n                            <h4 className='print--heder--duration'>{`مدة الاختبار : ${this.props.duration} س`}</h4>\n                        </div>\n                    </td></tr></thead>\n                    <tbody><tr><td className='content--container'>\n                        <table className='print--mode table--cell table--direction' id='studentTable'>\n                            <thead>\n                                <tr className='print--break'>\n                                    <th className=\"table--cell\">{\" \"}</th>\n                                    <th className=\"table--cell\">  الرقم الاكاديمي</th>\n                                    <th className=\"table--cell\"> اسم المتدرب</th>\n                                    <th className=\"table--cell\">{\"\\t التوقيع\"}</th>\n                                </tr>\n                            </thead>\n                            <tbody className='tbody-container'>\n                                {allStudents}\n                            </tbody>\n                        </table>\n                    </td></tr></tbody>\n                    <tfoot><tr ><td>\n                        <div class=\"footer-space\"><div class=\"footer\"></div></div>\n                    </td></tr></tfoot>\n                </table>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../Styles/styledTable'\nimport PrintStudentTable from './PrintStudentTable'\nimport { examDuration } from '../helperMethods';\nimport ReactToPrint from \"react-to-print\";\nimport '../Styles/printStyle.css'\nimport { FcPrint } from 'react-icons/fc';\nexport default class StudentBookedInfo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            toggle: false\n        }\n    }\n    saveFileHandler = () => {\n        this.setState({ toggle: !this.state.toggle })\n    }\n\n    render() {\n        let allStudents = (\n            <StyledTable.TableTr>\n            <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد متدربين</StyledTable.TableTd>\n          </StyledTable.TableTr>\n        )\n        if (this.props.data.Student.length > 0) {\n            allStudents = this.props.data.Student.map((currentStudent, currentStudentIndex) => {\n                return (\n                    <StyledTable.TableTr key={currentStudentIndex}>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudentIndex + 1}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudent.StudentId}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{currentStudent.FullName}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n\n        return (\n            <>\n                <div className='print--icon--container'>\n                    <ReactToPrint\n                        trigger={() => <FcPrint className='print--icon' />}\n                        content={() => this.componentRef}\n                    />\n                    <PrintStudentTable ref={el => (this.componentRef = el)} student={this.props.data.Student} subject={this.props.data.For} duration={examDuration(this.props.data.From, this.props.data.To)} />\n                </div>\n                <StyledTable.TableWithTitleWrapper>\n                <StyledTable.TableWrapper>\n                    <StyledTable.TableContainer id='studentTable'>\n                        <StyledTable.TableHedContainer>\n                            <StyledTable.Tr>\n                                <StyledTable.TableTh className=\"tableHeader\">{\" \"}</StyledTable.TableTh>\n                                <StyledTable.TableTh className=\"tableHeader\">  الرقم الاكاديمي</StyledTable.TableTh>\n                                <StyledTable.TableTh className=\"tableHeader\"> اسم المتدرب</StyledTable.TableTh>\n                            </StyledTable.Tr>\n                        </StyledTable.TableHedContainer>\n                        <StyledTable.TableBodyContainer>\n                            {allStudents}\n                        </StyledTable.TableBodyContainer>\n                    </StyledTable.TableContainer>\n                </StyledTable.TableWrapper >\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}","import React from 'react'\nimport * as StyledTable from '../Styles/styledTable'\nimport { dateFormat, timeFormat, DayIs } from '../helperMethods';\n\nexport default function FinishedExams({finishedExam}) {\n    let allExam = \"\"\n    if (finishedExam) {\n        allExam = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد اختبارات محجوزة</StyledTable.TableTd>\n            </StyledTable.TableTr>\n        )\n    }\n    if (finishedExam) {\n        if (finishedExam.length !== 0) {\n            allExam = finishedExam.map((BookedLab, BookedLabIndex) => {\n                return (\n                    <StyledTable.TableTr className='finished--exam' key={BookedLabIndex}>\n                        <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{BookedLab.For}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{DayIs(BookedLab.From)}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n    }\n    return (\n        <>\n            <StyledTable.TableWrapper>\n                <StyledTable.TableContainer>\n                    <StyledTable.TableHedContainer>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableHedContainer>\n                        <tr>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> المادة </StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> اليوم</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> التاريخ</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"finished--ex--heder tableHeader\"> الوقت</StyledTable.TableTh>\n                        </tr>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableBodyContainer>\n                        {allExam}\n                    </StyledTable.TableBodyContainer>\n                </StyledTable.TableContainer>\n            </StyledTable.TableWrapper>\n        </>\n    )\n}\n","import React, { Component } from 'react'\nimport { getAllBookedLabByInstructorId, RemoveAppointmentByInstructorById, expiredAppointment } from '../ApiConfig/Api';\nimport { getId, dateFormat, timeFormat, DayIs } from '../helperMethods';\nimport * as StyledTable from '../Styles/styledTable'\nimport StudentBookedInfo from './StudentBookedInfo';\nimport { MdDeleteSweep } from 'react-icons/md';\nimport FinishedExams from '../Students/FinishedExams';\n\nimport Swal from \"sweetalert2\";\n\nimport '../Styles/spinner.css'\nlet allStudents\nexport default class InstructorHome extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentBooking: [],\n      selectedRef: false,\n      students: [],\n      finishedExam: []\n    }\n  }\n\n  componentDidMount() {\n    // Mack API call \n    getAllBookedLabByInstructorId(getId())\n      .then((response) => {\n        this.setState({ currentBooking: response.data.currentBooking, finishedExam: response.data.finishedExam })\n      })\n      .catch((error) => {\n      })\n    expiredAppointment();\n  }\n  removeBookedAppointment = (id, currentAppointment) => {\n    RemoveAppointmentByInstructorById(id, currentAppointment)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n      }).catch(error => {\n        if (error.response.status === 405) Swal.fire({ icon: 'warning', title: error.response.data.message });\n        else { Swal.fire({ icon: 'error', title: `حدث خطا` }) }\n      })\n  }\n  removeAppointment = (index) => {\n    const { currentBooking } = this.state\n    // if (getHoursDiff(new Date(currentBooking[index].From), new Date()) <= removeBookingLimit) Swal.fire({ icon: 'warning', title: \"لايمكن حذف او تعديل الاختبار قبل 24 ساعة من موعده\", confirmButtonText: 'موافق ', })\n    // else {\n    Swal.fire({\n      title: 'تأكيد الحذف',\n      text: \"سيتم حذف الموعد نهائيا\",\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تأكيد الحذف  ',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.removeBookedAppointment(getId(), { BookingRefId: currentBooking[index]._id, Lab_id: currentBooking[index].Lab_id })\n      }\n    })\n    // }\n  }\n  selectHandler = (index) => {\n    const { selectedRef, currentBooking } = this.state\n    this.setState({ selectedRef: !selectedRef, students: currentBooking[index] })\n  }\n  render() {\n    const { currentBooking, selectedRef, students,finishedExam } = this.state\n    if (currentBooking) {\n      allStudents = (\n        <StyledTable.TableTr>\n        <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد اختبارات محجوزة</StyledTable.TableTd>\n      </StyledTable.TableTr>\n      )\n    }\n    if (currentBooking) {\n      if (currentBooking.length > 0) {\n        allStudents = currentBooking.map((BookedLab, BookedLabIndex) => {\n          return (\n            <StyledTable.TableTr className='single--icon' key={BookedLabIndex} onClick={() => this.selectHandler(BookedLabIndex)}>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabCapacity}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{DayIs(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody table--operation--container\"><div onClick={() => this.removeAppointment(BookedLabIndex)} className='single--icon' > <MdDeleteSweep className='setting--icons' color='#ff5722' /></div>  </StyledTable.TableTd>\n            </StyledTable.TableTr>\n          )\n        })\n      }\n    }\n    return (\n      <div>\n        {(!selectedRef) ? <><StyledTable.TableWithTitleWrapper>\n          <StyledTable.TableTitle>اختبارات قادمة</StyledTable.TableTitle>\n          <StyledTable.TableWrapper>\n            <StyledTable.TableContainer>\n              <StyledTable.TableHedContainer>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableHedContainer>\n                <StyledTable.Tr>\n                  <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> الطاقة الاستيعابية</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> اليوم</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> ادارة الحجز</StyledTable.TableTh>\n\n                </StyledTable.Tr>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableBodyContainer>\n                {allStudents}\n              </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n          </StyledTable.TableWrapper >\n        </StyledTable.TableWithTitleWrapper>\n          {(finishedExam.length > 0) ?\n            <StyledTable.TableWithTitleWrapper>\n              <StyledTable.TableTitle>اختبارات تم الانتهاء منها</StyledTable.TableTitle>\n              <FinishedExams finishedExam={finishedExam} />\n            </StyledTable.TableWithTitleWrapper>\n            : \"\"}\n        </>\n          : <StudentBookedInfo data={students} toggle={this.selectHandler} />}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport '../Styles/popupModal.css'\nimport Swal from \"sweetalert2\";\nimport { CgSoftwareUpload } from 'react-icons/cg';\nimport { checkStorage, getToken, validFileType } from '../helperMethods';\nimport apiURL from '../ApiConfig/ApiConfig';\nimport axios from 'axios';\nexport default class UploadFileForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: \"\"\n        }\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handelFileSubmit = this.handelFileSubmit.bind(this);\n    }\n    InstructorRegistrationFromFile = (file) => {\n        const config = {\n            headers: {}\n        }\n        if (checkStorage()) {\n            config.headers['Authorization'] = `Bearer ${getToken()}`\n        }\n        if (file === \"\" || file === null || file === undefined) {\n            throw Swal.fire({\n                title: ` الرجاء ارفاق الملف`,\n                icon: 'error',\n                showCancelButton: false,\n            })\n        } else {\n            if (!validFileType(file)) {\n                throw Swal.fire({\n                    title: ` الرجاء التأكد من امتداد  الملف  ان يكون تابع لملفات {xls,xlsx} `,\n                    icon: 'error',\n                    showCancelButton: false,\n                })\n            }\n        }\n        let endPoint = this.props.from;\n        (endPoint === \"instructor\") ? endPoint = 'api/upload/Instructor/register/fromFile' : endPoint = 'api/upload/Student/register/fromFile';\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        axios.post(`${apiURL}${endPoint}`, formData, config)\n            .then(res => {\n                Swal.fire({\n                    title: ` تم التسجيل  بنجاح`,\n                    icon: 'success',\n                    confirmButtonText: 'موافق',\n                    showCancelButton: false,\n                })\n                this.props.toggleHandler()\n            }\n            ).catch(err => {\n                console.log(err.response);\n                if(err.response.data){\n                Swal.fire({\n                    title: ` ${err.response.data.message}`,\n                    icon: 'warning',\n                    showCancelButton: false,\n                })\n            }else{\n                Swal.fire({\n                    title: ` حدث خطاء`,\n                    icon: 'warning',\n                    showCancelButton: false,\n                })   \n            }\n            });\n    }\n    handleFileChange(e) {\n        const file = e.target.files[0];\n        this.setState({ file: file })\n    }\n    handelFileSubmit = e => {\n        e.preventDefault();\n        const { file } = this.state\n        this.InstructorRegistrationFromFile(file);\n    };\n    render() {\n        const { file } = this.state\n        console.log(file);\n        let filePh = \"\"\n        if (file !== \"\") filePh = file.name\n        else filePh = \"الرجاء ارفاق الملف\";\n        return (\n            <div className='modalContainer'>\n                <div className=\"modal-container\" id=\"modal-opened\">\n                    <div className=\"modal\">\n                        <form onSubmit={e => this.handelFileSubmit(e)}>\n                            <div className=\"modal__details\">\n                                <div className=\"flex-row-file modal__btn\">\n                                    <label className=\"lf-label-file\" for=\"file\">\n                                        <CgSoftwareUpload />\n                                    </label>\n                                    <input type=\"file\"\n                                        id=\"file\"\n                                        required\n                                        className='lf--input uploadFile'\n                                        name=\"file\"\n                                        accept={validFileType(file)}\n                                        onChange={e => this.handleFileChange(e)}\n                                    />\n                                    <label className=\"fileLabel\" for=\"file\">{filePh}</label>\n                                </div>\n                            </div>\n                            <p className=\"modal__text\"></p>\n                            <button className=\"modal__btn\" onClick={e => this.handelFileSubmit(e)} >حفض وإرسال &rarr;</button>\n                            <button className=\"link-2\" onClick={this.props.toggleHandler}></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport {getAllStudents} from '../../ApiConfig/Api';\nexport default class SearchForStudent extends Component {\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         students:[],\n         filteredData:[]\n      }\n    }\n    componentDidMount(){\n        getAllStudents()\n        .then(response =>{\n            this.setState({students: response.data})\n        })\n    }\n    handleSearchChange = (e) => {\n        const { students } = this.state;\n        console.log(e.target.value);\n        const filteredData = students.filter(Students => Students.FullName.includes(e.target.value) || Students.StudentId.includes(e.target.value))\n        this.setState({filteredData})\n        if(e.target.value === \"\")this.setState({filteredData:[]})\n      }\n      handleStudentEdit = (index)=>{\n        const {filteredData} =this.state\n        const {onNameChange,handelEditToggle} = this.props\n        const student = filteredData[index]\n        console.log(student.StudentId);\n        onNameChange(student.FullName,student.Email,student.StudentId,student.Phone,student.StudentReference,student.Subject,student._id,student.Instructor)\n        handelEditToggle()\n    }\n    render() {\n        const {filteredData} = this.state\n        let StudentFound = <StyledTable.TableTr>\n        <StyledTable.TableTd className=\"tableBody\">لايجوجد بيانات تطابق البحث</StyledTable.TableTd>\n    </StyledTable.TableTr>\n    if(filteredData.length !== 0)\n    {\n        StudentFound =  filteredData.map((student,index)=>{\n            return( \n            <StyledTable.TableTr className='single--icon' kye={index} onClick={() => this.handleStudentEdit(index)}>\n                <StyledTable.TableTd className=\"tableBody\">{student.FullName}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.StudentId}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.Phone}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.StudentReference.map((element,refBrIndex) => {return <div key={refBrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\">{student.Subject.map((element,subBrIndex) => {return <div key={subBrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n            </StyledTable.TableTr>\n            )\n        })\n    }\n        return (\n            <div>\n                  <StyledTable.TableWithTitleWrapper>\n                  <form\n                  onSubmit={(e) => e.preventDefault()}\n                  className='search--form'>\n                  <label className='search--label' htmlFor=\"search\">Search</label>\n                  <input className='search--input' onChange={(e) => this.handleSearchChange(e)} id=\"search\" type=\"search\" pattern=\".*\\S.*\" required />\n                  <span className=\"caret\"></span>\n                </form>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">اسم المتدرب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">الرقم الاكاديمي</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> رقم الجوال</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> الشعب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> المواد</StyledTable.TableTh>\n                                </tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {StudentFound}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { StudentSingleRegistration, getAllInstructorId,UpdateStudentById,RemoveStudentById } from '../../ApiConfig/Api';\n\nimport Swal from \"sweetalert2\";\nimport { AiOutlineMail, AiFillIdcard, AiOutlineMobile } from 'react-icons/ai';\nimport { CgLastpass, CgRename } from 'react-icons/cg';\nimport { MdOutlineIntegrationInstructions } from 'react-icons/md';\nimport { GiClassicalKnowledge } from 'react-icons/gi';\n\nimport UploadFileForm from '../UploadFileForm';\nimport SearchForStudent from './SearchForStudent'\nexport default class StudentManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      FullName: \"\",\n      Email: \"\",\n      password: \"\",\n      StudentId: \"\",\n      Phone: \"\",\n      StudentReference: [],\n      Subject: \"\",\n      Instructor_id: [],\n      InstructorIds: [],\n      _id:\"\",\n      editClicked:false\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.toggleHandler = this.toggleHandler.bind(this);\n  }\n  RegisterSingleStudent = (data) => {\n    StudentSingleRegistration(data)\n      .then(response => {\n        console.log(response);\n        let errMessage = response.data.message\n        console.log(errMessage);\n        if (response.data.success === false && errMessage === \"Email\") {\n          Swal.fire({ icon: 'error', title: \"البريد الالكتروني مسجل من قبل \" });\n        }\n        else if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: \"تم تسجيل المتدرب بنجاح \" });\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  componentDidMount() {\n    getAllInstructorId()\n      .then(response => {\n        this.setState({ InstructorIds: response.data })\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  DeleteStudent = (id) => {\n    RemoveStudentById(id)\n      .then(response => {\n        if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n        }\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  UpdateStudent = (req) => {\n    UpdateStudentById(req, req._id)\n      .then(res => {\n        if (res.data.success === true) Swal.fire({ icon: 'success', title: res.data.message });\n      })\n      .catch(error => {\n        console.log(error);\n        Swal.fire({ icon: 'error', title: error})})\n  }\n  handelUpdate = e => {\n    const updateStudent = this.state;\n    updateStudent.StudentReference.toString().split(',')\n    updateStudent.Subject.toString().split(',')\n    e.preventDefault();\n    this.UpdateStudent(updateStudent);\n  };\n  handelSubmit = e => {\n    if (this.props.id) this.setState({ Instructor_id: this.props.id })\n    const newStudent = this.state;\n    e.preventDefault();\n    const { FullName, Instructor_id, Subject, StudentId, StudentReference, Phone } = this.state;\n    if (\n      (typeof FullName === \"string\" && FullName.trim().length !== 0) &&\n      (typeof Instructor_id === \"string\" && Instructor_id.trim().length !== 0) &&\n      (typeof Subject === \"string\" && Subject.trim().length !== 0) &&\n      (typeof StudentId === \"string\" && StudentId.trim().length !== 0) &&\n      (typeof StudentReference === \"string\" && StudentReference.trim().length !== 0) &&\n      (typeof Phone === \"string\" && Phone.trim().length !== 0)) {\n      this.RegisterSingleStudent(newStudent);\n    } else {\n      console.log(FullName, Instructor_id, Subject, StudentId, StudentReference, Phone);\n      Swal.fire({\n        icon: 'error',\n        title: `الرجاء التأكد من ملء الحقول\n   اسم المتدرب\n   رقم المتدرب\n    رقم الشعبة\n    رقم المدرب \n    رقم الجوال\n    مادة واحدة على الاقل\n\n`})\n    }\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  toggleHandler = (e) => {\n    this.setState({ show: !this.state.show })\n  }\n  onChange = (FullName, Email, StudentId, Phone, StudentReference, Subject, _id,Instructor_id) => {\n    this.setState({ FullName, Email, StudentId, Phone, StudentReference, Subject, _id,Instructor_id })\n  }\n  handelEditToggle = () => {\n    const { editClicked } = this.state\n    if (editClicked) this.setState({ FullName: \"\", StudentId: \"\", Email: \"\", Phone: \"\", password: \"\",Instructor_id:[],_id:\"\", StudentReference: [], Subject: [] })\n    this.setState({ editClicked: !editClicked });\n  }\n  handleOptionChange(evt) {\n    this.setState({Instructor_id: [...evt.target.selectedOptions].map(o => o.value)}); \n  }\n  StudentDeleteHandler = () => {\n    Swal.fire({\n      title: 'تأكيد الحذف',\n      text: `سيتم حذف ${this.state.FullName} نهائيا من النظام`,\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تاكيد الحذف',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.DeleteStudent(this.state._id);\n      }\n    })\n  };\n  render() {\n    const { FullName, StudentId, Email, Phone, password, show, StudentReference, Subject, Instructor_id, InstructorIds, editClicked } = this.state;\n    const Form =  <div className=\"LoginContainer avoid--element-conflict\">\n    <form className='login-form' >\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Email\"> */}\n          <AiOutlineMail />\n        </label>\n        <input id=\"Email\"\n          required\n          className='lf--input'\n          placeholder='البريد الالكتروني'\n          name=\"Email\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={Email} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"password\"> */}\n          <CgLastpass />\n        </label>\n        <input\n          required\n          id=\"password\"\n          className='lf--input'\n          placeholder='كلمة المرور'\n          name=\"password\"\n          type='password'\n          onChange={e => this.handleChange(e)}\n          value={password} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"FullName\"> */}\n          <CgRename />\n        </label>\n        <input\n          required\n          id=\"FullName\"\n          className='lf--input'\n          disabled={(editClicked) ? \"disabled\" : \"\"}\n          placeholder='* اسم المتدرب'\n          name=\"FullName\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={FullName} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"StudentId\"> */}\n          <AiFillIdcard />\n        </label>\n        <input\n          required\n          id=\"StudentId\"\n          className='lf--input'\n          disabled={(editClicked) ? \"disabled\" : \"\"}\n          placeholder='* رقم المتدرب'\n          name=\"StudentId\"\n          type=\"number\"\n          onChange={e => this.handleChange(e)}\n          value={StudentId} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"StudentReference\"> */}\n          <GiClassicalKnowledge />\n        </label>\n        <input\n          required\n          id=\"StudentReference\"\n          className='lf--input'\n          placeholder='* رقم الشعبة'\n          name=\"StudentReference\"\n          type=\"string\"\n          onChange={e => this.handleChange(e)}\n          value={StudentReference} />\n      </div>\n      {(this.props.id) ? \"\" :\n        <div className=\"flex-row\">\n          <label className=\"lf--label\" >\n            {/* htmlFor=\"Instructor\"> */}\n            <CgRename />\n          </label>\n          <select \n          multiple={(editClicked) ? true : false}\n          className='lf--input'\n          size={InstructorIds.length} \n          name=\"Instructor_id\"\n          value={Instructor_id} onChange={(editClicked) ?e =>this.handleOptionChange(e): e => this.handleChange(e)}>\n            {InstructorIds.map((option,index) => (\n              <option key={index} value={option.Instructor_id}>{option.InstructorId}</option>\n            ))}\n          </select>\n        </div>}\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Subject\"> */}\n          <MdOutlineIntegrationInstructions />\n        </label>\n        <input\n          required\n          id=\"Subject\"\n          className='lf--input'\n          placeholder='* اسم المادة'\n          name=\"Subject\"\n          type=\"text\"\n          onChange={e => this.handleChange(e)}\n          value={Subject} />\n      </div>\n      <div className=\"flex-row\">\n        <label className=\"lf--label\" >\n          {/* htmlFor=\"Phone\"> */}\n          <AiOutlineMobile />\n        </label>\n        <input\n          required\n          id=\"Phone\"\n          className='lf--input'\n          placeholder='* رقم الجوال '\n          name=\"Phone\"\n          type=\"number\"\n          onChange={e => this.handleChange(e)}\n          value={Phone} />\n      </div>\n      <input className='lf--submit' type='submit'  onClick={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)} value={(editClicked)  ? 'حفض وارسال' : 'تسجيل المتدرب'}  />\n      {(this.props.id ) ? \"\" : <input className='lf--submit' onClick={(editClicked) ? () => this.handelEditToggle() : e => this.toggleHandler(e)}  value={(editClicked) ? 'رجوع' : 'رفع الملف وتسجيل المتدربين'} />}\n      {(editClicked) ? <input className='lf--submit red'  onClick={() => this.StudentDeleteHandler()} value='حذف المتدرب' /> : \"\"}\n    </form>\n  </div>\n    return (\n      <>\n        {\n          (!editClicked) ?\n            <>\n              {Form}\n             {(this.props.id ) ? \"\" : <SearchForStudent  handelEditToggle={this.handelEditToggle} onNameChange={this.onChange}/>}\n            </>\n            :<>{Form} </>\n        }\n        {(!show) ? \"\" : <UploadFileForm toggleHandler={this.toggleHandler} from={\"students\"} />}\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport StudentManagement from '../Moderator/StudentManagement';\nimport { getInfo } from '../helperMethods';\n\nexport default class AddStudent extends Component {\n  render() {\n    return (\n      <>\n      <StudentManagement  id={getInfo().data.InstructorId} />\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { NewLabBooking,StudentReserveNewTest } from '../ApiConfig/Api'\nimport Swal from \"sweetalert2\";\nimport { getId, dateFormat, timeFormat, getInfo } from '../helperMethods';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default class BookingConformation extends Component {\n\n    NewBooking = (data) => {\n        let currentUser\n        if(getInfo().data.Role === \"Instructor\") currentUser= NewLabBooking  \n        else{\n             currentUser = StudentReserveNewTest\n             data = {BookingRefId:this.props.data.Lab}\n        }\n        currentUser(data, getId())\n            .then(response => {\n                Swal.fire({ icon: 'success', title: \"تم حجز القاعة بنجاح \" });\n                if(getInfo().data.Role === \"Instructor\"){\n                history.push('#/Instructor/Home');\n                window.location.reload(false);\n                }else{\n                    history.push('#/Students/Home');\n                    window.location.reload(false);\n                }\n            })\n            .catch(error => {\n                console.log(error);\n                if(error.response.data)Swal.fire({ icon: 'warning', title: error.response.data.message });\n                else Swal.fire({ icon: 'error', title: error });\n            });\n    };\n    handleSubmit = e => {\n        e.preventDefault();\n        const { From, To, Lab, labId, LabCapacity, For } = this.props.data;\n        const newBooking = { From: From, To: To, Lab_id: Lab, LabReference: labId, LabCapacity: LabCapacity, For: For }\n        this.NewBooking(newBooking);\n    }\n    render() {\n        const { From, To, labId } = this.props.data\n        const date = dateFormat(From);\n        const time = `${timeFormat(From)} - ${timeFormat(To)}`;\n        let labDisplay = \"\"\n        if (labId.length === 10) labDisplay = ` المبنى: ${labId[4]} - الدور: ${labId[5]}  - القاعة: ${labId.slice(7, 10)} `\n        return (\n            <div className='modalContainer'>\n                <div className=\"modal-container\" id=\"modal-opened\">\n                    <div className=\"modal\">\n                        <form className='form__container'>\n                            <div className=\"modal__details\">\n                                <h1 className=\"modal__title\">بيانات الحجز</h1>\n                                <p className=\"modal__text\">{` المعمل: ${labId}`}</p>\n                                {(labDisplay !== \"\") ? <p className=\"modal__text\">{labDisplay}</p> : \"\"}\n                                <p className=\"modal__text\"> التاريخ: {date} </p>\n                                <p className=\"modal__text\"> الوقت: {time} </p>\n                            </div>\n                            <p className=\"modal__text\"></p>\n                            <button className=\"modal__btn\" onClick={e => this.handleSubmit(e)}>تأكيد الحجز  &rarr;</button>\n                            <button className=\"link-2\" onClick={this.props.toggle}></button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import styled from 'styled-components'\n\nexport const CardsContainer = styled.div`\n\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n// background: #8391a4;\n`;\nexport const TeamContainer = styled.div`\n  height:  fit-content;\n  margin-top: 10px;\n  padding: 10px;\n  display:grid;\n//   background: #8391a4;\n`\nexport const CardsWrapper = styled.div `\nmax-width: 1000px;\nmargin: 0 auto;\ndisplay: grid;\ngrid-template-columns: 1fr 1fr 1fr 1fr;\nalign-items: center;\ngrid-gap: 16px;\n/* padding:0 50px; */\n\n@media screen and (max-width: 1000px) {\n    grid-template-columns: 1fr 1fr 1fr;\n}\n\n@media screen and (max-width: 760px) {\n    grid-template-columns: 1fr 1fr;\n    /* padding: 0 20px; */\n}\n`;\nexport const SingleCard = styled.div`\nbackground-color:'#8bc34a';\ndisplay: flex;\nflex-direction: column;\njustify-content: flex-start;\nalign-items: center;\nborder-radius: 10px;\nmax-height: 340px;\npadding: 30px;\nbox-shadow: 0 1px 3px rgba(0,0,0,0.2);\ntransition: all 0.2s ease-in-out;\n\n&:hover{\n    transform: scale(1.02);\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n}\n`;\nexport const CardsIcon = styled.img`\nheight: 160px;\nwidth: 160px;\nmargin-bottom: 10px;\n`;\nexport const CardsH1 = styled.h1`\nfont-size: 2.5rem;\ncolor: #fff;\nmargin-bottom: 64px;\n\n@media screen and (max-width: 480px) {\n    font-size: 2rem;\n}\n`;\n\nexport const CardsH2 = styled.h2`\n    font-size: 0.78rem;\nmargin-bottom: 10px;\n`;\nexport const CardsP = styled.p`\nfont-size: 0.9rem;\ntext-align: center;\noverflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  max-width: 190px;\n`;","import React, { Component } from 'react'\nimport {getAllTestAvailableForStudent} from '../ApiConfig/Api';\nimport BookingConformation from '../Instructors/BookingConformation'\nimport * as Cards from '../Styles/cards'\n\nimport {getInfo,dateFormat,timeFormat} from '../helperMethods';\nexport default class StudentExamBooking extends Component {\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n         AvailableTest:[],\n         labId: \"\",\n         toggle: false,\n         from: \"\",\n         to: \"\",\n         LabCapacity: \"\",\n         lab_id: \"\",\n      }\n    }\n\n    componentDidMount(){ \n        const req = {For: this.props.For}\n        console.log(getInfo().data._id, req);\n        getAllTestAvailableForStudent(getInfo().data._id,req)   \n        .then(response =>{\n            console.log(response);\n            this.setState({AvailableTest: response.data})\n        }).catch(error =>{\n            console.log(error);\n        })\n    }\n    toggleHandler = e => {\n        e.preventDefault();\n        this.setState({ toggle: !this.state.toggle })\n      }\n    labHandler = (labIndex) => {\n        const { AvailableTest } = this.state\n        this.setState({\n          lab_id: AvailableTest[labIndex]._id,\n          labId: AvailableTest[labIndex].LabReference,\n          LabCapacity: AvailableTest[labIndex].LabCapacity,\n          from: AvailableTest[labIndex].From,\n          to: AvailableTest[labIndex].To,\n          toggle: !this.state.toggle\n        })\n      }\n      render() {\n        const { AvailableTest, toggle, labId, from, to, lab_id, LabCapacity } = this.state\n        const propsData = { From: from, To: to, Lab: lab_id, labId: labId, LabCapacity: LabCapacity,For: this.props.For }\n        let allLabs =  <h1>لايوجد اختبارات متاحة</h1>\n        if (AvailableTest.length > 0) {\n          allLabs = AvailableTest.map((available, labIndex) => {\n              return (\n                <Cards.SingleCard key={labIndex} className={(available.LabCapacity > 0) ? \"available\" : 'isBooked'} onClick={(available.LabCapacity > 0) ? () => this.labHandler(labIndex) : null}>\n                  <Cards.CardsH2>{available.LabReference}</Cards.CardsH2>\n                  <Cards.CardsP>{available.LabCapacity}</Cards.CardsP>\n                  <Cards.CardsP>{`${dateFormat(available.From)} `}</Cards.CardsP>\n                  <Cards.CardsP>{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</Cards.CardsP>\n                </Cards.SingleCard>\n              )\n            })\n        }\n        return (\n          <div>\n               <Cards.TeamContainer>\n              <Cards.CardsContainer id=\"Teams\" >\n                <Cards.CardsWrapper>\n                  {allLabs}\n                </Cards.CardsWrapper>\n              </Cards.CardsContainer>\n            </Cards.TeamContainer>\n            {(!toggle) ? \"\" : <BookingConformation toggle={this.toggleHandler} data={propsData} LabCapacity={LabCapacity} />}\n          </div >\n        )\n      }\n    }\n    \n","import React, { Component } from 'react'\nimport * as Cards from '../Styles/cards'\nimport { getAllLabs,getAllAvailableLabs } from '../ApiConfig/Api';\nimport BookingConformation from './BookingConformation'\n\nimport {dateFormat,timeFormat} from '../helperMethods';\nexport default class LabBooking extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      data: [],\n      allLabs:[],\n      filteredLab:[],\n      labId: \"\",\n      toggle: false,\n      from: \"\",\n      to: \"\",\n      LabCapacity: \"\",\n      lab_id: \"\",\n      LabFilter: false\n    }\n  }\n  componentDidMount() {\n    getAllLabs()\n      .then((response) => {\n        this.setState({ allLabs: response.data, data: response.data})\n      })\n      .catch((error) => {\n      })\n      getAllAvailableLabs()\n      .then((res) => {\n        this.setState({ filteredLab: res.data })\n      })\n      .catch((error) => {\n      })\n  }\n  toggleHandler = e => {\n    e.preventDefault();\n    this.setState({ toggle: !this.state.toggle })\n  }\n  filterHandler = e => {\n    e.preventDefault();\n    const {LabFilter,allLabs,filteredLab}=this.state\n    this.setState({ LabFilter: !LabFilter })\n    if(!LabFilter)this.setState({ data: filteredLab }) \n    else this.setState({ data: allLabs })\n  }\n\n  labHandler = (labIndex, AvailableIndex) => {\n    const { data } = this.state\n    const time = data[labIndex].Available[AvailableIndex]\n    this.setState({\n      lab_id: data[labIndex]._id,\n      labId: data[labIndex].LabId,\n      LabCapacity: data[labIndex].LabCapacity,\n      from: time.From,\n      to: time.To,\n      toggle: !this.state.toggle\n    })\n  }\n  render() {\n    const { data, toggle, labId, from, to, lab_id, LabCapacity,LabFilter } = this.state\n    const propsData = { From: from, To: to, Lab: lab_id, labId: labId, LabCapacity: LabCapacity,For: this.props.For }\n    let allLabs = <div class=\"spinner\">Loading...</div>\n    if (data.length > 0) {\n      allLabs = data.map((lab, labIndex) => {\n        return lab.Available.map((available, AvailableIndex) => {\n          return (\n            <Cards.SingleCard key={AvailableIndex} className={(available.isAvailable) ? \"available\" : 'isBooked'} onClick={(available.isAvailable) ? () => this.labHandler(labIndex, AvailableIndex) : null}>\n              <Cards.CardsH2>{lab.LabId}</Cards.CardsH2>\n              <Cards.CardsP>{lab.LabCapacity}</Cards.CardsP>\n              <Cards.CardsP>{`${dateFormat(available.From)} `}</Cards.CardsP>\n              <Cards.CardsP>{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</Cards.CardsP>\n            </Cards.SingleCard>\n          )\n        })\n      })\n    }\n    return (\n      <div>\n        <button className=\"modal__btn secondary--nav\" onClick={e =>this.filterHandler(e)} > {(!LabFilter)?'اظهار القاعات المتاحة فقط' : 'اظهار جميع القاعات'}</button>      \n           <Cards.TeamContainer>\n          <Cards.CardsContainer id=\"Teams\" >\n            <Cards.CardsWrapper>\n              {allLabs}\n            </Cards.CardsWrapper>\n          </Cards.CardsContainer>\n        </Cards.TeamContainer>\n        {(!toggle) ? \"\" : <BookingConformation toggle={this.toggleHandler} data={propsData} LabCapacity={LabCapacity} />}\n      </div >\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { getInfo } from '../helperMethods';\nimport StudentExamBooking from '../Students/StudentExamBooking';\nimport LabBooking from './LabBooking'\nexport default class SelectSubjectMod extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            display: false,\n            subject: getInfo().data.Subject[0],\n        }\n    }\n    subjectHandler = (index) => {\n        this.setState({ subject: getInfo().data.Subject[index], display: true })\n    }\n    render() {\n        const subject = getInfo().data.Subject;\n        let allSubject = <div class=\"spinner\">Loading...</div>\n        if (subject.length > 1) {\n            allSubject = subject.map((subject, index) => {\n                return (\n                    <div key={index} onClick={() => this.subjectHandler(index)}>\n                        <button className=\"modal__btn\">{subject}</button>\n                    </div>\n                )\n            })\n        }\n        return (\n            <div>\n                {(getInfo().data.Role === \"Student\" && (this.state.display || subject.length === 1))? <StudentExamBooking For={this.state.subject}/> : (getInfo().data.Role === \"Instructor\" &&(this.state.display || subject.length === 1)) ? <LabBooking For={this.state.subject} /> :\n                    <div className='modalContainer'>\n                        <div className=\"modal-container\" id=\"modal-opened\">\n                            <div className=\"modal\">\n                                <p className=\"modal__text\"></p>\n                                {allSubject}\n                            </div>\n                        </div>\n                    </div>}\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport { animateScroll as scroll } from 'react-scroll';\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nimport {getFullName} from '../helperMethods';\nimport '../../App.css'\nconst ModeratorNave = ({ toggle }) => {\n    const [scrollNav, setScroll] = useState(false);\n    const navOnChange = () => {\n        if (window.scrollY >= 30) {\n            setScroll(true);\n        } else {\n            setScroll(false);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener('scroll', navOnChange);\n    }, []);\n    const toggleHandler = () => {\n        scroll.scrollToTop();\n    };\n    const logout = (e) => {\n        localStorage.clear();\n        window.location.reload(false);\n    }\n    return (\n        <>\n            <IconContext.Provider value={{ color: '#607d8b' }}>\n                <MainHeader.Nav scrollNav={scrollNav}>\n                    <MainHeader.NavContainer >\n                        <MainHeader.NavLogo to='/Moderator/Home' onClick={toggleHandler}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                        <MainHeader.ResponsiveIcon onClick={toggle}>\n                            <FaBars className=\"FaBarsIcon\" />\n                        </MainHeader.ResponsiveIcon>\n                        <MainHeader.NavMenu>\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Moderator/LabsManagement'}\n                                    duration={500}\n                                   offset={-80}\n                                >ادارة المعامل</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to={'/Moderator/InstructorsManagement'}\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                   offset={-80}\n                                >ادارة المدربين</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                            |\n                            <MainHeader.NavItem>\n                                <MainHeader.NavLinks\n                                    to=\"/Moderator/StudentManagement\"\n                                    smooth={true.toString()}\n                                    duration={500}\n                                    spy={true.toString()}\n                                    exact={true.toString()}\n                                   offset={-80}\n                                >ادارة المتدربين</MainHeader.NavLinks>\n                            </MainHeader.NavItem>\n                        </MainHeader.NavMenu>\n                        <MainHeader.LogoutContainer>\n                            <MainHeader.Logout\n                                duration={500}\n                                spy={true.toString()}\n                                exact={true.toString()}\n                                onClick={e => logout(e)}>\n                                تسجيل الخروج\n                            </MainHeader.Logout>\n                        </MainHeader.LogoutContainer>\n                    </MainHeader.NavContainer>\n                </MainHeader.Nav>\n            </IconContext.Provider>\n            <div>\n          <h3 className='display--name'>\n            {getFullName()}\n          </h3>\n        </div>\n            <Outlet />\n        </>\n    )\n}\nexport default ModeratorNave","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\nexport default function ModeratorSidebar({isOpen,toggle}) {\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Moderator/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Moderator/LabsManagement\" onClick={toggle} >ادارة المعامل </SidebarLink>\n        <SidebarLink to=\"/Moderator/InstructorsManagement\" onClick={toggle}>ادارة المدربين</SidebarLink>\n        <SidebarLink to=\"/Moderator/StudentManagement\" onClick={toggle}>ادارة المتدربين</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../Styles/styledTable'\n\nexport default class SummaryTable extends Component {\n  render() {\n    const {data } = this.props\n    let allTimes = (\n        <StyledTable.TableTr>\n            <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n        </StyledTable.TableTr>)\n    if (data) {\n        if (data.length > 0) {\n            allTimes = data.map((data, index) => {\n                return (\n                    <StyledTable.TableTr key={index}>\n                        <StyledTable.TableTd className=\"tableBody\">{data.FullName}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.InstructorReference.length}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.TeachStudents.length}</StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\">{data.BookingRef.length}</StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                )\n            })\n        }\n    }\n    return (\n        <>\n        <StyledTable.TableWithTitleWrapper>\n            <StyledTable.TableWrapper>\n                <StyledTable.TableContainer>\n                    <StyledTable.TableHedContainer>\n                        <tr>\n                            <StyledTable.TableTh className=\"tableHeader\">اسم المدرب</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد الشعب</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد المتدربين</StyledTable.TableTh>\n                            <StyledTable.TableTh className=\"tableHeader\"> عدد المواعيد المحجوزة</StyledTable.TableTh>\n                        </tr>\n                    </StyledTable.TableHedContainer>\n                    <StyledTable.TableBodyContainer>\n                        {allTimes}\n                    </StyledTable.TableBodyContainer>\n                </StyledTable.TableContainer>\n            </StyledTable.TableWrapper>\n            </StyledTable.TableWithTitleWrapper>\n        </>\n    )\n}\n}\n","import styled from 'styled-components'\n\nexport const LabelContainer = styled.div`\n@media (min-width: 950px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n`\nexport const DoughnutContainer = styled.div`\ndisplay: grid;\nheight: 375px; \n width: 375px;\n @media screen and (max-width: 600px) {\n      display: grid;\n      margin:auto;\n      width: 75vw;\n      height: fit-content;\n    }\n`\nexport const DoughnutContainerLear2 = styled.div`\ndisplay: grid;\nmargin:auto;\n@media screen and (max-width: 600px) {\n    width: 75vw;\n}\n`\nexport const DoughnutTitle = styled.label`\ntext-align: center;\nborder-bottom: 1px solid gray;\ncolor: darkslategray;\n`\nexport const LabelCard = styled.div`\n  border-top: 3px solid ${({greenLine,yellowLine,blueLine,orangeLine}) => (greenLine ? '#45d3d3' : \n                                                    yellowLine ? '#fcaf4a' : blueLine ? \"#35c0ff\"\n                                                    :orangeLine?'#ff5722':'#000')};\n    border-radius: 5px;\n    box-shadow: 0px 30px 40px -20px hsl(229, 6%, 66%);\n    padding: 30px;\n    margin: 20px; \n    text-align: center;\n        height: 133px;\n        width: 254px;\n    color:${({white}) => (white ? '#ffff' : '#0000')};\n    background-color:${({green,gray,darkBlue,darkGreen}) => (green ? '#00968857' : gray ? '#636467 ': darkBlue ? '#528fa7' :darkGreen? '#157c79':'#000')};\n    &:hover{\n    transform: scale(1.02);\n    transition: all 0.2s ease-in-out;\n    cursor: pointer;\n}\n@media (max-width: 450px) {\n        height: 200px;\n        margin: 10vw 0px;\n}\n@media (max-width: 300px){\n    width: none;\n}\n`\nexport const CardHeadLine = styled.h2`\n    color:${({white}) => (white ? '#ffff' : '#0000')};\n        font-weight: 600;\n        font-size: 1.5rem;\n        line-height: none!important;\n            margin: auto;\n@media (max-width:1024px) {\n        line-height: none;\n            margin: auto;}\n`\nexport const CardParagraph = styled.p`\n        font-weight: 600;\n        font-size: 1.5rem;\n        line-height: none!important;\n            margin: auto;\n@media (max-width:1024px) {\n        line-height: none;\n            margin: auto;}\n`\nexport const TableContainer = styled.div`\n   justify-content:center;\n   align-items:center;\n    width: 69%;\n    margin: auto;\n    margin-top: 59px;\n    margin-bottom: 58px;\n    position: relative;\n  max-height:  300px;\n  overflow: scroll;\n  box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n@media (max-width: 702px){\n    width: 100%; \n}\n`\nexport const LabelsContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    @media screen and (max-width: 600px) {\n        grid-template-columns: repeat(1, 1fr);\n        justify-content: space-between;\n        justify-items: center;\n\n`\nexport const ChartContainer = styled.div`\n    display: flex;\n      align-items: center;\n      justify-content: center;\n      align-content: space-around;\n      flex-wrap: wrap;\n      box-shadow: 0px 35px 50px rgba( 0, 0, 0, 0.2 );\n      @media screen and (max-width: 600px) {\n      display: grid;\n      border:none;\n      }\n`","import React, { Component } from 'react'\nimport '../Styles/chart.css'\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { getAllLabs, getInstructors, getAllDivision, RemoveCollections, DownloadExcel,expiredAppointment } from '../ApiConfig/Api'\nimport SummaryTable from './SummaryTable';\nimport Swal from \"sweetalert2\";\nimport { AcReButton, ButtonContainer } from '../Styles/styledTable'\nimport { saveAs } from 'file-saver';\n\nimport { LabelContainer, LabelCard, CardHeadLine, ChartContainer, LabelsContainer, DoughnutContainer, CardParagraph, DoughnutContainerLear2, DoughnutTitle } from '../Styles/StyledChart'\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      AvailableLab: 0,\n      BookedLab: 0,\n      Labs: [],\n      Instructors: [],\n      StudentCount: 0,\n      DivisionCount: [],\n    }\n  }\n  componentDidMount() {\n    this.getLabs();\n    this.getAllInstructors();\n    this.getDivisions();\n    expiredAppointment()\n  }\n\n  getDivisions() {\n    getAllDivision()\n      .then((response) => {\n        let StudentCount = 0;\n        for (let currentDivision = 0; currentDivision < response.data.length; currentDivision++) {\n          StudentCount += response.data[currentDivision].StudentCount;\n        }\n        console.log(response);\n        this.setState({ DivisionCount: response.data, StudentCount: StudentCount });\n      })\n      .catch((error) => {\n      })\n  }\n  getAllInstructors() {\n    getInstructors()\n      .then((response) => {\n        this.setState({ Instructors: response.data });\n      })\n      .catch((error) => {\n      })\n  }\n  getLabs() {\n    getAllLabs()\n      .then((response) => {\n        let AvailableLab = 0, BookedLab = 0\n        for (let labIndex = 0; labIndex < response.data.length; labIndex++) {\n          for (let currentLab = 0; currentLab < response.data[labIndex].Available.length; currentLab++) {\n            (response.data[labIndex].Available[currentLab].isAvailable) ? AvailableLab++ : BookedLab++\n          }\n        }\n        this.setState({ AvailableLab, BookedLab, Labs: response.data });\n      })\n      .catch((error) => {\n      })\n  }\n  newSemester = () => {\n    RemoveCollections()\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      })\n      .catch(error => {\n        Swal.fire({ icon: 'error', title: `حدث خطا` });\n      })\n  }\n  DownloadData = async () => {\n    const { Labs, Instructors, DivisionCount } = this.state\n    if ((DivisionCount.length === 0 && Instructors.length === 0) || (Labs.length === 0 && DivisionCount.length === 0)) {\n      Swal.fire({ icon: 'error', title: ` لا يوجد بينات لتحميلها` });\n    } else {\n      await DownloadExcel()\n        .then(response => {\n          const fileName = response.headers['content-disposition'].split('\"')[1];\n          const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\n          saveAs(blob, fileName);\n        })\n        .catch(error => {\n          Swal.fire({ icon: 'error', title: `حدث خطا` });\n        })\n    }\n  }\n  semesterWorkHandle = () => {\n    const { Labs, Instructors, DivisionCount } = this.state\n    if ((DivisionCount.length === 0 && Instructors.length === 0) || (Labs.length === 0 && DivisionCount.length === 0)) {\n      Swal.fire({ icon: 'error', title: ` لا يوجد بينات لحذفها` });\n    }\n    else Swal.fire({\n      title: 'تحذير',\n      text: \" سيتم حذف جميع بيانات النظام نهائيا\",\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تأكيد الحذف  ',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.newSemester();\n      }\n    })\n  }\n  DownloadDataAndDelete = () => {\n    const { Labs, Instructors, DivisionCount } = this.state\n    if ((DivisionCount.length === 0 && Instructors.length === 0) || (Labs.length === 0 && DivisionCount.length === 0)) {\n      Swal.fire({ icon: 'error', title: ` لا يوجد بينات لحذفها` });\n    }\n    else Swal.fire({\n      title: 'تحذير',\n      text: \"سيتم تحيل قاعدة البيانات و حذف جميع بيانات النظام نهائيا\",\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تأكيد الحذف  ',\n      denyButtonText: `رجوع`,\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        await this.DownloadData();\n        this.newSemester();\n      }\n    })\n  }\n  render() {\n    const { AvailableLab, BookedLab, Instructors, StudentCount, DivisionCount, Labs } = this.state\n\n    const genderData = {\n      labels: [`متاح ${AvailableLab}`\n        , `محجوز ${BookedLab}`],\n      datasets: [\n        {\n          data: [AvailableLab, BookedLab],\n          backgroundColor: [\n            '#528fa7',\n            '#ff5722',\n\n          ],\n          borderColor: [\n            'rgba(54, 162, 235, 1)',\n            'rgba(255, 99, 132, 1)',\n          ],\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    return (\n      <div>\n        <div className=\"chartBar\">\n          <div className=\"chartDiscretion\">\n            احصائيات\n          </div>\n          <ChartContainer>\n            <DoughnutContainer>\n              {AvailableLab === 0 && BookedLab === 0 ? <div className=\"spinner\">Loading...</div> :\n                <DoughnutContainerLear2>\n                  <DoughnutTitle>نسبة حجز القاعات</DoughnutTitle>\n                  <Doughnut data={genderData} />\n                </DoughnutContainerLear2>\n              }\n            </DoughnutContainer>\n            <LabelsContainer>\n              <LabelContainer>\n                <LabelCard white colorIs green={true} yellowLine={true}>\n                  <CardHeadLine white>\n                    مجموع المدربين\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {Instructors.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      Instructors.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs gray={true} blueLine={true}>\n                  <CardHeadLine white>\n                    مجموع المتدربين\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {StudentCount === 0 ? <div className=\"spinner\">Loading...</div> :\n                      StudentCount}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs darkBlue={true} greenLine={true}>\n                  <CardHeadLine white>\n                    مجموع القاعات المسجلة\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {Labs.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      Labs.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n              <LabelContainer>\n                <LabelCard white colorIs darkGreen={true} orangeLine={true}>\n                  <CardHeadLine white>\n                    مجموع الشعب\n                  </CardHeadLine>\n                  <CardParagraph>\n                    {DivisionCount.length === 0 ? <div className=\"spinner\">Loading...</div> :\n                      DivisionCount.length}\n                  </CardParagraph>\n                </LabelCard>\n              </LabelContainer>\n            </LabelsContainer>\n          </ChartContainer>\n        </div>\n        <SummaryTable data={Instructors} />\n        <ButtonContainer>\n          <AcReButton Blue={true} onClick={() => this.DownloadData()}> تحميل الملفات  </AcReButton>\n          <AcReButton halfBlue={true} onClick={() => this.DownloadDataAndDelete()}> تحميل الملفات وحذف البيانات </AcReButton>\n          <AcReButton onClick={() => this.semesterWorkHandle()}>حذف جميع البيانات </AcReButton>\n        </ButtonContainer>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport { getInstructors} from '../../ApiConfig/Api'\nexport default class InstructorsTable extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        Instructors:[],\n      }\n    }\n    componentDidMount(){\n        this.getAllInstructors()\n    }\n    getAllInstructors() {\n        getInstructors()\n            .then((response) => {\n                this.setState({ Instructors: response.data });\n            })\n            .catch((error) => {\n            })\n    }\n\n    handleInstructorEdit = (index)=>{\n        const {Instructors} =this.state\n        const {onNameChange,handelEditToggle} = this.props\n        const inst = Instructors[index]\n        console.log(inst.InstructorId);\n        onNameChange(inst.FullName,inst.Email,inst.InstructorId,inst.Phone,inst.InstructorReference,inst.Subject,inst._id)\n        handelEditToggle()\n    }\n    render() {\n        const { Instructors } = this.state\n        let allTimes = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            </StyledTable.TableTr>)\n        if (Instructors) {\n            if (Instructors.length > 0) {\n                allTimes = Instructors.map((Instructors, index) => {\n                    return (\n                        <StyledTable.TableTr key={index} onClick={()=>this.handleInstructorEdit(index)}>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.FullName}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.InstructorReference.map((element,BrIndex) => {return <div key={BrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.Subject.map((element,BrIndex) => {return <div key={BrIndex}> {element} <br/></div>})}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody single--icon\">{Instructors.TeachStudents.length}</StyledTable.TableTd>\n                        </StyledTable.TableTr>\n                    )\n                })\n            }\n        }\n        return (\n            <>\n\n                <StyledTable.TableWithTitleWrapper>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">اسم المدرب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> الشعب</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">  المواد</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\"> عدد المتدربين</StyledTable.TableTh>\n                                </tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {allTimes}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport { InstructorSingleRegistration, UpdateInstructorById, RemoveInstructorById } from '../../ApiConfig/Api';\n\nimport Swal from \"sweetalert2\";\nimport { AiOutlineMail, AiFillIdcard, AiOutlineMobile } from 'react-icons/ai';\nimport { CgLastpass, CgRename } from 'react-icons/cg';\nimport { GiClassicalKnowledge } from 'react-icons/gi';\nimport { MdOutlineIntegrationInstructions } from 'react-icons/md';\n\nimport InstructorsTable from './InstructorsTable'\nimport UploadFileForm from '../UploadFileForm';\nexport default class InstructorsManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      FullName: \"\",\n      Email: \"\",\n      password: \"\",\n      InstructorId: \"\",\n      Phone: \"\",\n      InstructorReference: [],\n      Subject: [],\n      HasPermissionTo: \"\",\n      editClicked: false,\n      _id: \"\"\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.toggleHandler = this.toggleHandler.bind(this);\n  }\n  RegisterSingleInstructor = (data) => {\n    InstructorSingleRegistration(data)\n      .then(response => {\n        console.log(response);\n        let errMessage = response.data.message\n        console.log(errMessage);\n        if (response.data.success === false && errMessage === \"Email\") {\n          Swal.fire({ icon: 'error', title: \"البريد الالكتروني مسجل من قبل \" });\n        }\n        else if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: \"تم تسجيل المتدرب بنجاح  \" });\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  UpdateInstructor = (req) => {\n    console.log(req);\n    UpdateInstructorById(req, req._id)\n      .then(res => {\n        if (res.data.success === true) Swal.fire({ icon: 'success', title: res.data.message });\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  DeleteInstructor = (id) => {\n    RemoveInstructorById(id)\n      .then(response => {\n        if (response.data.success === true) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n        }\n      })\n      .catch(error => Swal.fire({ icon: 'error', title: `حدث خطا` }))\n  }\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  handelSubmit = e => {\n    const newInstructor = this.state;\n    const { FullName, InstructorReference, Subject, InstructorId } = this.state;\n\n    e.preventDefault();\n    if ((typeof FullName === \"string\" && FullName.trim().length !== 0) \n    && (typeof InstructorReference === \"string\" && InstructorReference.trim().length !== 0) \n    && (typeof Subject === \"string\" && Subject.trim().length !== 0)\n    && (typeof InstructorId === \"string\" && InstructorId.trim().length !== 0)){\n      this.RegisterSingleInstructor(newInstructor);\n    }else{\n      Swal.fire({ icon: 'error', \n      title: `الرجاء التأكد من ملء الحقول\n    اسم المدرب\n    رقم الشعبة\n    مادة واحدة على الاقل\n    رقم المدرب التعريفي\n`})\n    }\n  };\n  onChange = (FullName, Email, InstructorId, Phone, InstructorReference, Subject, _id) => {\n    this.setState({ FullName, Email, InstructorId, Phone, InstructorReference, Subject, _id })\n  }\n  handelUpdate = e => {\n    const updateInstructor = this.state;\n    updateInstructor.InstructorReference.toString().split(',')\n    updateInstructor.Subject.toString().split(',')\n    e.preventDefault();\n    this.UpdateInstructor(updateInstructor);\n  };\n  toggleHandler = (e) => {\n    this.setState({ show: !this.state.show })\n  }\n  handelEditToggle = () => {\n    const { editClicked } = this.state\n    if (editClicked) this.setState({ FullName: \"\", InstructorId: \"\", Email: \"\", Phone: \"\", password: \"\", InstructorReference: [], Subject: [] })\n    this.setState({ editClicked: !editClicked });\n  }\n  InstructorDeleteHandler = () => {\n    Swal.fire({\n      title: 'تأكيد الحذف',\n      text: `سيتم حذف ${this.state.FullName} نهائيا من النظام`,\n      icon: 'warning',\n      showDenyButton: true,\n      confirmButtonColor: '#d33',\n      denyButtonColor: '#3085d6',\n      confirmButtonText: 'نعم, تاكيد الحذف',\n      denyButtonText: `رجوع`,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.DeleteInstructor(this.state._id);\n      }\n    })\n  };\n  render() {\n    const { FullName, InstructorId, Email, Phone, password, show, InstructorReference, Subject, editClicked } = this.state;\n    const Form = <div className=\"LoginContainer avoid--element-conflict\">\n      <form className='login-form' onSubmit={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)}>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"Email\"> */}\n            <AiOutlineMail />\n          </label>\n          <input id=\"Email\"\n            required\n            className='lf--input'\n            placeholder='البريد الالكتروني'\n            name=\"Email\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={Email} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"password\"> */}\n            <CgLastpass />\n          </label>\n          <input\n            required\n            id=\"password\"\n            className='lf--input'\n            placeholder='كلمة المرور'\n            name=\"password\"\n            type='password'\n            onChange={e => this.handleChange(e)}\n            value={password} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"NationalId\"> */}\n            <CgRename />\n          </label>\n          <input\n            required\n            id=\"FullName\"\n            className={\"lf--input\"}\n            disabled={(editClicked) ? \"disabled\" : \"\"}\n            placeholder='* اسم المدرب'\n            name=\"FullName\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={FullName} />\n        </div>\n        {(!editClicked) ? <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"InstructorId\"> */}\n            <AiFillIdcard />\n          </label>\n          <input\n            required\n            id=\"InstructorId\"\n            className='lf--input'\n            placeholder='* رقم المدرب'\n            name=\"InstructorId\"\n            type=\"number\"\n            onChange={e => this.handleChange(e)}\n            value={InstructorId} />\n        </div> : \"\"}\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"InstructorId\"> */}\n            <GiClassicalKnowledge />\n          </label>\n          <input\n            required\n            id=\"InstructorReference\"\n            className='lf--input'\n            placeholder='* رقم الشعبة'\n            name=\"InstructorReference\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={InstructorReference} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"NationalId\"> */}\n            <MdOutlineIntegrationInstructions />\n          </label>\n          <input\n            required\n            id=\"Subject\"\n            className='lf--input'\n            placeholder='* اسم المادة'\n            name=\"Subject\"\n            type=\"text\"\n            onChange={e => this.handleChange(e)}\n            value={Subject} />\n        </div>\n        <div className=\"flex-row\">\n          <label className=\"lf--label\"  >\n            {/* htmlFor=\"Phone\"> */}\n            <AiOutlineMobile />\n          </label>\n          <input\n            required\n            id=\"Phone\"\n            className='lf--input'\n            placeholder='رقم الجوال '\n            name=\"Phone\"\n            type=\"number\"\n            onChange={e => this.handleChange(e)}\n            value={Phone} />\n        </div>\n        <input className='lf--submit' type='submit' onClick={(editClicked) ? e => this.handelUpdate(e) : e => this.handelSubmit(e)} value={(editClicked) ? 'حفض وارسال' : 'تسجيل المدرب'} />\n        <input className='lf--submit' onClick={(editClicked) ? () => this.handelEditToggle() : e => this.toggleHandler(e)} value={(editClicked) ? 'رجوع' : 'رفع الملف وتسجيل المدربين'} />\n        {(editClicked) ? <input className='lf--submit red' onClick={e => this.InstructorDeleteHandler(e)} value='حذف المدرب' /> : \"\"}\n      </form>\n    </div>\n    return (\n      <>\n        {\n          (!editClicked) ?\n            <>\n              {Form}\n              <InstructorsTable handelEditToggle={this.handelEditToggle} onNameChange={this.onChange} />\n            </>\n            : <>{Form}</>}\n        {(!show) ? \"\" : <UploadFileForm toggleHandler={this.toggleHandler} from={\"instructor\"} />}\n      </>\n    )\n  }\n}","import React, { Component } from 'react'\nimport * as StyledTable from '../../Styles/styledTable'\nimport '../../Styles/spinner.css'\nimport '../../Styles/chart.css'\n\nexport default class InformationTable extends Component {\n\n    handleAppointmentDeletion = (appointmentIndex) => {\n        const { data, DeleteAppointments, updateIsActive } = this.props\n        if (updateIsActive) {\n            const index = DeleteAppointments.indexOf(data[appointmentIndex])\n            DeleteAppointments.includes(data[appointmentIndex]) ? DeleteAppointments.splice(index, 1) : DeleteAppointments.push(data[appointmentIndex])\n            this.props.onNameChange(DeleteAppointments)\n        }\n    }\n    render() {\n        const { LabCapacity, LabId, data } = this.props\n        let allTimes = (\n            <StyledTable.TableTr>\n                <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                <StyledTable.TableTd className=\"tableBody\"><div class=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n            </StyledTable.TableTr>)\n        if (data) {\n            if (data.length > 0) {\n                allTimes = data.map((data, index) => {\n                    return (\n                        <StyledTable.TableTr key={index} className={(this.props.DeleteAppointments.includes(this.props.data[index])) ? \"delete-appointment-clicked\" : \"delete-appointment\"} onClick={(this.props.updateIsActive) ? () => this.handleAppointmentDeletion(index) : \"\"}>\n                            <StyledTable.TableTd className=\"tableBody\">{data.From}</StyledTable.TableTd>\n                            <StyledTable.TableTd className=\"tableBody\">{data.To}</StyledTable.TableTd>\n                        </StyledTable.TableTr>\n                    )\n                })\n            }\n        }\n        return (\n            <>\n                <StyledTable.TableWithTitleWrapper>\n                    <StyledTable.TableWrapper>\n                        <StyledTable.TableContainer>\n                            <StyledTable.TableHedContainer>\n                                <StyledTable.Tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">رقم القاعة</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">الطاقة الاستيعابية</StyledTable.TableTh>\n                                </StyledTable.Tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                <StyledTable.TableTd className=\"tableBody\">{(LabId !== \"\") ? LabId : <div class=\"spinner tableSp\">Loading...</div>}</StyledTable.TableTd>\n                                <StyledTable.TableTd className=\"tableBody\">{(LabCapacity !== 0) ? LabCapacity : <div class=\"spinner tableSp\">Loading...</div>}</StyledTable.TableTd>\n                            </StyledTable.TableBodyContainer>\n                            <StyledTable.TableHedContainer>\n                                <StyledTable.Tr>\n                                    <StyledTable.TableTh className=\"tableHeader\">بداية الفترة</StyledTable.TableTh>\n                                    <StyledTable.TableTh className=\"tableHeader\">نهاية الفترة</StyledTable.TableTh>\n                                </StyledTable.Tr>\n                            </StyledTable.TableHedContainer>\n                            <StyledTable.TableBodyContainer>\n                                {allTimes}\n                            </StyledTable.TableBodyContainer>\n                        </StyledTable.TableContainer>\n                    </StyledTable.TableWrapper>\n                </StyledTable.TableWithTitleWrapper>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { getAllLabs, RemoveLabById } from '../../ApiConfig/Api';\nimport * as StyledTable from '../../Styles/styledTable'\nimport { dateFormat, timeFormat, DayIs } from '../../helperMethods';\nimport { MdOutlineEditCalendar, MdDeleteSweep } from 'react-icons/md';\nimport Swal from \"sweetalert2\";\n\nexport default class DisplayAllLabs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n        }\n    }\n    componentDidMount() {\n        getAllLabs()\n            .then((response) => {\n                this.setState({ data: response.data })\n            })\n            .catch(error => {\n                console.log(error);\n                Swal.fire({ icon: 'error', title: 'حدث خطا' });\n            });\n    };\n    updateToggleHandler = (labIndex) => {\n        const { data } = this.state\n        const CurrentLab = data[labIndex]\n\n        for (let dataTimeIndex = 0; dataTimeIndex < CurrentLab.Available.length; dataTimeIndex++) {\n            let from = new Date(CurrentLab.Available[dataTimeIndex].From)\n            let to = new Date(CurrentLab.Available[dataTimeIndex].To)\n            from = (from.getFullYear()) + '-' + (from.getMonth() + 1) + '-' + from.getDate() + \" : \" + from.toString().split(\" \")[4]\n            to = (to.getFullYear()) + '-' + (to.getMonth() + 1) + '-' + to.getDate() + \" : \" + to.toString().split(\" \")[4]\n            CurrentLab.Available[dataTimeIndex].From = from\n            CurrentLab.Available[dataTimeIndex].To = to\n        }\n        this.props.onNameChange(CurrentLab.LabCapacity, CurrentLab.LabId, CurrentLab.Available, CurrentLab._id)\n        this.props.handelUpdate()\n    }\n    RemoveLab = (lab_id) => {\n        RemoveLabById(lab_id)\n            .then(response => {\n                if (response.status === 200) {\n                    Swal.fire({ icon: 'success', title: response.data.message });\n                    window.location.reload(false);\n                }\n                else Swal.fire({ icon: 'error', title: `حدث خطا` });\n            });\n    };\n    DeleteHandel = (labIndex) => {\n        const { data } = this.state\n        Swal.fire({\n            title: 'تأكيد الحذف',\n            text: \"سيتم حذف القاعة  وجميع المواعيد المتعلقة بها نهائيا\",\n            icon: 'warning',\n            showDenyButton: true,\n            confirmButtonColor: '#d33',\n            denyButtonColor: '#3085d6',\n            confirmButtonText: 'نعم, تأكيد الحذف  ',\n            denyButtonText: `رجوع`,\n        }).then((result) => {\n            if (result.isConfirmed) {\n                this.RemoveLab(data[labIndex]._id);\n            }\n        })\n    }\n    render() {\n        const { data } = this.state\n        let allLabs = (\n            <StyledTable.TableContainer>\n                <StyledTable.TableBodyContainer>\n                    <StyledTable.TableTr>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                        <StyledTable.TableTd className=\"tableBody\"><div className=\"spinner tableSp\">Loading...</div></StyledTable.TableTd>\n                    </StyledTable.TableTr>\n                </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n        )\n        if (this.state.data.length > 0) {\n            allLabs = data.map((lab, labIndex) => {\n                return (\n                    <StyledTable.TableWithTitleWrapper key={labIndex}>\n                        <StyledTable.TableWrapper>\n                            <StyledTable.TableContainer>\n                                <StyledTable.TableHedContainer>\n                                    <StyledTable.Tr>\n                                        <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الطاقة الاستيعابية</StyledTable.TableTh>\n                                        <StyledTable.TableTh colSpan={2} className=\"tableHeader\"> ادارة القاعة</StyledTable.TableTh>\n                                    </StyledTable.Tr>\n                                </StyledTable.TableHedContainer>\n                                <StyledTable.TableBodyContainer>\n                                    <StyledTable.TableTd className=\"tableBody\">{lab.LabId}</StyledTable.TableTd>\n                                    <StyledTable.TableTd className=\"tableBody\">{lab.LabCapacity}</StyledTable.TableTd>\n                                    <StyledTable.TableTd className=\"tableBody table--operation--container\"><div onClick={() => this.updateToggleHandler(labIndex)} className='single--icon' ><MdOutlineEditCalendar className='setting--icons' color='#00bcd4' /></div>  </StyledTable.TableTd>\n                                    <StyledTable.TableTd> <div onClick={() => this.DeleteHandel(labIndex)} className='single--icon'> <MdDeleteSweep className='setting--icons' color='#ff5722' /> </div></StyledTable.TableTd>\n                                </StyledTable.TableBodyContainer>\n                                <StyledTable.TableHedContainer>\n                                    <StyledTable.Tr>\n                                        <StyledTable.TableTh className=\"tableHeader\"> اليوم</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n                                        <StyledTable.TableTh className=\"tableHeader\"> الحالة</StyledTable.TableTh>\n                                    </StyledTable.Tr>\n                                </StyledTable.TableHedContainer>\n                                <StyledTable.TableBodyContainer>\n                                    {lab.Available.map((available, AvailableIndex) => {\n                                        return (\n                                            <StyledTable.TableTr key={AvailableIndex}>\n                                                <StyledTable.TableTd className=\"tableBody\">{DayIs(available.From)}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(available.From)}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(available.From)} - ${timeFormat(available.To)}`}</StyledTable.TableTd>\n                                                <StyledTable.TableTd className=\"tableBody\">{(available.isAvailable) ? \"متاح\" : \"محجوزة\"}</StyledTable.TableTd>\n                                            </StyledTable.TableTr>\n                                        )\n                                    }\n                                    )}\n                                </StyledTable.TableBodyContainer>\n                            </StyledTable.TableContainer>\n                        </StyledTable.TableWrapper>\n                    </StyledTable.TableWithTitleWrapper>\n                )\n            }\n            )\n        }\n        return (\n            <div>\n                {allLabs}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { LabRegistration, UpdateLabById, RemoveAppointmentByLabId } from '../../ApiConfig/Api';\nimport Swal from \"sweetalert2\";\nimport { MdReduceCapacity, MdNewLabel } from 'react-icons/md';\nimport dayjs from 'dayjs';\nimport TextField from '@mui/material/TextField';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopTimePicker } from '@mui/x-date-pickers/DesktopTimePicker';\nimport InformationTable from './InformationTable';\nimport DisplayAllLabs from './DisplayAllLabs';\nimport { checkOverlappingDates } from '../../helperMethods';\n\nexport default class LabManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      LabId: \"\",\n      LabCapacity: 0,\n      Available: [],\n      yearAndMonth: \"\",\n      day: \"\",\n      timeFrom: \"\",\n      timeTo: \"\",\n      DeleteAppointments: [],\n      updateIsActive: false,\n      _id: \"\"\n    }\n    this.handelSubmit = this.handelSubmit.bind(this);\n  }\n  RegisterNewLab = (data) => {\n    LabRegistration(data)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  LabUpdate = (data) => {\n    UpdateLabById(data, data._id)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n  RemoveAppointment = (data) => {\n    RemoveAppointmentByLabId(data, data._id)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n        else {\n          Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n        }\n      })\n      .catch(error => {\n        if (error.response.data) {\n          if (error.response.data.header === \"all_data_up_to_date\") Swal.fire({ icon: 'warning', title: error.response.data.message });\n        }\n        else Swal.fire({ icon: 'error', title: `حدث خطا` });\n      });\n  };\n\n  deleteLastAvailableItem = e => {\n    e.preventDefault();\n    const newArr = this.state.Available\n    newArr.pop()\n    this.setState({ Available: newArr })\n  }\n  dateAndTimeHandler = e => {\n    e.preventDefault();\n    const { yearAndMonth, day, timeFrom, timeTo, Available } = this.state\n    if (yearAndMonth.toString().length > 0 && day.toString().length > 0 && timeFrom.toString().length > 0 && timeTo.toString().length > 0) {\n      let ym = (dayjs(yearAndMonth.$d).toJSON()).slice(0, 8);\n      let d = day.$D;\n      let tf = timeFrom.$d.toString().split(\" \");\n      let tto = timeTo.$d.toString().split(\" \");\n      tf = tf[4]\n      tto = tto[4]\n      const From = `${ym}${d} ${tf}`\n      const To = `${ym}${d} ${tto}`\n      if (new Date(From).getTime() > new Date(To).getTime()) {\n        Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال الوقت بشكل صحيح\" });\n        this.setState({ timeFrom: \"\", timeTo: \"\" })\n        return;\n      } else {\n        if (checkOverlappingDates(From, To, Available)) {\n          Swal.fire({ icon: 'error', title: \"يوجد تعارض في الوقت المدخل مع وقت سابق\" });\n        }else{       \n             this.setState(prevState => ({\n          Available: [...prevState.Available, { From, To, isAvailable: true, State: true }]\n        }))}\n      }\n    }\n    else Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" })\n  }\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n  handelSubmit = e => {\n    const { LabId, LabCapacity, Available } = this.state, newLab = { LabId, LabCapacity, Available };\n    e.preventDefault();\n    (newLab.Available.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اضافة موعد واحد على الاقل\" }) :\n      (LabId.length > 0 && LabCapacity.length > 0) ? this.RegisterNewLab(newLab) : Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n  };\n  handelDeleteSubmit = e => {\n    const { _id, DeleteAppointments } = this.state, DeleteAppointment = { _id, DeleteAppointments };\n    e.preventDefault();\n    (DeleteAppointment.DeleteAppointments.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اختيار موعد واحد على الاقل\" }) :\n      Swal.fire({\n        title: 'تأكيد الحذف',\n        text: \"سيتم حف جميع المواعيد المحددة نهائيا\",\n        icon: 'warning',\n        showDenyButton: true,\n        confirmButtonColor: '#d33',\n        denyButtonColor: '#3085d6',\n        confirmButtonText: 'نعم, حذف الاوقات المحددة',\n        denyButtonText: `رجوع`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.RemoveAppointment(DeleteAppointment);\n        }\n      })\n  };\n  handelUpdateSubmit = e => {\n    const { _id, LabCapacity, Available } = this.state, UpdateLab = { _id, LabCapacity, Available };\n    e.preventDefault();\n    (UpdateLab.Available.length === 0) ? Swal.fire({ icon: 'error', title: \"الرجاء التأكد  اضافة موعد واحد على الاقل\" }) :\n      (_id.length > 0 && LabCapacity > 0) ? this.LabUpdate(UpdateLab) : Swal.fire({ icon: 'error', title: \"الرجاء التأكد  من ادخال البيانات بشكل صحيح\" });\n  };\n  onChange = (LabCapacity, LabId, Available, _id) => {\n    this.setState({ LabCapacity: LabCapacity, LabId: LabId, Available: Available, _id: _id });\n  }\n  RemoveOnChange = (DeleteAppointments) => {\n    this.setState({ DeleteAppointments: DeleteAppointments });\n  }\n  handelUpdate = () => {\n    this.setState({ updateIsActive: !this.state.updateIsActive })\n  }\n  handelBackClicked = () => {\n    this.setState({ updateIsActive: !this.state.updateIsActive, Available: [], LabId: \"\", LabCapacity: 0 })\n  }\n  render() {\n    const { LabId, LabCapacity, yearAndMonth, day, timeFrom, timeTo, Available, updateIsActive, DeleteAppointments } = this.state;\n    let toDay = new Date();\n    let nextYear = new Date();\n    let nextYearFormate = (nextYear.getFullYear() + 1) + '-' + (nextYear.getMonth() + 1) + '-' + nextYear.getDate();\n    let toDayFormate = (toDay.getFullYear()) + '-' + (toDay.getMonth() + 1) + '-' + toDay.getDate();\n    let selectedMonth = ` ${(dayjs(yearAndMonth.$d).toJSON()).slice(0, 8)}01`\n    let lastDayInMonth = dayjs(selectedMonth).daysInMonth();\n    return (\n      <>\n        <div className=\"LoginContainer lab-in\">\n          <form className='login-form' >\n            {(updateIsActive) ? <input className='lf--submit' onClick={e => this.handelBackClicked(e)} value={'العودة الى ادارة المواعيد -->'} /> : <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"LabId\">\n                <MdNewLabel />\n              </label>\n              <input id=\"LabId\"\n                required\n                className='lf--input'\n                placeholder='رقم القاعة'\n                name=\"LabId\"\n                type=\"text\"\n                onChange={e => this.handleChange(e)}\n                value={LabId} />\n            </div>}\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"LabCapacity\">\n                < MdReduceCapacity />\n              </label>\n              <input\n                required\n                id=\"LabCapacity\"\n                className='lf--input'\n                placeholder='الطاقة الاستيعابية'\n                name=\"LabCapacity\"\n                type='number'\n                onChange={e => this.handleChange(e)}\n                value={LabCapacity} />\n            </div>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <div className=\"flex-row\">\n                <DatePicker\n                  views={['year', 'month']}\n                  label=\"السنة والشهر\"\n                  minDate={dayjs(toDayFormate)}\n                  maxDate={dayjs(nextYearFormate)}\n                  value={yearAndMonth}\n                  onChange={(newValue) => { this.setState({ yearAndMonth: newValue, day: selectedMonth }) }}\n                  // onChange={e => this.handleChange(e)}\n                  renderInput={(params) => <TextField {...params} helperText={null} />}\n                />\n                {(yearAndMonth !== \"\") ? <DatePicker\n                  views={['day']}\n                  label=\"اليوم\"\n                  minDate={selectedMonth}\n                  maxDate={selectedMonth + lastDayInMonth}\n                  value={day}\n                  onChange={(newValue) => { this.setState({ day: newValue }) }}\n                  renderInput={(params) => <TextField {...params} helperText={null} />}\n                /> : \"\"}\n              </div>\n              <div className=\"flex-row\">\n                {(day !== \"\") ? <DesktopTimePicker\n                  label=\"بداية الفترة\"\n                  value={timeFrom}\n                  onChange={(newValue) => { this.setState({ timeFrom: newValue }) }}\n                  renderInput={(params) => <TextField {...params} />}\n                /> : \"\"}\n                {(timeFrom !== \"\") ? <DesktopTimePicker\n                  label=\"نهاية الفترة\"\n                  value={timeTo}\n                  onChange={(newValue) => { this.setState({ timeTo: newValue }) }}\n                  renderInput={(params) => <TextField {...params} />}\n                /> : \"\"}\n              </div>\n            </LocalizationProvider>\n            <input className='lf--submit' type='submit' onClick={e => this.dateAndTimeHandler(e)} value='اضافة الموعد' />\n            <input className='lf--submit' type='submit' onClick={e => this.deleteLastAvailableItem(e)} value='حذف اخر موعد ' />\n            {(updateIsActive) ? <input className='lf--submit' type='submit' onClick={e => this.handelDeleteSubmit(e)} value=' حذف المواعيد المحددة' /> : \"\"}\n            <input className='lf--submit' onClick={(updateIsActive) ? e => this.handelUpdateSubmit(e) : e => this.handelSubmit(e)} value={(updateIsActive) ? \"تحديث بيانات القاعة\" : 'اضافة القاعة وتسجيل المواعيد'} />\n          </form>\n          <InformationTable data={Available} LabId={LabId} LabCapacity={LabCapacity} DeleteAppointments={DeleteAppointments} onNameChange={this.RemoveOnChange} updateIsActive={updateIsActive} />\n        </div>\n        {(!updateIsActive) ? <DisplayAllLabs onNameChange={this.onChange} handelUpdate={this.handelUpdate} /> : \"\"}\n      </>\n    )\n  }\n}","import { Navigate, Outlet } from 'react-router-dom'\nimport { getInfo, checkStorage } from '../components/helperMethods';\nimport React from 'react'\nlet token = null;\nif (checkStorage()) token = getInfo().data.Role\nconst PrivateRouteInstructor = () => {\n  return (\n    token === \"Instructor\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nconst PrivateRouteStudents = () => {\n  return (\n    token === \"Student\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nconst PrivateRouteModerator = () => {\n  return (\n    token === \"SysAdmin\" ? <Outlet /> : <Navigate to='/' />\n  )\n}\nexport { PrivateRouteInstructor, PrivateRouteStudents, PrivateRouteModerator };","import React, { Component } from 'react'\nimport '../Styles/login.css';\nimport Swal from \"sweetalert2\";\nimport { getInfo } from \"../helperMethods\";\nimport { createBrowserHistory } from 'history';\nimport { IoMdFingerPrint } from 'react-icons/io';\nimport { CgLastpass } from 'react-icons/cg';\nimport logo from \"../Images/logo.png\";\nimport { InstructorsLogin, StudentsLogin } from \"../ApiConfig/Api\"\nconst history = createBrowserHistory();\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Id: \"\",\n      password: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handelSubmit = this.handelSubmit.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  handelSubmit(e) {\n    e.preventDefault();\n    const { Id, password } = this.state\n    const InstructorLoginCredential = { InstructorId: Id, password: password }\n    const loginCredential = { StudentId: Id, password: password }\n\n    let checkValidation = true\n    Object.entries(this.state).forEach(([key, value]) => {\n      if (value === \"\") {\n        return checkValidation = false;\n      }\n    })\n    if (checkValidation === false) {\n      Swal.fire({ icon: 'error', title: \"تأكد من ادخال البيانات بشكل صحيح\" });\n    } else {\n      StudentsLogin(loginCredential)\n        .then(response => {\n          try {\n            console.log(response.data.success);\n            if (response.data.success === false) {\n              InstructorsLogin(InstructorLoginCredential)\n                .then(res => {\n                  try {\n                    if (res.data.success !== false) {\n                      localStorage.setItem(\"currentUser\", res.data.token);\n                      localStorage.setItem('CountTime', new Date());\n                      let jwt = getInfo().data.Role;\n                      if (jwt === undefined) {\n                        history.push(\"/\");\n                        Swal.fire(` ${jwt}`, \"\", 'error');\n                      }\n                      else if (jwt === \"Instructor\") {\n                        Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                        history.push('#/Instructor')\n                      } else if (jwt === \"SysAdmin\") {\n                        history.push(\"#/Moderator/Home\");\n                        Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                      }\n                      window.location.reload(false);\n                      return res;\n                    } else {\n                      Swal.fire(` اسم المستخدم او الرقم السري غير صحيح`, \"\", 'error');\n                    }\n                  } catch {\n                    console.log(res);\n                    Swal.fire({ icon: 'error', title: res.data });\n\n                  }\n                })\n            } else {\n              localStorage.setItem(\"currentUser\", response.data.token);\n              localStorage.setItem('CountTime', new Date());\n              let jwt = getInfo().data;\n              if (jwt === undefined) {\n                history.push(\"/\");\n                Swal.fire(` ${jwt}`, \"حدث خطأ\", 'error');\n              } else {\n                Swal.fire({ icon: 'success', title: ` مرحبا  ${getInfo().data.FullName} `, showConfirmButton: false, timer: 1500 });\n                history.push('#/Students/Home')\n                window.location.reload(false);\n              }\n            }\n          } catch {\n            console.log(response);\n          }\n        })\n    }\n  }\n  render() {\n    return (\n      <>\n        <div className=\"LoginContainer\">\n          <form className='login-form' onSubmit={e => this.handelSubmit(e)}>\n            <div className=\"login-logo-container\">\n              <img className='logo' src={logo} alt=\"logo\" />\n            </div>\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"Id\">\n                <IoMdFingerPrint />\n              </label>\n              <input id=\"username\"\n                required\n                className='lf--input'\n                placeholder='اسم المستخدم'\n                name=\"Id\"\n                type=\"text\"\n                onChange={e => this.handleChange(e)}\n                value={this.state.Id} />\n            </div>\n            <div className=\"flex-row\">\n              <label className=\"lf--label\" htmlFor=\"password\">\n                <CgLastpass />\n              </label>\n              <input id=\"password\"\n                className='lf--input'\n                placeholder='كلمة المرور'\n                name=\"password\"\n                type='password'\n                onChange={e => this.handleChange(e)}\n                value={this.state.password} />\n            </div>\n            <input className='lf--submit' type='submit' value='تسجيل الدخول' onClick={e => this.handelSubmit(e)} />\n          </form>\n        </div>\n      </>\n    )\n  }\n}\nexport { Login };","import React, { useState, useEffect } from 'react'\nimport { FaBars } from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport * as MainHeader from '../Styles/MainHeaderStyle'\nimport { animateScroll as scroll } from 'react-scroll';\nimport logo from '../Images/logo.png'\nimport { Outlet } from 'react-router-dom'\nimport {getFullName} from '../helperMethods'\nexport  const  StudentsNav = ({ toggle }) => {\n  const [scrollNav, setScroll] = useState(false);\n  const navOnChange = () => {\n      if (window.scrollY >= 30) {\n          setScroll(true);\n      } else {\n          setScroll(false);\n      }\n  };\n  useEffect(() => {\n      window.addEventListener('scroll', navOnChange);\n  }, []);\n  const toggleHandler = () => {\n      scroll.scrollToTop();\n  };\n  const logout = (e) => {\n      localStorage.clear();\n      window.location.reload(false);\n  }\n  return (\n      <>\n          <IconContext.Provider value={{ color: '#607d8b' }}>\n              <MainHeader.Nav scrollNav={scrollNav}>\n                  <MainHeader.NavContainer >\n                      <MainHeader.NavLogo to='/Students/Home' onClick={toggleHandler}><MainHeader.Image scrollNav={scrollNav} duration={500} src={logo} alt=\"\" /> </MainHeader.NavLogo>\n                      <MainHeader.ResponsiveIcon onClick={toggle}>\n                          <FaBars className=\"FaBarsIcon\" />\n                      </MainHeader.ResponsiveIcon>\n                      <MainHeader.NavMenu>\n                          <MainHeader.NavItem>\n                              <MainHeader.NavLinks\n                                  to={'/Students/ExamReservation'}\n                                  smooth={true.toString()}\n                                  duration={500}\n                                  spy={true.toString()}\n                                  exact={true.toString()}\n                                 offset={-80}\n                              > حجز اختبار</MainHeader.NavLinks>\n                          </MainHeader.NavItem>\n                          {/* | */}\n                      </MainHeader.NavMenu>\n                      <MainHeader.LogoutContainer>\n                          <MainHeader.Logout\n                              duration={500}\n                              spy={true.toString()}\n                              exact={true.toString()}\n                              onClick={e => logout(e)}>\n                              تسجيل الخروج\n                          </MainHeader.Logout>\n                      </MainHeader.LogoutContainer>\n                  </MainHeader.NavContainer>\n              </MainHeader.Nav>\n          </IconContext.Provider>\n          <div>\n          <h3 className='display--name'>\n            {getFullName()}\n          </h3>\n        </div>\n          <Outlet />\n      </>\n  )\n}\n","import React from 'react'\nimport { SidebarContainer,Icon,CloseIcon, SidebarWrapper, SidebarMenu, SidebarLink,SideBtnWrap, SidebarRoute  } from '../Styles/SidebarElements';\nimport { Outlet } from 'react-router-dom'\n\nconst logout = (e) => {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\nexport default function StudentsSide({isOpen,toggle}){\n  return (\n    <>\n    <SidebarContainer isOpen={isOpen} onClick={toggle}>\n    <Icon onClick={toggle}>\n       <CloseIcon />\n    </Icon>\n    <SidebarWrapper>\n       <SidebarMenu>\n       <SidebarLink to=\"/Students/Home\" onClick={toggle}>الرئيسية </SidebarLink>\n        <SidebarLink to=\"/Students/ExamReservation\" onClick={toggle}>حجز اختبار</SidebarLink>\n       </SidebarMenu>\n       <SideBtnWrap>\n       <SidebarRoute  onClick={e => logout(e)}>تسجيل الخروج</SidebarRoute>\n       </SideBtnWrap>\n    </SidebarWrapper>\n   </SidebarContainer>\n   <Outlet />\n   </>\n  )\n}\n","import React, { Component } from 'react'\nimport { getAllBookedLabByStudentId, RemoveExamBookedByStudentId, expiredAppointment } from '../ApiConfig/Api';\nimport { getId, dateFormat, timeFormat, getHoursDiff, DayIs, getInfo } from '../helperMethods';\nimport * as StyledTable from '../Styles/styledTable'\nimport { MdDeleteSweep } from 'react-icons/md';\nimport FinishedExams from './FinishedExams'\nimport Swal from \"sweetalert2\";\n\nimport '../Styles/spinner.css'\nexport default class StudentsHome extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      currentBooking: [],\n      removeBookingLimit: 24,\n      finishedExam: [],\n    }\n  }\n\n  componentDidMount() {\n    // Mack API call \n    getAllBookedLabByStudentId(getId())\n      .then((response) => {\n        console.log(response);\n        this.setState({ currentBooking: response.data.currentBooking, finishedExam: response.data.finishedExam })\n      })\n\n      .catch((error) => {\n      })\n    expiredAppointment();\n  }\n  removeBookedAppointment = (id, currentAppointment) => {\n    RemoveExamBookedByStudentId(id, currentAppointment)\n      .then(response => {\n        if (response.status === 200) {\n          Swal.fire({ icon: 'success', title: response.data.message });\n          window.location.reload(false);\n        }\n      }).catch(error => {\n        if (error.response.status === 405) Swal.fire({ icon: 'warning', title: error.response.data.message });\n        else { Swal.fire({ icon: 'error', title: `حدث خطا` }) }\n      })\n  }\n  removeAppointment = (index) => {\n    const { currentBooking, removeBookingLimit } = this.state\n    if (getHoursDiff(new Date(currentBooking[index].From), new Date()) <= removeBookingLimit) Swal.fire({ icon: 'warning', title: \"لايمكن حذف او تعديل الاختبار قبل 24 ساعة من موعده\", confirmButtonText: 'موافق ', })\n    else {\n      Swal.fire({\n        title: 'تأكيد الحذف',\n        text: \"سيتم حذف الموعد نهائيا\",\n        icon: 'warning',\n        showDenyButton: true,\n        confirmButtonColor: '#d33',\n        denyButtonColor: '#3085d6',\n        confirmButtonText: 'نعم, تأكيد الحذف  ',\n        denyButtonText: `رجوع`,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.removeBookedAppointment(getId(), { BookingRefId: currentBooking[index]._id })\n        }\n      })\n    }\n  }\n\n  render() {\n    const { currentBooking, finishedExam } = this.state\n    let allExam = (\n      <StyledTable.TableTr>\n        <StyledTable.TableTd colSpan={5} className=\"tableBody\">لايوجد اختبارات محجوزة</StyledTable.TableTd>\n      </StyledTable.TableTr>\n    )\n    if (currentBooking) {\n      if (currentBooking.length !== 0) {\n        allExam = currentBooking.map((BookedLab, BookedLabIndex) => {\n          return (\n            <StyledTable.TableTr key={BookedLabIndex}>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.LabReference}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{BookedLab.For}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody\">{DayIs(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{dateFormat(BookedLab.From)}</StyledTable.TableTd>\n              <StyledTable.TableTd className=\"tableBody date-cell\">{`${timeFormat(BookedLab.From)} - ${timeFormat(BookedLab.To)}`}</StyledTable.TableTd>\n              {(getInfo().data.DoneTestOn && getInfo().data.DoneTestOn.length !== 0) ?\n                getInfo().data.DoneTestOn.map(currentSubject => {\n                  return <StyledTable.TableTd className=\"tableBody\">{(currentSubject.subject === BookedLab.For) ? 3 - currentSubject.AttemptsCount : 2}</StyledTable.TableTd>\n                }) : <StyledTable.TableTd className=\"tableBody\">2</StyledTable.TableTd>}\n              <StyledTable.TableTd className=\"tableBody table--operation--container\"><div onClick={() => this.removeAppointment(BookedLabIndex)} className='single--icon' > <MdDeleteSweep className='setting--icons' color='#ff5722' /></div>  </StyledTable.TableTd>\n            </StyledTable.TableTr>\n          )\n        })\n      }\n    }\n    return (\n      <>\n        <StyledTable.TableWithTitleWrapper>\n          <StyledTable.TableTitle>اختبارات قادمة</StyledTable.TableTitle>\n          <StyledTable.TableWrapper>\n            <StyledTable.TableContainer>\n              <StyledTable.TableHedContainer>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableHedContainer>\n                <StyledTable.TableTr>\n                  <StyledTable.TableTh className=\"tableHeader\"> رقم القاعة</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> المادة </StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> اليوم</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> التاريخ</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> الوقت</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\">المحاولات المتبقية</StyledTable.TableTh>\n                  <StyledTable.TableTh className=\"tableHeader\"> ادارة الحجز</StyledTable.TableTh>\n                </StyledTable.TableTr>\n              </StyledTable.TableHedContainer>\n              <StyledTable.TableBodyContainer>\n                {allExam}\n              </StyledTable.TableBodyContainer>\n            </StyledTable.TableContainer>\n          </StyledTable.TableWrapper>\n        </StyledTable.TableWithTitleWrapper>\n        {(finishedExam.length > 0) ?\n          <StyledTable.TableWithTitleWrapper>\n            <StyledTable.TableTitle>اختبارات تم الانتهاء منها</StyledTable.TableTitle>\n            <FinishedExams finishedExam={finishedExam} />\n          </StyledTable.TableWithTitleWrapper>\n          : \"\"}\n      </>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport { HashRouter as Router, Routes, Route } from 'react-router-dom';\nimport InstructorNav from './components/Instructors/InstructorNav';\nimport InstructorSidebar from './components/Instructors/InstructorSidebar';\nimport InstructorHome from './components/Instructors/InstructorHome';\nimport AddStudent from './components/Instructors/AddStudent';\nimport SelectSubjectMod from './components/Instructors/SelectSubjectMod';\n\nimport ModeratorNave from './components/Moderator/ModeratorNave';\nimport Sidebar from './components/Moderator/ModeratorSidebar';\nimport Home from './components/Moderator/Home'\nimport InstructorsManagement from './components/Moderator/InstructorManagement/InstructorsManagement';\nimport LabsManagement from './components/Moderator/LabsManagement/LabManagement';\nimport StudentManagement from './components/Moderator/StudentManagement'\nimport { PrivateRouteInstructor, PrivateRouteModerator,PrivateRouteStudents } from './RouteManagement/PrivateRoutes';\nimport { Login } from './components/Login/Login';\n\nimport {StudentsNav} from './components/Students/StudentsNav'\nimport StudentsSide from './components/Students/StudentsSide'\nimport StudentsHome from './components/Students/StudentsHome'\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const toggle = () => {\n    setIsOpen(!isOpen)\n  }\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route element={<PrivateRouteStudents />}>\n        <Route element={<StudentsNav toggle={toggle} />} path=\"/Students\">\n          <Route element={<StudentsSide toggle={toggle} isOpen={isOpen} />} path=\"/Students\">\n            <Route element={<SelectSubjectMod />} path=\"ExamReservation\" />\n             <Route element={<StudentsHome />} path=\"Home\" />\n            {/* <Route element={<SelectSubjectMod />} path='SelectSubjectMod' /> */} \n          </Route>\n          </Route>\n        </Route>\n        <Route element={<PrivateRouteInstructor />}>\n        <Route element={<InstructorNav toggle={toggle} />} path=\"/Instructor\">\n          <Route element={<InstructorSidebar toggle={toggle} isOpen={isOpen} />} path=\"/Instructor\">\n            <Route element={<InstructorHome />} path=\"Home\" />\n            <Route element={<AddStudent />} path='AddStudent' />\n            <Route element={<SelectSubjectMod />} path='LabBooking' />\n          </Route>\n          </Route>\n        </Route>\n        <Route element={<PrivateRouteModerator />}>\n          <Route element={<ModeratorNave toggle={toggle} />} path=\"/Moderator\">\n          <Route element={<Sidebar toggle={toggle} isOpen={isOpen} />} path=\"/Moderator\">\n            <Route element={<Home />} path=\"Home\" />\n            <Route element={<LabsManagement />} path='LabsManagement' />\n            <Route element={<InstructorsManagement />} path='InstructorsManagement' />\n            <Route element={<StudentManagement />} path='StudentManagement' />\n          </Route>\n          </Route>\n        </Route>\n      </Routes>\n    </Router>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f9be1ee0.png\";"],"sourceRoot":""}